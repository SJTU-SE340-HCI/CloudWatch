{"remainingRequest":"D:\\HCI\\github\\node_modules\\thread-loader\\dist\\cjs.js!D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js!D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\components\\record.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\github\\src\\components\\record.vue","mtime":1593418846938},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1589122702323},{"path":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js","mtime":1589122690916},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.entries\";\nimport \"core-js/modules/es6.number.constructor\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      isPresenting: false,\n      isRecording: false,\n      recordedBarrages: new Map()\n    };\n  },\n  methods: {\n    beginRecord: function beginRecord() {\n      this.isRecording = true;\n      /*\r\n      将开始时间存入vuex\r\n      将录制中状态存入vuex，让弹幕发送时将弹幕信息存入vuex\r\n      开始就自动打开连麦按钮，用户可以选择关闭\r\n      */\n\n      this.$store.commit('setRecordState', true);\n      this.$store.commit('setBeginRecordTime');\n      this.$store.commit('clearBarrage');\n      /*if(this.recordVoice) {\r\n          this.recordVoice(true)\r\n      }*/\n    },\n    finishRecord: function finishRecord() {\n      this.isRecording = false;\n      /* 停止录制结束连麦 */\n\n      this.$store.commit('setRecordState', false);\n      /*if(this.recordVoice) {\r\n          this.recordVoice(false)\r\n      }*/\n      // 将vuex中的弹幕消息发送到后端\n\n      axios({\n        method: 'post',\n        url: 'http://47.103.30.166:8020/Room/textRecord/Receive',\n        headers: {},\n        params: {\n          video_id: this.$store.getters.getCurrentVideoId\n        },\n        data: this.$store.getters.getBarrages\n      });\n    },\n    presentRecord: function presentRecord() {\n      var _this = this;\n\n      /*\r\n      从后端拿到弹幕消息\r\n      根据当前开始的时间轮询弹幕消息的队列\r\n      */\n      this.isPresenting = true;\n      var videoid = new Number(this.$store.getters.getCurrentVideoId);\n      axios.get('http://47.103.30.166:8020/Room/textRecord/findByVideoId', {\n        params: {\n          video_id: videoid\n        }\n      }).then(function (res) {\n        _this.recordedBarrages = res.data;\n      }); // 轮询\n\n      var timeId = setInterval(function () {\n        if (_this.isPresenting == false) {\n          clearInterval(timeId);\n        }\n\n        _this.sendReadyBarrage();\n      }, 1000);\n    },\n    finishPresent: function finishPresent() {\n      this.isPresenting = false;\n    },\n    sendReadyBarrage: function sendReadyBarrage() {\n      var _this2 = this;\n\n      Object.entries(this.recordedBarrages).map(function (key, value) {\n        var barrageTime = Number(key[0]) + Number(_this2.$store.getters.getRecordingBeginTime);\n        var cur = Date.now();\n\n        if (barrageTime >= cur && barrageTime < cur + 1000) {\n          console.log('hit');\n          console.log(barrageTime, cur);\n          console.log(key[1]);\n\n          _this2.$parent.sendBarrage(key[1]);\n        }\n      });\n    },\n    beginVoiceCommunicate: function beginVoiceCommunicate() {\n      this.$refs.VoiceCommunicate.createClient();\n    }\n  }\n};",null]}