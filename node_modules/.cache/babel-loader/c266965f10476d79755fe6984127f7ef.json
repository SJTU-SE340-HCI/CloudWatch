{"remainingRequest":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js!D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\github\\src\\index.vue","mtime":1593418846943},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js","mtime":1589122690916},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _Notification2 from \"element-ui/lib/theme-chalk/notification.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Notification from \"element-ui/lib/notification\";\nimport \"core-js/modules/es6.function.name\";\nimport _defineProperty from \"D:\\\\HCI\\\\github\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex'; //import SideBar from './components/layout/side-bar'\n\nimport Login from \"./components/user/login\";\nimport { translateGroupSystemNotice } from \"./utils/common\";\nimport { ACTION } from \"./utils/trtcCustomMessageMap\";\nimport MTA from \"./utils/mta\";\nimport Home from \"./components/home\";\nexport default {\n  title: 'CloudWatch',\n  data: function data() {\n    return {};\n  },\n  components: {\n    Login: Login,\n    Home: Home\n  },\n  computed: _objectSpread({}, mapState({\n    currentUserProfile: function currentUserProfile(state) {\n      return state.user.currentUserProfile;\n    },\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    isLogin: function isLogin(state) {\n      return state.user.isLogin;\n    },\n    isSDKReady: function isSDKReady(state) {\n      return state.user.isSDKReady;\n    },\n    isBusy: function isBusy(state) {\n      return state.video.isBusy;\n    },\n    userID: function userID(state) {\n      return state.user.userID;\n    }\n  }), {\n    // 是否显示 Loading 状态\n    showLoading: function showLoading() {\n      return !this.isSDKReady;\n    }\n  }),\n  mounted: function mounted() {\n    // 初始化监听器\n    this.initListener();\n  },\n  watch: {\n    isLogin: function isLogin(next) {\n      if (next) {\n        MTA.clickStat('link_two', {\n          show: 'true'\n        });\n      }\n    }\n  },\n  methods: {\n    initListener: function initListener() {\n      // 登录成功后会触发 SDK_READY 事件，该事件触发后，可正常使用 SDK 接口\n      this.tim.on(this.TIM.EVENT.SDK_READY, this.onReadyStateUpdate, this); // SDK NOT READT\n\n      this.tim.on(this.TIM.EVENT.SDK_NOT_READY, this.onReadyStateUpdate, this); // 被踢出\n\n      this.tim.on(this.TIM.EVENT.KICKED_OUT, this.onKickOut); // SDK内部出错\n\n      this.tim.on(this.TIM.EVENT.ERROR, this.onError); // 收到新消息\n\n      this.tim.on(this.TIM.EVENT.MESSAGE_RECEIVED, this.onReceiveMessage); // 会话列表更新\n\n      this.tim.on(this.TIM.EVENT.CONVERSATION_LIST_UPDATED, this.onUpdateConversationList); // 群组列表更新\n\n      this.tim.on(this.TIM.EVENT.GROUP_LIST_UPDATED, this.onUpdateGroupList); // 收到新的群系统通知\n\n      this.tim.on(this.TIM.EVENT.GROUP_SYSTEM_NOTICE_RECEIVED, this.onReceiveGroupSystemNotice);\n    },\n    onReceiveMessage: function onReceiveMessage(_ref) {\n      var messageList = _ref.data;\n      this.handleVideoMessage(messageList);\n      this.handleAt(messageList);\n      this.handleQuitGroupTip(messageList);\n      this.$store.commit('pushCurrentMessageList', messageList);\n      this.$refs.home.addToList(messageList);\n    },\n    onError: function onError(_ref2) {\n      var data = _ref2.data;\n\n      if (data.message !== 'Network Error') {\n        this.$store.commit('showMessage', {\n          message: data.message,\n          type: 'error'\n        });\n      }\n    },\n    onReadyStateUpdate: function onReadyStateUpdate(_ref3) {\n      var _this = this;\n\n      var name = _ref3.name;\n      var isSDKReady = name === this.TIM.EVENT.SDK_READY ? true : false;\n      this.$store.commit('toggleIsSDKReady', isSDKReady);\n\n      if (isSDKReady) {\n        this.tim.getMyProfile().then(function (_ref4) {\n          var data = _ref4.data;\n\n          _this.$store.commit('updateCurrentUserProfile', data);\n        }).catch(function (error) {\n          _this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          });\n        });\n        this.$store.dispatch('getBlacklist');\n      }\n    },\n    kickedOutReason: function kickedOutReason(type) {\n      switch (type) {\n        case this.TIM.TYPES.KICKED_OUT_MULT_ACCOUNT:\n          return '由于多实例登录';\n\n        case this.TIM.TYPES.KICKED_OUT_MULT_DEVICE:\n          return '由于多设备登录';\n\n        case this.TIM.TYPES.KICKED_OUT_USERSIG_EXPIRED:\n          return '由于 userSig 过期';\n\n        default:\n          return '';\n      }\n    },\n    onKickOut: function onKickOut(event) {\n      this.$store.commit('showMessage', {\n        message: \"\".concat(this.kickedOutReason(event.data.type), \"\\u88AB\\u8E22\\u51FA\\uFF0C\\u8BF7\\u91CD\\u65B0\\u767B\\u5F55\\u3002\"),\n        type: 'error'\n      });\n      this.$store.commit('toggleIsLogin', false);\n      this.$store.commit('reset');\n    },\n    onUpdateConversationList: function onUpdateConversationList(event) {\n      this.$store.commit('updateConversationList', event.data);\n    },\n    onUpdateGroupList: function onUpdateGroupList(event) {\n      this.$store.commit('updateGroupList', event.data);\n    },\n    onReceiveGroupSystemNotice: function onReceiveGroupSystemNotice(event) {\n      var _this2 = this;\n\n      var isKickedout = event.data.type === 4;\n      var isCurrentConversation = \"GROUP\".concat(event.data.message.payload.groupProfile.groupID) === this.currentConversation.conversationID; // 在当前会话被踢，需reset当前会话\n\n      if (isKickedout && isCurrentConversation) {\n        this.$store.commit('resetCurrentConversation');\n      }\n\n      _Notification({\n        title: '新系统通知',\n        message: translateGroupSystemNotice(event.data.message),\n        duration: 3000,\n        onClick: function onClick() {\n          var SystemConversationID = '@TIM#SYSTEM';\n\n          _this2.$store.dispatch('checkoutConversation', SystemConversationID);\n        }\n      });\n    },\n\n    /**\r\n     * 处理 @ 我的消息\r\n     * @param {Message[]} messageList\r\n     */\n    handleAt: function handleAt(messageList) {\n      var _this3 = this;\n\n      // 筛选有 @ 符号的文本消息\n      var atTextMessageList = messageList.filter(function (message) {\n        return message.type === _this3.TIM.TYPES.MSG_TEXT && message.payload.text.includes('@');\n      });\n\n      for (var i = 0; i < atTextMessageList.length; i++) {\n        var message = atTextMessageList[i];\n        var matched = message.payload.text.match(/@\\w+/g);\n\n        if (!matched) {\n          continue;\n        } // @ 我的\n\n\n        if (matched.includes(\"@\".concat(this.currentUserProfile.userID))) {\n          // 当前页面不可见时，调用window.Notification接口，系统级别通知。\n          if (this.$store.getters.hidden) {\n            this.notifyMe(message);\n          }\n\n          _Notification({\n            title: \"\\u6709\\u4EBA\\u5728\\u7FA4\".concat(message.conversationID.slice(5), \"\\u63D0\\u5230\\u4E86\\u4F60\"),\n            message: message.payload.text,\n            duration: 3000\n          });\n\n          this.$bus.$emit('new-messsage-at-me', {\n            data: {\n              conversationID: message.conversationID\n            }\n          });\n        }\n      }\n    },\n    selectConversation: function selectConversation(conversationID) {\n      if (conversationID !== this.currentConversation.conversationID) {\n        this.$store.dispatch('checkoutConversation', conversationID);\n      }\n    },\n    isJsonStr: function isJsonStr(str) {\n      try {\n        JSON.parse(str);\n        return true;\n      } catch (_unused) {\n        return false;\n      }\n    },\n    handleVideoMessage: function handleVideoMessage(messageList) {\n      var _this4 = this;\n\n      var videoMessageList = messageList.filter(function (message) {\n        return message.type === _this4.TIM.TYPES.MSG_CUSTOM && _this4.isJsonStr(message.payload.data);\n      });\n      if (videoMessageList.length === 0) return;\n      var videoPayload = JSON.parse(videoMessageList[0].payload.data);\n\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_DIALING) {\n        if (this.isBusy) {\n          this.$bus.$emit('busy', videoPayload, videoMessageList[0]);\n          return;\n        }\n\n        this.$store.commit('GENERATE_VIDEO_ROOM', videoPayload.room_id);\n        this.selectConversation(videoMessageList[0].conversationID); // 切换当前会话页\n\n        if (videoMessageList[0].from !== this.userID) {\n          this.$bus.$emit('isCalled');\n        }\n      }\n\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_SPONSOR_CANCEL) {\n        this.$bus.$emit('missCall');\n      }\n\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_REJECT) {\n        this.$bus.$emit('isRefused');\n      }\n\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_SPONSOR_TIMEOUT) {\n        this.$bus.$emit('missCall');\n      }\n\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_ACCEPTED) {\n        this.$bus.$emit('isAccept');\n      }\n\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_HANGUP) {\n        this.$bus.$emit('isHungUp');\n      }\n\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_LINE_BUSY) {\n        this.$bus.$emit('isRefused');\n      }\n\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_ERROR) {\n        this.$bus.$emit('isRefused');\n      }\n    },\n\n    /**\r\n     * 使用 window.Notification 进行全局的系统通知\r\n     * @param {Message} message\r\n     */\n    notifyMe: function notifyMe(message) {\n      var _this5 = this;\n\n      // 需检测浏览器支持和用户授权\n      if (!('Notification' in window)) {\n        return;\n      } else if (window.Notification.permission === 'granted') {\n        this.handleNotify(message);\n      } else if (window.Notification.permission !== 'denied') {\n        window.Notification.requestPermission().then(function (permission) {\n          // 如果用户同意，就可以向他们发送通知\n          if (permission === 'granted') {\n            _this5.handleNotify(message);\n          }\n        });\n      }\n    },\n    handleNotify: function handleNotify(message) {\n      var _this6 = this;\n\n      var notification = new window.Notification('有人提到了你', {\n        icon: 'https://webim-1252463788.file.myqcloud.com/demo/img/logo.dc3be0d4.png',\n        body: message.payload.text\n      });\n\n      notification.onclick = function () {\n        window.focus();\n\n        _this6.$store.dispatch('checkoutConversation', message.conversationID);\n\n        notification.close();\n      };\n    },\n    handleLinkClick: function handleLinkClick() {\n      MTA.clickStat('link_two', {\n        click: 'true'\n      });\n    },\n\n    /**\r\n     * 收到有群成员退群/被踢出的groupTip时，需要将相关群成员从当前会话的群成员列表中移除\r\n     * @param {Message[]} messageList\r\n     */\n    handleQuitGroupTip: function handleQuitGroupTip(messageList) {\n      var _this7 = this;\n\n      // 筛选出当前会话的退群/被踢群的 groupTip\n      var groupTips = messageList.filter(function (message) {\n        return _this7.currentConversation.conversationID === message.conversationID && message.type === _this7.TIM.TYPES.MSG_GRP_TIP && (message.payload.operationType === _this7.TIM.TYPES.GRP_TIP_MBR_QUIT || message.payload.operationType === _this7.TIM.TYPES.GRP_TIP_MBR_KICKED_OUT);\n      }); // 清理当前会话的群成员列表\n\n      if (groupTips.length > 0) {\n        groupTips.forEach(function (groupTip) {\n          if (Array.isArray(groupTip.payload.userIDList) || groupTip.payload.userIDList.length > 0) {\n            _this7.$store.commit('deleteGroupMemberList', groupTip.payload.userIDList);\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAA,QAAA,QAAA,MAAA,C,CACA;;AACA,OAAA,KAAA;AACA,SAAA,0BAAA;AACA,SAAA,MAAA;AACA,OAAA,GAAA;AAEA,OAAA,IAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA,YADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA,EAAA;AAGA,GANA;AAOA,EAAA,UAAA,EAAA;AACA,IAAA,KAAA,EAAA,KADA;AAEA,IAAA,IAAA,EAAA;AAFA,GAPA;AAYA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,kBAAA,EAAA,4BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,kBAAA;AAAA,KADA;AAEA,IAAA,mBAAA,EAAA,6BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA,CAAA,mBAAA;AAAA,KAFA;AAGA,IAAA,OAAA,EAAA,iBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,OAAA;AAAA,KAHA;AAIA,IAAA,UAAA,EAAA,oBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,UAAA;AAAA,KAJA;AAKA,IAAA,MAAA,EAAA,gBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA,CAAA,MAAA;AAAA,KALA;AAMA,IAAA,MAAA,EAAA,gBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,MAAA;AAAA;AANA,GAAA,CADA;AASA;AACA,IAAA,WAVA,yBAUA;AACA,aAAA,CAAA,KAAA,UAAA;AACA;AAZA,IAZA;AA2BA,EAAA,OA3BA,qBA2BA;AACA;AACA,SAAA,YAAA;AACA,GA9BA;AAgCA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AACA,UAAA,IAAA,EAAA;AACA,QAAA,GAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,UAAA,IAAA,EAAA;AAAA,SAAA;AACA;AACA;AALA,GAhCA;AAwCA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,0BACA;AACA;AACA,WAAA,GAAA,CAAA,EAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,SAAA,EAAA,KAAA,kBAAA,EAAA,IAAA,EAFA,CAGA;;AACA,WAAA,GAAA,CAAA,EAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,aAAA,EAAA,KAAA,kBAAA,EAAA,IAAA,EAJA,CAKA;;AACA,WAAA,GAAA,CAAA,EAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,UAAA,EAAA,KAAA,SAAA,EANA,CAOA;;AACA,WAAA,GAAA,CAAA,EAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,KAAA,EAAA,KAAA,OAAA,EARA,CASA;;AACA,WAAA,GAAA,CAAA,EAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,gBAAA,EAAA,KAAA,gBAAA,EAVA,CAWA;;AACA,WAAA,GAAA,CAAA,EAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,yBAAA,EAAA,KAAA,wBAAA,EAZA,CAaA;;AACA,WAAA,GAAA,CAAA,EAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,kBAAA,EAAA,KAAA,iBAAA,EAdA,CAeA;;AACA,WAAA,GAAA,CAAA,EAAA,CAAA,KAAA,GAAA,CAAA,KAAA,CAAA,4BAAA,EAAA,KAAA,0BAAA;AACA,KAlBA;AAmBA,IAAA,gBAnBA,kCAmBA;AAAA,UAAA,WAAA,QAAA,IAAA;AACA,WAAA,kBAAA,CAAA,WAAA;AACA,WAAA,QAAA,CAAA,WAAA;AACA,WAAA,kBAAA,CAAA,WAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,wBAAA,EAAA,WAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA,SAAA,CAAA,WAAA;AACA,KAzBA;AA0BA,IAAA,OA1BA,0BA0BA;AAAA,UAAA,IAAA,SAAA,IAAA;;AACA,UAAA,IAAA,CAAA,OAAA,KAAA,eAAA,EAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA;AACA,UAAA,OAAA,EAAA,IAAA,CAAA,OADA;AAEA,UAAA,IAAA,EAAA;AAFA,SAAA;AAIA;AACA,KAjCA;AAkCA,IAAA,kBAlCA,qCAkCA;AAAA;;AAAA,UAAA,IAAA,SAAA,IAAA;AACA,UAAA,UAAA,GAAA,IAAA,KAAA,KAAA,GAAA,CAAA,KAAA,CAAA,SAAA,GAAA,IAAA,GAAA,KAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,kBAAA,EAAA,UAAA;;AAEA,UAAA,UAAA,EAAA;AACA,aAAA,GAAA,CACA,YADA,GAEA,IAFA,CAEA,iBAAA;AAAA,cAAA,IAAA,SAAA,IAAA;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,0BAAA,EAAA,IAAA;AACA,SAJA,EAKA,KALA,CAKA,UAAA,KAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA;AACA,YAAA,IAAA,EAAA,OADA;AAEA,YAAA,OAAA,EAAA,KAAA,CAAA;AAFA,WAAA;AAIA,SAVA;AAWA,aAAA,MAAA,CAAA,QAAA,CAAA,cAAA;AACA;AACA,KApDA;AAqDA,IAAA,eArDA,2BAqDA,IArDA,EAqDA;AACA,cAAA,IAAA;AACA,aAAA,KAAA,GAAA,CAAA,KAAA,CAAA,uBAAA;AACA,iBAAA,SAAA;;AACA,aAAA,KAAA,GAAA,CAAA,KAAA,CAAA,sBAAA;AACA,iBAAA,SAAA;;AACA,aAAA,KAAA,GAAA,CAAA,KAAA,CAAA,0BAAA;AACA,iBAAA,eAAA;;AACA;AACA,iBAAA,EAAA;AARA;AAUA,KAhEA;AAiEA,IAAA,SAjEA,qBAiEA,KAjEA,EAiEA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA;AACA,QAAA,OAAA,YAAA,KAAA,eAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA,CAAA,iEADA;AAEA,QAAA,IAAA,EAAA;AAFA,OAAA;AAIA,WAAA,MAAA,CAAA,MAAA,CAAA,eAAA,EAAA,KAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,OAAA;AACA,KAxEA;AAyEA,IAAA,wBAzEA,oCAyEA,KAzEA,EAyEA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,wBAAA,EAAA,KAAA,CAAA,IAAA;AACA,KA3EA;AA4EA,IAAA,iBA5EA,6BA4EA,KA5EA,EA4EA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,iBAAA,EAAA,KAAA,CAAA,IAAA;AACA,KA9EA;AA+EA,IAAA,0BA/EA,sCA+EA,KA/EA,EA+EA;AAAA;;AACA,UAAA,WAAA,GAAA,KAAA,CAAA,IAAA,CAAA,IAAA,KAAA,CAAA;AACA,UAAA,qBAAA,GACA,eAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAAA,OAAA,CAAA,YAAA,CAAA,OAAA,MACA,KAAA,mBAAA,CAAA,cAFA,CAFA,CAKA;;AACA,UAAA,WAAA,IAAA,qBAAA,EAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,0BAAA;AACA;;AACA,oBAAA;AACA,QAAA,KAAA,EAAA,OADA;AAEA,QAAA,OAAA,EAAA,0BAAA,CAAA,KAAA,CAAA,IAAA,CAAA,OAAA,CAFA;AAGA,QAAA,QAAA,EAAA,IAHA;AAIA,QAAA,OAAA,EAAA,mBAAA;AACA,cAAA,oBAAA,GAAA,aAAA;;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA,oBAAA;AACA;AAPA,OAAA;AASA,KAjGA;;AAkGA;;;;AAIA,IAAA,QAtGA,oBAsGA,WAtGA,EAsGA;AAAA;;AACA;AACA,UAAA,iBAAA,GAAA,WAAA,CAAA,MAAA,CACA,UAAA,OAAA;AAAA,eACA,OAAA,CAAA,IAAA,KAAA,MAAA,CAAA,GAAA,CAAA,KAAA,CAAA,QAAA,IACA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA,QAAA,CAAA,GAAA,CAFA;AAAA,OADA,CAAA;;AAKA,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,iBAAA,CAAA,MAAA,EAAA,CAAA,EAAA,EAAA;AACA,YAAA,OAAA,GAAA,iBAAA,CAAA,CAAA,CAAA;AACA,YAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA;;AACA,YAAA,CAAA,OAAA,EAAA;AACA;AACA,SALA,CAMA;;;AACA,YAAA,OAAA,CAAA,QAAA,YAAA,KAAA,kBAAA,CAAA,MAAA,EAAA,EAAA;AACA;AACA,cAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,EAAA;AACA,iBAAA,QAAA,CAAA,OAAA;AACA;;AACA,wBAAA;AACA,YAAA,KAAA,oCAAA,OAAA,CAAA,cAAA,CAAA,KAAA,CAAA,CAAA,CAAA,6BADA;AAEA,YAAA,OAAA,EAAA,OAAA,CAAA,OAAA,CAAA,IAFA;AAGA,YAAA,QAAA,EAAA;AAHA,WAAA;;AAKA,eAAA,IAAA,CAAA,KAAA,CAAA,oBAAA,EAAA;AACA,YAAA,IAAA,EAAA;AAAA,cAAA,cAAA,EAAA,OAAA,CAAA;AAAA;AADA,WAAA;AAGA;AACA;AACA,KAnIA;AAoIA,IAAA,kBApIA,8BAoIA,cApIA,EAoIA;AACA,UAAA,cAAA,KAAA,KAAA,mBAAA,CAAA,cAAA,EAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA,cAAA;AACA;AACA,KAxIA;AAyIA,IAAA,SAzIA,qBAyIA,GAzIA,EAyIA;AACA,UAAA;AACA,QAAA,IAAA,CAAA,KAAA,CAAA,GAAA;AACA,eAAA,IAAA;AACA,OAHA,CAGA,gBAAA;AACA,eAAA,KAAA;AACA;AACA,KAhJA;AAiJA,IAAA,kBAjJA,8BAiJA,WAjJA,EAiJA;AAAA;;AACA,UAAA,gBAAA,GAAA,WAAA,CAAA,MAAA,CACA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,IAAA,KAAA,MAAA,CAAA,GAAA,CAAA,KAAA,CAAA,UAAA,IAAA,MAAA,CAAA,SAAA,CAAA,OAAA,CAAA,OAAA,CAAA,IAAA,CAAA;AAAA,OADA,CAAA;AAGA,UAAA,gBAAA,CAAA,MAAA,KAAA,CAAA,EAAA;AACA,UAAA,YAAA,GAAA,IAAA,CAAA,KAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,OAAA,CAAA,IAAA,CAAA;;AACA,UAAA,YAAA,CAAA,MAAA,KAAA,MAAA,CAAA,yBAAA,EAAA;AACA,YAAA,KAAA,MAAA,EAAA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,MAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,CAAA,CAAA;AACA;AACA;;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,qBAAA,EAAA,YAAA,CAAA,OAAA;AACA,aAAA,kBAAA,CAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,cAAA,EANA,CAMA;;AACA,YAAA,gBAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,KAAA,MAAA,EAAA;AACA,eAAA,IAAA,CAAA,KAAA,CAAA,UAAA;AACA;AACA;;AACA,UAAA,YAAA,CAAA,MAAA,KAAA,MAAA,CAAA,gCAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,UAAA;AACA;;AACA,UAAA,YAAA,CAAA,MAAA,KAAA,MAAA,CAAA,wBAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA;;AACA,UAAA,YAAA,CAAA,MAAA,KAAA,MAAA,CAAA,iCAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,UAAA;AACA;;AACA,UAAA,YAAA,CAAA,MAAA,KAAA,MAAA,CAAA,0BAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,UAAA;AACA;;AACA,UAAA,YAAA,CAAA,MAAA,KAAA,MAAA,CAAA,wBAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,UAAA;AACA;;AACA,UAAA,YAAA,CAAA,MAAA,KAAA,MAAA,CAAA,2BAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA;;AACA,UAAA,YAAA,CAAA,MAAA,KAAA,MAAA,CAAA,uBAAA,EAAA;AACA,aAAA,IAAA,CAAA,KAAA,CAAA,WAAA;AACA;AACA,KAvLA;;AAwLA;;;;AAIA,IAAA,QA5LA,oBA4LA,OA5LA,EA4LA;AAAA;;AACA;AACA,UAAA,EAAA,kBAAA,MAAA,CAAA,EAAA;AACA;AACA,OAFA,MAEA,IAAA,MAAA,CAAA,YAAA,CAAA,UAAA,KAAA,SAAA,EAAA;AACA,aAAA,YAAA,CAAA,OAAA;AACA,OAFA,MAEA,IAAA,MAAA,CAAA,YAAA,CAAA,UAAA,KAAA,QAAA,EAAA;AACA,QAAA,MAAA,CAAA,YAAA,CAAA,iBAAA,GAAA,IAAA,CAAA,UAAA,UAAA,EAAA;AACA;AACA,cAAA,UAAA,KAAA,SAAA,EAAA;AACA,YAAA,MAAA,CAAA,YAAA,CAAA,OAAA;AACA;AACA,SALA;AAMA;AACA,KA1MA;AA2MA,IAAA,YA3MA,wBA2MA,OA3MA,EA2MA;AAAA;;AACA,UAAA,YAAA,GAAA,IAAA,MAAA,CAAA,YAAA,CAAA,QAAA,EAAA;AACA,QAAA,IAAA,EAAA,uEADA;AAEA,QAAA,IAAA,EAAA,OAAA,CAAA,OAAA,CAAA;AAFA,OAAA,CAAA;;AAIA,MAAA,YAAA,CAAA,OAAA,GAAA,YAAA;AACA,QAAA,MAAA,CAAA,KAAA;;AACA,QAAA,MAAA,CAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA,OAAA,CAAA,cAAA;;AACA,QAAA,YAAA,CAAA,KAAA;AACA,OAJA;AAKA,KArNA;AAsNA,IAAA,eAtNA,6BAsNA;AACA,MAAA,GAAA,CAAA,SAAA,CAAA,UAAA,EAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAAA;AACA,KAxNA;;AAyNA;;;;AAIA,IAAA,kBA7NA,8BA6NA,WA7NA,EA6NA;AAAA;;AACA;AACA,UAAA,SAAA,GAAA,WAAA,CAAA,MAAA,CAAA,UAAA,OAAA,EAAA;AACA,eAAA,MAAA,CAAA,mBAAA,CAAA,cAAA,KAAA,OAAA,CAAA,cAAA,IACA,OAAA,CAAA,IAAA,KAAA,MAAA,CAAA,GAAA,CAAA,KAAA,CAAA,WADA,KAEA,OAAA,CAAA,OAAA,CAAA,aAAA,KAAA,MAAA,CAAA,GAAA,CAAA,KAAA,CAAA,gBAAA,IACA,OAAA,CAAA,OAAA,CAAA,aAAA,KAAA,MAAA,CAAA,GAAA,CAAA,KAAA,CAAA,sBAHA,CAAA;AAIA,OALA,CAAA,CAFA,CAQA;;AACA,UAAA,SAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,QAAA,SAAA,CAAA,OAAA,CAAA,UAAA,QAAA,EAAA;AACA,cAAA,KAAA,CAAA,OAAA,CAAA,QAAA,CAAA,OAAA,CAAA,UAAA,KAAA,QAAA,CAAA,OAAA,CAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,YAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,uBAAA,EAAA,QAAA,CAAA,OAAA,CAAA,UAAA;AACA;AACA,SAJA;AAKA;AACA;AA7OA;AAxCA,CAAA","sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div id=\"wrapper\" v-if=\"!isLogin\" >\r\n      <login/>\r\n    </div>\r\n    <home\r\n      class=\"loading\"\r\n      ref=\"home\"\r\n      v-else\r\n      v-loading=\"showLoading\"\r\n      element-loading-text=\"正在拼命初始化...\"\r\n      element-loading-background=\"rgba(0, 0, 0, 0.8)\">\r\n    </home>\r\n    <div class=\"bg\">\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Notification } from 'element-ui'\r\nimport { mapState } from 'vuex'\r\n//import SideBar from './components/layout/side-bar'\r\nimport Login from './components/user/login'\r\nimport { translateGroupSystemNotice } from './utils/common'\r\nimport { ACTION } from './utils/trtcCustomMessageMap'\r\nimport MTA from './utils/mta'\r\n\r\nimport Home from './components/home'\r\n\r\nexport default {\r\n  title: 'CloudWatch',\r\n  data () {\r\n    return {\r\n\r\n    }\r\n  },\r\n  components: {\r\n    Login,\r\n    Home,\r\n  },\r\n\r\n  computed: {\r\n    ...mapState({\r\n      currentUserProfile: state => state.user.currentUserProfile,\r\n      currentConversation: state => state.conversation.currentConversation,\r\n      isLogin: state => state.user.isLogin,\r\n      isSDKReady: state => state.user.isSDKReady,\r\n      isBusy: state => state.video.isBusy,\r\n      userID: state => state.user.userID\r\n    }),\r\n    // 是否显示 Loading 状态\r\n    showLoading() {\r\n      return !this.isSDKReady\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    // 初始化监听器\r\n    this.initListener()\r\n  },\r\n\r\n  watch: {\r\n    isLogin(next) {\r\n      if (next) {\r\n        MTA.clickStat('link_two', { show: 'true' })\r\n      }\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    initListener() {\r\n      // 登录成功后会触发 SDK_READY 事件，该事件触发后，可正常使用 SDK 接口\r\n      this.tim.on(this.TIM.EVENT.SDK_READY, this.onReadyStateUpdate, this)\r\n      // SDK NOT READT\r\n      this.tim.on(this.TIM.EVENT.SDK_NOT_READY, this.onReadyStateUpdate, this)\r\n      // 被踢出\r\n      this.tim.on(this.TIM.EVENT.KICKED_OUT, this.onKickOut)\r\n      // SDK内部出错\r\n      this.tim.on(this.TIM.EVENT.ERROR, this.onError)\r\n      // 收到新消息\r\n      this.tim.on(this.TIM.EVENT.MESSAGE_RECEIVED, this.onReceiveMessage)\r\n      // 会话列表更新\r\n      this.tim.on(this.TIM.EVENT.CONVERSATION_LIST_UPDATED, this.onUpdateConversationList)\r\n      // 群组列表更新\r\n      this.tim.on(this.TIM.EVENT.GROUP_LIST_UPDATED, this.onUpdateGroupList)\r\n      // 收到新的群系统通知\r\n      this.tim.on(this.TIM.EVENT.GROUP_SYSTEM_NOTICE_RECEIVED, this.onReceiveGroupSystemNotice)\r\n    },\r\n    onReceiveMessage({ data: messageList }) {\r\n      this.handleVideoMessage(messageList)\r\n      this.handleAt(messageList)\r\n      this.handleQuitGroupTip(messageList)\r\n      this.$store.commit('pushCurrentMessageList', messageList)\r\n      this.$refs.home.addToList(messageList)\r\n    },\r\n    onError({ data }) {\r\n      if (data.message !== 'Network Error') {\r\n        this.$store.commit('showMessage', {\r\n          message: data.message,\r\n          type: 'error'\r\n        })\r\n      }\r\n    },\r\n    onReadyStateUpdate({ name }) {\r\n      const isSDKReady = name === this.TIM.EVENT.SDK_READY ? true : false\r\n      this.$store.commit('toggleIsSDKReady', isSDKReady)\r\n\r\n      if (isSDKReady) {\r\n        this.tim\r\n          .getMyProfile()\r\n          .then(({ data }) => {\r\n            this.$store.commit('updateCurrentUserProfile', data)\r\n          })\r\n          .catch(error => {\r\n            this.$store.commit('showMessage', {\r\n              type: 'error',\r\n              message: error.message\r\n            })\r\n          })\r\n        this.$store.dispatch('getBlacklist')\r\n      }\r\n    },\r\n    kickedOutReason(type) {\r\n      switch (type) {\r\n        case this.TIM.TYPES.KICKED_OUT_MULT_ACCOUNT:\r\n          return '由于多实例登录'\r\n        case this.TIM.TYPES.KICKED_OUT_MULT_DEVICE:\r\n          return '由于多设备登录'\r\n        case this.TIM.TYPES.KICKED_OUT_USERSIG_EXPIRED:\r\n          return '由于 userSig 过期'\r\n        default:\r\n          return ''\r\n      }\r\n    },\r\n    onKickOut(event) {\r\n      this.$store.commit('showMessage', {\r\n        message: `${this.kickedOutReason(event.data.type)}被踢出，请重新登录。`,\r\n        type: 'error'\r\n      })\r\n      this.$store.commit('toggleIsLogin', false)\r\n      this.$store.commit('reset')\r\n    },\r\n    onUpdateConversationList(event) {\r\n      this.$store.commit('updateConversationList', event.data)\r\n    },\r\n    onUpdateGroupList(event) {\r\n      this.$store.commit('updateGroupList', event.data)\r\n    },\r\n    onReceiveGroupSystemNotice(event) {\r\n      const isKickedout = event.data.type === 4\r\n      const isCurrentConversation =\r\n        `GROUP${event.data.message.payload.groupProfile.groupID}` ===\r\n        this.currentConversation.conversationID\r\n      // 在当前会话被踢，需reset当前会话\r\n      if (isKickedout && isCurrentConversation) {\r\n        this.$store.commit('resetCurrentConversation')\r\n      }\r\n      Notification({\r\n        title: '新系统通知',\r\n        message: translateGroupSystemNotice(event.data.message),\r\n        duration: 3000,\r\n        onClick: () => {\r\n          const SystemConversationID = '@TIM#SYSTEM'\r\n          this.$store.dispatch('checkoutConversation', SystemConversationID)\r\n        }\r\n      })\r\n    },\r\n    /**\r\n     * 处理 @ 我的消息\r\n     * @param {Message[]} messageList\r\n     */\r\n    handleAt(messageList) {\r\n      // 筛选有 @ 符号的文本消息\r\n      const atTextMessageList = messageList.filter(\r\n        message =>\r\n          message.type === this.TIM.TYPES.MSG_TEXT &&\r\n          message.payload.text.includes('@')\r\n      )\r\n      for (let i = 0; i < atTextMessageList.length; i++) {\r\n        const message = atTextMessageList[i]\r\n        const matched = message.payload.text.match(/@\\w+/g)\r\n        if (!matched) {\r\n          continue\r\n        }\r\n        // @ 我的\r\n        if (matched.includes(`@${this.currentUserProfile.userID}`)) {\r\n          // 当前页面不可见时，调用window.Notification接口，系统级别通知。\r\n          if (this.$store.getters.hidden) {\r\n            this.notifyMe(message)\r\n          }\r\n          Notification({\r\n            title: `有人在群${message.conversationID.slice(5)}提到了你`,\r\n            message: message.payload.text,\r\n            duration: 3000\r\n          })\r\n          this.$bus.$emit('new-messsage-at-me', {\r\n            data: { conversationID: message.conversationID }\r\n          })\r\n        }\r\n      }\r\n    },\r\n    selectConversation(conversationID) {\r\n      if (conversationID !== this.currentConversation.conversationID) {\r\n        this.$store.dispatch('checkoutConversation',conversationID)\r\n      }\r\n    },\r\n    isJsonStr(str) {\r\n      try{\r\n        JSON.parse(str)\r\n        return true\r\n      }catch {\r\n        return false\r\n      }\r\n    },\r\n    handleVideoMessage(messageList) {\r\n      const videoMessageList = messageList.filter(\r\n        message => message.type === this.TIM.TYPES.MSG_CUSTOM && this.isJsonStr(message.payload.data)\r\n      )\r\n      if (videoMessageList.length === 0) return\r\n      const videoPayload = JSON.parse(videoMessageList[0].payload.data)\r\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_DIALING) {\r\n        if (this.isBusy) {\r\n          this.$bus.$emit('busy', videoPayload, videoMessageList[0])\r\n          return\r\n        }\r\n        this.$store.commit('GENERATE_VIDEO_ROOM', videoPayload.room_id)\r\n        this.selectConversation(videoMessageList[0].conversationID) // 切换当前会话页\r\n        if (videoMessageList[0].from !== this.userID) {\r\n          this.$bus.$emit('isCalled')\r\n        }\r\n      }\r\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_SPONSOR_CANCEL) {\r\n        this.$bus.$emit('missCall')\r\n      }\r\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_REJECT) {\r\n        this.$bus.$emit('isRefused')\r\n      }\r\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_SPONSOR_TIMEOUT) {\r\n        this.$bus.$emit('missCall')\r\n      }\r\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_ACCEPTED) {\r\n        this.$bus.$emit('isAccept')\r\n      }\r\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_HANGUP) {\r\n        this.$bus.$emit('isHungUp')\r\n      }\r\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_LINE_BUSY) {\r\n        this.$bus.$emit('isRefused')\r\n      }\r\n      if (videoPayload.action === ACTION.VIDEO_CALL_ACTION_ERROR) {\r\n        this.$bus.$emit('isRefused')\r\n      }\r\n    },\r\n    /**\r\n     * 使用 window.Notification 进行全局的系统通知\r\n     * @param {Message} message\r\n     */\r\n    notifyMe(message) {\r\n      // 需检测浏览器支持和用户授权\r\n      if (!('Notification' in window)) {\r\n        return\r\n      } else if (window.Notification.permission === 'granted') {\r\n        this.handleNotify(message)\r\n      } else if (window.Notification.permission !== 'denied') {\r\n        window.Notification.requestPermission().then(permission => {\r\n          // 如果用户同意，就可以向他们发送通知\r\n          if (permission === 'granted') {\r\n            this.handleNotify(message)\r\n          }\r\n        })\r\n      }\r\n    },\r\n    handleNotify(message) {\r\n      const notification = new window.Notification('有人提到了你', {\r\n        icon: 'https://webim-1252463788.file.myqcloud.com/demo/img/logo.dc3be0d4.png',\r\n        body: message.payload.text\r\n      })\r\n      notification.onclick = () => {\r\n        window.focus()\r\n        this.$store.dispatch('checkoutConversation', message.conversationID)\r\n        notification.close()\r\n      }\r\n    },\r\n    handleLinkClick() {\r\n      MTA.clickStat('link_two', { click: 'true' })\r\n    },\r\n    /**\r\n     * 收到有群成员退群/被踢出的groupTip时，需要将相关群成员从当前会话的群成员列表中移除\r\n     * @param {Message[]} messageList\r\n     */\r\n    handleQuitGroupTip(messageList) {\r\n      // 筛选出当前会话的退群/被踢群的 groupTip\r\n      const groupTips = messageList.filter(message => {\r\n        return this.currentConversation.conversationID === message.conversationID &&\r\n          message.type === this.TIM.TYPES.MSG_GRP_TIP &&\r\n          (message.payload.operationType === this.TIM.TYPES.GRP_TIP_MBR_QUIT ||\r\n          message.payload.operationType === this.TIM.TYPES.GRP_TIP_MBR_KICKED_OUT)\r\n      })\r\n      // 清理当前会话的群成员列表\r\n      if (groupTips.length > 0) {\r\n        groupTips.forEach(groupTip => {\r\n          if (Array.isArray(groupTip.payload.userIDList) || groupTip.payload.userIDList.length > 0) {\r\n            this.$store.commit('deleteGroupMemberList', groupTip.payload.userIDList)\r\n          }\r\n        })\r\n      }\r\n    },\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\">\r\nbody {\r\n  overflow: hidden;\r\n  margin: 0;\r\n  font-family: 'Microsoft YaHei', '微软雅黑', 'MicrosoftJhengHei', 'Lantinghei SC', 'Open Sans', Arial, 'Hiragino Sans GB', 'STHeiti', 'WenQuanYi Micro Hei', SimSun, sans-serif;\r\n  // font-family  \"Helvetica Neue\", Helvetica, Arial, \"PingFang SC\", \"Hiragino Sans GB\", \"Heiti SC\", \"Microsoft YaHei\", \"WenQuanYi Micro Hei\", sans-serif\r\n  // text-shadow: $regular 0 0 0.05em\r\n  background-color: $bg;\r\n  -ms-scroll-chaining: chained;\r\n  -ms-overflow-style: none;\r\n  -ms-content-zooming: zoom;\r\n  -ms-scroll-rails: none;\r\n  -ms-content-zoom-limit-min: 100%;\r\n  -ms-content-zoom-limit-max: 500%;\r\n  -ms-scroll-snap-type: proximity;\r\n  -ms-scroll-snap-points-x: snapList(100%, 200%, 300%, 400%, 500%);\r\n  -ms-overflow-style: none;\r\n  overflow: auto;\r\n\r\n  div {\r\n    box-sizing: border-box;\r\n\r\n    &::before, &::after {\r\n      box-sizing: border-box;\r\n    }\r\n  }\r\n}\r\n\r\n#wrapper {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding-top: 100px;\r\n}\r\n\r\n.container\r\n  height 100vh\r\n.container\r\n  height 100vh\r\n// TODO filter mac chrome 会有问题，下次修改可以去掉\r\n.bg {\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -1;\r\n  background: url('~@/./assets/image/bg.jpg') no-repeat 0 0;\r\n  background-size: cover;\r\n  // filter blur(67px)\r\n}\r\n\r\n.loading {\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.text-ellipsis {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n\r\n.chat-wrapper {\r\n  margin-top: 8vh;\r\n  width: $width;\r\n  height: $height;\r\n  max-width: 1280px;\r\n  position: fixed;\r\n  right: 0%;\r\n  z-index: 999;\r\n\r\n  .official-link {\r\n    display: flex;\r\n    text-decoration: none;\r\n    color: #38c9ff;\r\n    width: fit-content;\r\n    float: right;\r\n    height: 45px;\r\n    align-items: center;\r\n  }\r\n}\r\n\r\n/* 设置滚动条的样式 */\r\n::-webkit-scrollbar {\r\n  width: 3px;\r\n  height: 3px;\r\n}\r\n\r\n/* 滚动槽 */\r\n::-webkit-scrollbar-track {\r\n  border-radius: 10px;\r\n}\r\n\r\n/* 滚动条滑块 */\r\n::-webkit-scrollbar-thumb {\r\n  border-radius: 10px;\r\n  background: rgba(0, 0, 0, 0.1);\r\n}\r\n</style>\r\n"],"sourceRoot":"src"}]}