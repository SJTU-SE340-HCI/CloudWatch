{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/message/message-bottom-send-box.vue?vue&type=script&lang=js&","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/message/message-bottom-send-box.vue","mtime":1592044083331},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1588990144242},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1588990158440}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _defineProperty from \"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Tooltip2 from \"element-ui/lib/theme-chalk/tooltip.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Tooltip from \"element-ui/lib/tooltip\";\nimport _Radio2 from \"element-ui/lib/theme-chalk/radio.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Radio from \"element-ui/lib/radio\";\nimport _RadioGroup2 from \"element-ui/lib/theme-chalk/radio-group.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _RadioGroup from \"element-ui/lib/radio-group\";\nimport _Popover2 from \"element-ui/lib/theme-chalk/popover.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Popover from \"element-ui/lib/popover\";\nimport _Dialog2 from \"element-ui/lib/theme-chalk/dialog.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Dialog from \"element-ui/lib/dialog\";\nimport _FormItem2 from \"element-ui/lib/theme-chalk/form-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _FormItem from \"element-ui/lib/form-item\";\nimport _Form2 from \"element-ui/lib/theme-chalk/form.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Form from \"element-ui/lib/form\";\nimport _Input2 from \"element-ui/lib/theme-chalk/input.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Input from \"element-ui/lib/input\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapState } from 'vuex';\nimport { emojiMap, emojiName, emojiUrl } from \"../../utils/emojiMap\";\nimport VoiceCommunicate from \"../voice\";\nexport default {\n  name: 'message-send-box',\n  props: ['scrollMessageListToButtom'],\n  components: {\n    ElInput: _Input,\n    ElForm: _Form,\n    ElFormItem: _FormItem,\n    ElDialog: _Dialog,\n    ElPopover: _Popover,\n    ElRadioGroup: _RadioGroup,\n    ElRadio: _Radio,\n    ElTooltip: _Tooltip,\n    VoiceCommunicate: VoiceCommunicate\n  },\n  data: function data() {\n    return {\n      colors: ['#99A9BF', '#F7BA2A', '#FF9900'],\n      messageContent: '',\n      isSendCustomMessage: false,\n      sendCustomDialogVisible: false,\n      form: {\n        data: '',\n        description: '',\n        extension: ''\n      },\n      file: '',\n      emojiMap: emojiMap,\n      emojiName: emojiName,\n      emojiUrl: emojiUrl,\n      showAtGroupMember: false,\n      atUserID: '',\n      focus: false\n    };\n  },\n  computed: _objectSpread({}, mapGetters(['toAccount', 'currentConversationType']), {}, mapState({\n    memberList: function memberList(state) {\n      return state.group.currentMemberList;\n    },\n    userID: function userID(state) {\n      return state.user.userID;\n    }\n  })),\n  mounted: function mounted() {\n    this.$refs['text-input'].addEventListener('paste', this.handlePaste);\n    this.$bus.$on('reEditMessage', this.reEditMessage);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$refs['text-input'].removeEventListener('paste', this.handlePaste);\n  },\n  methods: {\n    reEditMessage: function reEditMessage(payload) {\n      this.messageContent = payload;\n    },\n    handleSelectAtUser: function handleSelectAtUser() {\n      this.messageContent += this.atUserID + ' ';\n      this.showAtGroupMember = false;\n    },\n    handleUp: function handleUp() {\n      var _this = this;\n\n      var index = this.memberList.findIndex(function (member) {\n        return member.userID === _this.atUserID;\n      });\n\n      if (index - 1 < 0) {\n        return;\n      }\n\n      this.atUserID = this.memberList[index - 1].userID;\n    },\n    handleDown: function handleDown() {\n      var _this2 = this;\n\n      var index = this.memberList.findIndex(function (member) {\n        return member.userID === _this2.atUserID;\n      });\n\n      if (index + 1 >= this.memberList.length) {\n        return;\n      }\n\n      this.atUserID = this.memberList[index + 1].userID;\n    },\n    handleEnter: function handleEnter() {\n      if (this.showAtGroupMember) {\n        this.handleSelectAtUser();\n      } else {\n        this.sendTextMessage();\n      }\n    },\n    handleLine: function handleLine() {\n      this.messageContent += '\\n';\n    },\n    handleAt: function handleAt() {\n      this.showAtGroupMember = true;\n      this.messageContent += '@';\n    },\n    handlePaste: function handlePaste(e) {\n      var _this3 = this;\n\n      var clipboardData = e.clipboardData;\n      var file;\n\n      if (clipboardData && clipboardData.files && clipboardData.files.length > 0) {\n        file = clipboardData.files[0];\n      }\n\n      if (typeof file === 'undefined') {\n        return;\n      } // 1. 创建消息实例，接口返回的实例可以上屏\n\n\n      var message = this.tim.createImageMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: file\n        },\n        onProgress: function onProgress(percent) {\n          _this3.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message); // 2. 发送消息\n\n      var promise = this.tim.sendMessage(message);\n      promise.catch(function (error) {\n        _this3.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n    },\n    dropHandler: function dropHandler(e) {\n      var _this4 = this;\n\n      e.preventDefault();\n      var file = e.dataTransfer.files[0];\n      var message = {};\n\n      if (file.type === 'video/mp4') {\n        message = this.tim.createVideoMessage({\n          to: this.toAccount,\n          conversationType: this.currentConversationType,\n          payload: {\n            file: file\n          },\n          onProgress: function onProgress(percent) {\n            _this4.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n          }\n        });\n      } else {\n        message = this.tim.createFileMessage({\n          to: this.toAccount,\n          conversationType: this.currentConversationType,\n          payload: {\n            file: file\n          },\n          onProgress: function onProgress(percent) {\n            _this4.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n          }\n        });\n      }\n\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).then(function () {\n        _this4.$refs.videoPicker.value = null;\n      }).catch(function (imError) {\n        _this4.$store.commit('showMessage', {\n          message: imError.message,\n          type: 'error'\n        });\n      });\n    },\n    sendTextMessage: function sendTextMessage() {\n      var _this5 = this;\n\n      if (this.messageContent === '' || this.messageContent.trim().length === 0) {\n        this.messageContent = '';\n        this.$store.commit('showMessage', {\n          message: '不能发送空消息哦！',\n          type: 'info'\n        });\n        return;\n      }\n\n      var message = this.tim.createTextMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          text: this.messageContent\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.$bus.$emit('scroll-bottom');\n      this.tim.sendMessage(message).catch(function (error) {\n        _this5.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n      this.messageContent = '';\n    },\n    sendCustomMessage: function sendCustomMessage() {\n      var _this6 = this;\n\n      if (this.form.data.length === 0 && this.form.description.length === 0 && this.form.extension.length === 0) {\n        this.$store.commit('showMessage', {\n          message: '不能发送空消息',\n          type: 'info'\n        });\n        return;\n      }\n\n      var message = this.tim.createCustomMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          data: this.form.data,\n          description: this.form.description,\n          extension: this.form.extension\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).catch(function (error) {\n        _this6.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        });\n      });\n      Object.assign(this.form, {\n        data: '',\n        description: '',\n        extension: ''\n      });\n      this.sendCustomDialogVisible = false;\n    },\n    random: function random(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min);\n    },\n    chooseEmoji: function chooseEmoji(item) {\n      this.messageContent += item;\n    },\n    handleSendImageClick: function handleSendImageClick() {\n      this.$refs.imagePicker.click();\n    },\n    handleSendFileClick: function handleSendFileClick() {\n      this.$refs.filePicker.click();\n    },\n    handleSendVideoClick: function handleSendVideoClick() {\n      this.$refs.videoPicker.click();\n    },\n    videoCall: function videoCall() {\n      this.$bus.$emit('video-call');\n    },\n    sendImage: function sendImage() {\n      var _this7 = this;\n\n      var message = this.tim.createImageMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('imagePicker') // 或者用event.target\n\n        },\n        onProgress: function onProgress(percent) {\n          _this7.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).then(function () {}).catch(function (imError) {\n        _this7.$store.commit('showMessage', {\n          message: imError.message,\n          type: 'error'\n        });\n      });\n      this.$refs.imagePicker.value = null;\n    },\n    sendFile: function sendFile() {\n      var _this8 = this;\n\n      var message = this.tim.createFileMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('filePicker') // 或者用event.target\n\n        },\n        onProgress: function onProgress(percent) {\n          _this8.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).then(function () {}).catch(function (imError) {\n        _this8.$store.commit('showMessage', {\n          message: imError.message,\n          type: 'error'\n        });\n      });\n      this.$refs.filePicker.value = null;\n    },\n    sendVideo: function sendVideo() {\n      var _this9 = this;\n\n      var message = this.tim.createVideoMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('videoPicker') // 或者用event.target\n\n        },\n        onProgress: function onProgress(percent) {\n          _this9.$set(message, 'progress', percent); // 手动给message 实例加个响应式属性: progress\n\n        }\n      });\n      this.$store.commit('pushCurrentMessageList', message);\n      this.tim.sendMessage(message).then(function () {\n        _this9.$refs.videoPicker.value = null;\n      }).catch(function (imError) {\n        _this9.$store.commit('showMessage', {\n          message: imError.message,\n          type: 'error'\n        });\n      });\n    }\n  }\n};",{"version":3,"sources":["message-bottom-send-box.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div id=\"message-send-box-wrapper\" :style=\"focus ? {'backgroundColor': 'white'} : {}\" @drop=\"dropHandler\">\n    <el-popover\n      trigger=\"manual\"\n      v-model=\"showAtGroupMember\"\n      placement=\"top\"\n      style=\"max-height:500px;overflow-y:scroll;\"\n    >\n      <el-radio-group\n        v-model=\"atUserID\"\n        style=\"display:flex;flex-decoration: column;\"\n        v-for=\"member in memberList\"\n        :key=\"member.userID\"\n        @change=\"handleSelectAtUser\"\n      >\n        <el-radio :label=\"member.userID\">{{ member.nameCard || member.nick || member.userID }}</el-radio>\n      </el-radio-group>\n    </el-popover>\n    <div class=\"bottom\">\n      <div class=\"voice\">\n        <VoiceCommunicate></VoiceCommunicate>\n      </div>\n      <el-popover placement=\"top\" width=\"600\" trigger=\"click\">\n        <div class=\"emojis\">\n          <div v-for=\"item in emojiName\" class=\"emoji\" :key=\"item\" @click=\"chooseEmoji(item)\">\n            <img :src=\"emojiUrl + emojiMap[item]\" style=\"width:30px;height:30px\" />\n          </div>\n        </div>\n        <i class=\"iconfont icon-smile emoji\" slot=\"reference\" title=\"发表情\"></i>\n      </el-popover>\n      <textarea\n        ref=\"text-input\"\n        rows=\"1\"\n        resize=\"false\"\n        v-model=\"messageContent\"\n        class=\"text-input\"\n        @focus=\"focus = true\"\n        @blur=\"focus = false\"\n        @keydown.enter.exact.prevent=\"handleEnter\"\n        @keyup.ctrl.enter.prevent.exact=\"handleLine\"\n        @keydown.shift.50.prevent.exact=\"handleAt\"\n        @keydown.up.stop=\"handleUp\"\n        @keydown.down.stop=\"handleDown\"\n      >\n      </textarea>\n      <el-tooltip\n              class=\"item\"\n              effect=\"dark\"\n              content=\"按Enter发送消息，Ctrl+Enter换行\"\n              placement=\"left-start\"\n      >\n        <div class=\"btn-send\" @click=\"sendTextMessage\">\n          <div class=\"tim-icon-send\"></div>\n        </div>\n      </el-tooltip>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState } from 'vuex'\nimport {\n  Form,\n  FormItem,\n  Input,\n  Dialog,\n  Popover,\n  RadioGroup,\n  Radio,\n  Tooltip,\n} from 'element-ui'\nimport { emojiMap, emojiName, emojiUrl } from '../../utils/emojiMap'\nimport VoiceCommunicate from '../voice'\n\nexport default {\n  name: 'message-send-box',\n  props: ['scrollMessageListToButtom'],\n  components: {\n    ElInput: Input,\n    ElForm: Form,\n    ElFormItem: FormItem,\n    ElDialog: Dialog,\n    ElPopover: Popover,\n    ElRadioGroup: RadioGroup,\n    ElRadio: Radio,\n    ElTooltip: Tooltip,\n    VoiceCommunicate: VoiceCommunicate,\n  },\n  data() {\n    return {\n      colors: ['#99A9BF', '#F7BA2A', '#FF9900'],\n      messageContent: '',\n      isSendCustomMessage: false,\n      sendCustomDialogVisible: false,\n      form: {\n        data: '',\n        description: '',\n        extension: ''\n      },\n      file: '',\n      emojiMap: emojiMap,\n      emojiName: emojiName,\n      emojiUrl: emojiUrl,\n      showAtGroupMember: false,\n      atUserID: '',\n      focus: false\n    }\n  },\n  computed: {\n    ...mapGetters(['toAccount', 'currentConversationType']),\n    ...mapState({\n      memberList: state => state.group.currentMemberList,\n      userID: state => state.user.userID\n    })\n  },\n  mounted() {\n    this.$refs['text-input'].addEventListener('paste', this.handlePaste)\n    this.$bus.$on('reEditMessage', this.reEditMessage)\n  },\n  beforeDestroy() {\n    this.$refs['text-input'].removeEventListener('paste', this.handlePaste)\n  },\n  methods: {\n    reEditMessage(payload) {\n      this.messageContent = payload\n    },\n    handleSelectAtUser() {\n      this.messageContent += this.atUserID + ' '\n      this.showAtGroupMember = false\n    },\n    handleUp() {\n      const index = this.memberList.findIndex(\n        member => member.userID === this.atUserID\n      )\n      if (index - 1 < 0) {\n        return\n      }\n      this.atUserID = this.memberList[index - 1].userID\n    },\n    handleDown() {\n      const index = this.memberList.findIndex(\n        member => member.userID === this.atUserID\n      )\n      if (index + 1 >= this.memberList.length) {\n        return\n      }\n      this.atUserID = this.memberList[index + 1].userID\n    },\n    handleEnter() {\n      if (this.showAtGroupMember) {\n        this.handleSelectAtUser()\n      } else {\n        this.sendTextMessage()\n      }\n    },\n    handleLine() {\n      this.messageContent += '\\n'\n    },\n    handleAt() {\n      this.showAtGroupMember = true\n      this.messageContent += '@'\n    },\n    handlePaste(e) {\n      let clipboardData = e.clipboardData\n      let file\n      if (\n        clipboardData &&\n        clipboardData.files &&\n        clipboardData.files.length > 0\n      ) {\n        file = clipboardData.files[0]\n      }\n\n      if (typeof file === 'undefined') {\n        return\n      }\n      // 1. 创建消息实例，接口返回的实例可以上屏\n      let message = this.tim.createImageMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: file\n        },\n        onProgress: percent => {\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n\n      // 2. 发送消息\n      let promise = this.tim.sendMessage(message)\n      promise.catch(error => {\n        this.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        })\n      })\n    },\n    dropHandler(e) {\n      e.preventDefault()\n      let file = e.dataTransfer.files[0]\n      let message = {}\n      if (file.type === 'video/mp4') {\n        message = this.tim.createVideoMessage({\n          to: this.toAccount,\n          conversationType: this.currentConversationType,\n          payload: {\n            file: file\n          },\n          onProgress: percent => {\n            this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\n          }\n        })\n      } else {\n        message = this.tim.createFileMessage({\n          to: this.toAccount,\n          conversationType: this.currentConversationType,\n          payload: {\n            file: file\n          },\n          onProgress: percent => {\n            this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\n          }\n        })\n      }\n      this.$store.commit('pushCurrentMessageList', message)\n      this.tim\n        .sendMessage(message)\n        .then(() => {\n          this.$refs.videoPicker.value = null\n        })\n        .catch(imError => {\n          this.$store.commit('showMessage', {\n            message: imError.message,\n            type: 'error'\n          })\n        })\n    },\n    sendTextMessage() {\n      if (\n        this.messageContent === '' ||\n        this.messageContent.trim().length === 0\n      ) {\n        this.messageContent = ''\n        this.$store.commit('showMessage', {\n          message: '不能发送空消息哦！',\n          type: 'info'\n        })\n        return\n      }\n      const message = this.tim.createTextMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: { text: this.messageContent }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.$bus.$emit('scroll-bottom')\n      this.tim.sendMessage(message).catch(error => {\n        this.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        })\n      })\n      this.messageContent = ''\n    },\n    sendCustomMessage() {\n      if (\n        this.form.data.length === 0 &&\n        this.form.description.length === 0 &&\n        this.form.extension.length === 0\n      ) {\n        this.$store.commit('showMessage', {\n          message: '不能发送空消息',\n          type: 'info'\n        })\n        return\n      }\n      const message = this.tim.createCustomMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          data: this.form.data,\n          description: this.form.description,\n          extension: this.form.extension\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.tim.sendMessage(message).catch(error => {\n        this.$store.commit('showMessage', {\n          type: 'error',\n          message: error.message\n        })\n      })\n      Object.assign(this.form, {\n        data: '',\n        description: '',\n        extension: ''\n      })\n      this.sendCustomDialogVisible = false\n    },\n    random(min, max) {\n      return Math.floor(Math.random() * (max - min + 1) + min)\n    },\n    chooseEmoji(item) {\n      this.messageContent += item\n    },\n    handleSendImageClick() {\n      this.$refs.imagePicker.click()\n    },\n    handleSendFileClick() {\n      this.$refs.filePicker.click()\n    },\n    handleSendVideoClick() {\n      this.$refs.videoPicker.click()\n    },\n    videoCall() {\n      this.$bus.$emit('video-call')\n    },\n    sendImage() {\n      const message = this.tim.createImageMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('imagePicker') // 或者用event.target\n        },\n        onProgress: percent => {\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.tim\n        .sendMessage(message)\n        .then(() => {\n        })\n        .catch(imError => {\n          this.$store.commit('showMessage', {\n            message: imError.message,\n            type: 'error'\n          })\n        })\n      this.$refs.imagePicker.value = null\n    },\n    sendFile() {\n      const message = this.tim.createFileMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('filePicker') // 或者用event.target\n        },\n        onProgress: percent => {\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.tim\n        .sendMessage(message)\n        .then(() => {\n        })\n        .catch(imError => {\n          this.$store.commit('showMessage', {\n            message: imError.message,\n            type: 'error'\n          })\n        })\n      this.$refs.filePicker.value = null\n    },\n    sendVideo() {\n      const message = this.tim.createVideoMessage({\n        to: this.toAccount,\n        conversationType: this.currentConversationType,\n        payload: {\n          file: document.getElementById('videoPicker') // 或者用event.target\n        },\n        onProgress: percent => {\n          this.$set(message, 'progress', percent) // 手动给message 实例加个响应式属性: progress\n        }\n      })\n      this.$store.commit('pushCurrentMessageList', message)\n      this.tim\n        .sendMessage(message)\n        .then(() => {\n          this.$refs.videoPicker.value = null\n        })\n        .catch(imError => {\n          this.$store.commit('showMessage', {\n            message: imError.message,\n            type: 'error'\n          })\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"stylus\" scoped>\n#message-send-box-wrapper {\n  box-sizing: border-box;\n  overflow: hidden;\n  padding: 10%;\n}\n.emoji {\n  padding: 8px;\n  font-size: 18px;\n}\n\n.emojis {\n  height: 150px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  overflow-y: scroll;\n}\n\n.send-header-bar {\n  box-sizing: border-box;\n  padding: 3px 0 0 0;\n  flex-direction: row,\n}\n\n.send-header-bar i {\n  cursor: pointer;\n  font-size: 24px;\n  color: gray;\n  margin: 0 12px 0 0;\n}\n\n.send-header-bar i:hover {\n  color: $black;\n}\n\ntextarea {\n  resize: none;\n}\n\n.text-input {\n  font-size: 16px;\n  width: 72%;\n  box-sizing: box-sizing;\n  border: none;\n  outline: none;\n  background-color: transparent;\n}\n\n.block {\n  padding: 10px 0;\n  display: flex;\n  align-items: center;\n}\n\n.bottom {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n\n  .btn-send {\n    cursor: pointer;\n    position: absolute;\n    color: $primary;\n    font-size: 30px;\n    right: 0;\n    bottom: -5px;\n    padding: 6px 6px 4px 4px;\n    border-radius: 50%;\n  }\n}\n\n.voice {\n  padding: 4px;\n}\n</style>\n"],"sourceRoot":"src/components/message"}]}