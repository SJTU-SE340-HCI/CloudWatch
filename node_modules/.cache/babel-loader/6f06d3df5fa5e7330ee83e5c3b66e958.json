{"remainingRequest":"D:\\HCI\\github\\node_modules\\thread-loader\\dist\\cjs.js!D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js!D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\components\\room.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\github\\src\\components\\room.vue","mtime":1593418846939},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1589122702323},{"path":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js","mtime":1589122690916},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport MessageSendBox from \"./message/message-bottom-send-box\";\nimport CurrentConversation from \"./conversation/current-conversation\";\nimport ImagePreviewer from \"./message/image-previewer\";\nimport CallLayer from \"./message/call-layer\";\nimport Player from \"./video/video\";\nimport Record from \"./record\";\nimport _screenfull from 'screenfull';\nimport { MESSAGE_TYPE } from 'vue-baberrage';\nexport default {\n  name: 'Room',\n  components: {\n    MessageSendBox: MessageSendBox,\n    //SideBar,\n    CurrentConversation: CurrentConversation,\n    ImagePreviewer: ImagePreviewer,\n    CallLayer: CallLayer,\n    Player: Player,\n    Record: Record\n  },\n  data: function data() {\n    return {\n      showChatRoom: false,\n      isFullscreen: false,\n      showFullButton: true,\n      showChatRoomButton: true,\n      showBottom: false,\n      showRecordButton: false,\n      msg: 'Hello vue-baberrage',\n      barrageIsShow: true,\n      currentId: 0,\n      barrageLoop: false,\n      barrageList: [],\n      showVideo: false\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      document.addEventListener('fullscreenchange', function (e) {\n        _this.toggleFullScreen();\n      });\n    });\n  },\n  methods: {\n    addToList: function addToList(messageList) {\n      var _this2 = this;\n\n      var groupMessageList = messageList.filter(function (message) {\n        return message.type === _this2.TIM.TYPES.MSG_TEXT;\n      });\n      var avatar = groupMessageList[0].avatar == '' ? 'https://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png' : groupMessageList[0].avatar;\n      var nick = groupMessageList[0].nick == '' ? groupMessageList[0].from : groupMessageList[0].nick;\n      window.console.log(groupMessageList);\n      this.barrageList.push({\n        id: ++this.currentId,\n        avatar: avatar,\n        msg: nick + ':' + groupMessageList[0].payload.text,\n        time: 10,\n        type: MESSAGE_TYPE.NORMAL,\n        extraWidth: 2\n      });\n\n      if (this.$store.getters.getRecordingState == true) {\n        var barrageMsg = nick + ':' + groupMessageList[0].payload.text;\n        this.$store.commit('addBarrage', barrageMsg);\n      }\n    },\n    sendBarrage: function sendBarrage(message) {\n      console.log('parent receive');\n      this.barrageList.push({\n        id: ++this.currentId,\n        msg: message,\n        time: 10,\n        type: MESSAGE_TYPE.NORMAL,\n        extraWidth: 2\n      });\n    },\n    beginRecord: function beginRecord() {\n      this.$refs.Record.beginRecord();\n      this.$refs.Record.presentRecord();\n    },\n    finishRecord: function finishRecord() {\n      this.$refs.Record.finishRecord();\n      this.$refs.Record.finishPresent();\n    },\n    recordVoice: function recordVoice(linkOrder) {\n      console.log('parent receive');\n      console.log(this.$refs.MessageSendBox);\n      this.$refs.MessageSendBox.recordvoice(linkOrder);\n    },\n    screenfull: function screenfull() {\n      if (!_screenfull.isEnabled) {\n        this.$message({\n          message: 'Your browser does not work',\n          type: 'warning'\n        });\n        return false;\n      }\n\n      _screenfull.toggle();\n    },\n    exitRoom: function exitRoom() {\n      this.$parent.isRoom = false;\n    },\n    toggleFullScreen: function toggleFullScreen() {\n      this.isFullscreen = !this.isFullscreen;\n      this.showFullButton = this.isFullscreen ? false : true;\n      this.showChatRoomButton = this.isFullscreen ? false : true;\n    },\n    checkmouse: function checkmouse(event) {\n      if (event.clientX < 10) {\n        this.showFullButton = true;\n      }\n\n      if (event.clientX > 80 && this.isFullscreen) {\n        this.showFullButton = false;\n      }\n\n      if (event.clientX > document.body.clientWidth - 10) {\n        this.showChatRoomButton = true;\n      }\n\n      if (event.clientX < document.body.clientWidth - 100 && this.isFullscreen) {\n        this.showChatRoomButton = false;\n      }\n\n      if (event.clientY > document.body.clientHeight - 70) {\n        this.showBottom = true;\n      }\n\n      if (event.clientY < document.body.clientHeight - 100) {\n        this.showBottom = false;\n      }\n    }\n  }\n};",null]}