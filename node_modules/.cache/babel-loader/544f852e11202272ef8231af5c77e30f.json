{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/thread-loader/dist/cjs.js!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/message/message-footer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/message/message-footer.vue","mtime":1588990158998},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/thread-loader/dist/cjs.js","mtime":1588990157969},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1588990144242},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1588990158440}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { getFullDate } from \"../../utils/date\";\nexport default {\n  name: 'MessageFooter',\n  props: {\n    message: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    currentUserProfile: function currentUserProfile(state) {\n      return state.user.currentUserProfile;\n    },\n    currentMemberList: function currentMemberList(state) {\n      return state.group.currentMemberList;\n    }\n  }), {\n    date: function date() {\n      return getFullDate(new Date(this.message.time * 1000));\n    },\n    from: function from() {\n      var isC2C = this.currentConversation.type === this.TIM.TYPES.CONV_C2C; // 自己发送的用昵称渲染\n\n      if (this.isMine) {\n        return this.currentUserProfile.nick || this.currentUserProfile.userID;\n      } // 1. C2C 的消息体中还无 nick / avatar 字段，需从 conversation.userProfile 中获取\n\n\n      if (isC2C) {\n        return this.currentConversation.userProfile.nick || this.currentConversation.userProfile.userID;\n      } // 2. 群组消息，用消息体中的 nick 渲染。nameCard暂时支持不完善\n\n\n      return this.message.nick || this.message.from;\n    },\n    isMine: function isMine() {\n      return this.message.flow === 'out';\n    }\n  })\n};",null]}