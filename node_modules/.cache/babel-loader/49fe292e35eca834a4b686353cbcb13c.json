{"remainingRequest":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/babel-loader/lib/index.js!/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhengwei/SJTU/HCI/CloudWatch/src/components/user/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/src/components/user/login.vue","mtime":1591886080531},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/cache-loader/dist/cjs.js","mtime":1589115288536},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/babel-loader/lib/index.js","mtime":1589115288422},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/cache-loader/dist/cjs.js","mtime":1589115288536},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/vue-loader/lib/index.js","mtime":1589115292369}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport _Option2 from \"element-ui/lib/theme-chalk/option.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Option from \"element-ui/lib/option\";\nimport _Select2 from \"element-ui/lib/theme-chalk/select.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Select from \"element-ui/lib/select\";\nimport _FormItem2 from \"element-ui/lib/theme-chalk/form-item.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _FormItem from \"element-ui/lib/form-item\";\nimport _Form2 from \"element-ui/lib/theme-chalk/form.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Form from \"element-ui/lib/form\";\n\nfunction _createForOfIteratorHelper(o) { if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (o = _unsupportedIterableToArray(o))) { var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var it, normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(n); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport logo from \"../../assets/image/logo.png\";\nimport axios from 'axios';\nimport { mapState } from 'vuex';\nexport default {\n  name: 'Login',\n  components: {\n    ElForm: _Form,\n    ElFormItem: _FormItem,\n    ElSelect: _Select,\n    ElOption: _Option\n  },\n  data: function data() {\n    var _this = this;\n\n    var checkUserID = function checkUserID(rule, value, callback) {\n      if (!/^[a-zA-Z][a-zA-Z0-9_]{3,23}$/.test(value)) {\n        callback(new Error('不合法（字母开头+字母/数字，长度4-24)'));\n      } else {\n        callback();\n      }\n    };\n\n    var checkRoomNumber = function checkRoomNumber(rule, value, callback) {\n      if (!/^[1-9][0-9]{0,9}$/.test(value)) {\n        callback(new Error('不合法自然数，长度1-10'));\n      } else {\n        callback();\n      }\n    };\n\n    var password_check = function password_check(rule, value, callback) {\n      if (value !== _this.register_data.password) {\n        callback(new Error('两次输入密码不一致!'));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      form: {\n        userID: '',\n        password: '',\n        room: ''\n      },\n      register_data: {\n        userID: '',\n        password: '',\n        password_check: ''\n      },\n      rules: {\n        userID: [{\n          required: true,\n          message: '请输入 userID',\n          trigger: 'blur'\n        }, {\n          validator: checkUserID,\n          trigger: 'blur'\n        }],\n        password: [{\n          required: true,\n          message: '请输入密码',\n          trigger: 'blur'\n        }],\n        password_check: [{\n          required: true,\n          message: '请再次输入密码',\n          trigger: 'blur'\n        }, {\n          validator: password_check,\n          trigger: 'blur'\n        }],\n        room: [{\n          required: true,\n          message: '请输入房间号',\n          trigger: 'blur'\n        }, {\n          validator: checkRoomNumber,\n          trigger: 'blur'\n        }]\n      },\n      logo: logo,\n      registerVisible: false,\n      loading: false,\n      isLogin: true,\n      isRegister: false\n    };\n  },\n  methods: {\n    handleEnter: function handleEnter() {\n      if (this.isLogin) {\n        if (this.isRegister) {\n          this.register();\n        } else {\n          this.submit();\n        }\n      } else {\n        this.enterRoom();\n      }\n    },\n    submit: function submit() {\n      var _this2 = this;\n\n      this.$refs['login'].validate(function (valid) {\n        if (valid) {\n          _this2.login();\n        }\n      });\n    },\n    register: function register() {\n      var _this3 = this;\n\n      this.$refs['register_data'].validate(function (valid) {\n        if (valid) {\n          axios.post('http://47.103.30.166:8020/User/register', {\n            accountUser: _this3.register_data.userID,\n            passwordUser: _this3.register_data.password\n          }).then(function (res) {\n            console.log(res);\n\n            if (res.data == 'success') {\n              _this3.$store.commit('showMessage', {\n                type: 'success',\n                message: '注册成功'\n              });\n\n              _this3.isRegister = true;\n            }\n\n            if (res.data == 'account already exist') {\n              _this3.$store.commit('showMessage', {\n                type: 'error',\n                message: '用户id \"' + _this3.register_data.userID + '\" 已存在'\n              });\n            }\n          }).catch(function (err) {\n            console.log(err);\n          });\n        }\n      });\n    },\n    enterRoomSuccess: function enterRoomSuccess(groupID) {\n      this.$store.dispatch('checkoutConversation', 'GROUP' + groupID);\n      this.$store.commit('toggleIsLogin', true);\n      this.$store.commit('showMessage', {\n        type: 'success',\n        message: '进入房间成功'\n      });\n    },\n    enterRoom: function enterRoom() {\n      var _this4 = this;\n\n      this.$refs['room'].validate(function (valid) {\n        if (valid) {\n          axios.get('http://47.103.30.166:8020/Room/SignIn', {\n            params: {\n              room_id: _this4.form.room,\n              password: _this4.form.password\n            }\n          }).then(function (res) {\n            var signInRes = res.data;\n\n            if (signInRes === 'invalid room') {\n              _this4.$store.commit('showMessage', {\n                type: 'error',\n                message: '房间不存在'\n              });\n\n              _this4.loading = false;\n              return;\n            } else {\n              if (signInRes === 'invalid password') {\n                _this4.$store.commit('showMessage', {\n                  type: 'error',\n                  message: '密码不正确'\n                });\n\n                _this4.loading = false;\n                return;\n              } else {\n                // get sdk room id from server\n                axios.get('http://47.103.30.166:8020/Room/findById', {\n                  params: {\n                    room_id: _this4.form.room\n                  }\n                }).then(function (res) {\n                  _this4.$store.commit('changeRoom', res.data);\n                });\n\n                _this4.tim.getGroupList().then(function (response) {\n                  var _iterator = _createForOfIteratorHelper(response.data.groupList),\n                      _step;\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      var group = _step.value;\n\n                      if (group.groupID == _this4.form.room) {\n                        _this4.enterRoomSuccess(group.groupID);\n\n                        return;\n                      }\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                  _this4.tim.joinGroup({\n                    groupID: _this4.form.room\n                  }).then(function (response) {\n                    _this4.enterRoomSuccess(response.data.group.groupID);\n                  }).catch(function () {\n                    _this4.tim.createGroup({\n                      groupID: _this4.form.room,\n                      name: _this4.form.room,\n                      type: _this4.TIM.TYPES.GRP_PUBLIC,\n                      joinOption: _this4.TIM.TYPES.JOIN_OPTIONS_FREE_ACCESS\n                    }).then(function (response) {\n                      _this4.enterRoomSuccess(response.data.group.groupID);\n                    }).catch(function (error) {\n                      _this4.$store.commit('showMessage', {\n                        type: 'error',\n                        message: error\n                      });\n                    });\n                  });\n                });\n              }\n            }\n          });\n        }\n      });\n    },\n    login: function login() {\n      var _this5 = this;\n\n      this.loading = true;\n      axios.get('http://47.103.30.166:8020/User/SignIn', {\n        params: {\n          account: this.form.userID,\n          password: this.form.password\n        }\n      }).then(function (res) {\n        var signInRes = res.data;\n\n        if (signInRes === 'invalid account') {\n          _this5.$store.commit('showMessage', {\n            type: 'error',\n            message: '帐号不存在'\n          });\n\n          _this5.loading = false;\n          return;\n        } else {\n          if (signInRes === 'invalid password') {\n            _this5.$store.commit('showMessage', {\n              type: 'error',\n              message: '密码不正确'\n            });\n\n            _this5.loading = false;\n            return;\n          } else {\n            _this5.tim.login({\n              userID: _this5.form.userID,\n              userSig: window.genTestUserSig(_this5.form.userID).userSig\n            }).then(function () {\n              _this5.loading = false;\n              _this5.isLogin = false;\n\n              _this5.$store.commit('startComputeCurrent');\n\n              _this5.$store.commit({\n                type: 'GET_USER_INFO',\n                userID: _this5.form.userID,\n                userSig: window.genTestUserSig(_this5.form.userID).userSig,\n                sdkAppID: window.genTestUserSig('').SDKAppID\n              });\n\n              _this5.$store.commit('showMessage', {\n                type: 'success',\n                message: '登录成功'\n              });\n            }).catch(function (error) {\n              _this5.loading = false;\n\n              _this5.$store.commit('showMessage', {\n                message: '登录失败：' + error.message,\n                type: 'error'\n              });\n            });\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["login.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class='login-wrapper'>\n    <img class='logo' :src='logo' />\n    <el-form\n      v-show='isLogin && !isRegister'\n      ref='login'\n      :rules='rules'\n      :model='form'\n      label-width='0'\n      style='width:100%'\n      @keydown.enter.native='handleEnter'\n    >\n      <el-form-item prop='userID'>\n        <el-input v-model='form.userID' placeholder='请输入用户名' type='text' clearable></el-input>\n      </el-form-item>\n      <el-form-item prop='password'>\n        <el-input\n          v-model='form.password'\n          placeholder='请输入密码'\n          type='password'\n          show-password\n          clearable\n        ></el-input>\n      </el-form-item>\n    </el-form>\n    <el-form\n            v-show='isLogin && isRegister'\n            ref='register_data'\n            :rules='rules'\n            :model='register_data'\n            label-width='0'\n            style='width:100%'\n            @keydown.enter.native='handleEnter'\n    >\n      <el-form-item prop='userID'>\n        <el-input v-model='register_data.userID' placeholder='请输入注册用户id' type='text' clearable></el-input>\n      </el-form-item>\n      <el-form-item prop='password'>\n        <el-input\n                v-model='register_data.password'\n                placeholder='请输入注册密码'\n                type='password'\n                show-password\n                clearable\n        ></el-input>\n      </el-form-item>\n      <el-form-item prop='password_check'>\n        <el-input\n                v-model='register_data.password_check'\n                placeholder='请再次输入注册密码'\n                type='password'\n                show-password\n                clearable\n        ></el-input>\n      </el-form-item>\n    </el-form>\n\n    <el-form\n            ref=\"room\"\n            v-show=\"!isLogin\"\n            :rules='rules'\n            :model='form'\n            label-width='0'\n            style='width:100%'\n            @keydown.enter.native='handleEnter'\n    >\n      <el-form-item prop='room'>\n        <el-input v-model='form.room' placeholder='请输入房间号' type='text' clearable></el-input>\n      </el-form-item>\n      <el-form-item prop='password'>\n        <el-input\n          v-model='form.password'\n          placeholder='请输入密码'\n          type='password'\n          show-password\n          clearable\n        ></el-input>\n      </el-form-item>\n    </el-form>\n    <el-button\n      type='primary'\n      @click='submit'\n      style='width:100%; margin: 3px;'\n      :loading='loading'\n      v-show='isLogin && !isRegister'\n    >登录</el-button>\n    <el-button\n            @click='isRegister = true'\n            style='width:100%; margin: 3px'\n            :loading='loading'\n            v-show='isLogin && !isRegister'\n    >去注册</el-button>\n    <el-button\n            @click='isRegister = false'\n            style='width:100%; margin: 3px;'\n            :loading='loading'\n            v-show='isLogin && isRegister'\n    >去登录</el-button>\n    <el-button\n            type='primary'\n            @click='register'\n            style='width:100%; margin: 3px'\n            :loading='loading'\n            v-show='isLogin && isRegister'\n    >注册</el-button>\n    <el-button\n      type='primary'\n      @click='enterRoom'\n      style='width:100%; margin-top: 6px'\n      :loading='loading'\n      v-show=\"!isLogin\"\n    >进入房间</el-button>\n  </div>\n</template>\n\n<script>\nimport { Form, FormItem, Select, Option } from 'element-ui'\nimport logo from '../../assets/image/logo.png'\nimport axios from 'axios'\nimport { mapState } from 'vuex'\nexport default {\n  name: 'Login',\n  components: {\n    ElForm: Form,\n    ElFormItem: FormItem,\n    ElSelect: Select,\n    ElOption: Option\n  },\n  data() {\n    const checkUserID = (rule, value, callback) => {\n      if (!/^[a-zA-Z][a-zA-Z0-9_]{3,23}$/.test(value)) {\n        callback(new Error('不合法（字母开头+字母/数字，长度4-24)'))\n      } else {\n        callback()\n      }\n    }\n    const checkRoomNumber = (rule, value, callback) => {\n      if (!/^[1-9][0-9]{0,9}$/.test(value)) {\n        callback(new Error('不合法自然数，长度1-10'))\n      } else {\n        callback()\n      }\n    }\n    const password_check = (rule, value, callback) => {\n      if (value !== this.register_data.password) {\n        callback(new Error('两次输入密码不一致!'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      form: {\n        userID: '',\n        password: '',\n        room: ''\n      },\n      register_data: {\n        userID: '',\n        password: '',\n        password_check: '',\n      },\n      rules: {\n        userID: [\n          { required: true, message: '请输入 userID', trigger: 'blur' },\n          { validator: checkUserID, trigger: 'blur' }\n        ],\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n        password_check: [\n          { required: true, message: '请再次输入密码', trigger: 'blur' },\n          { validator: password_check, trigger: 'blur' }\n        ],\n        room: [\n          { required: true, message: '请输入房间号', trigger: 'blur' },\n          { validator: checkRoomNumber, trigger: 'blur' }\n        ]\n      },\n      logo: logo,\n      registerVisible: false,\n      loading: false,\n      isLogin: true,\n      isRegister: false\n    }\n  },\n  methods: {\n    handleEnter() {\n      if (this.isLogin) {\n        if (this.isRegister) {\n          this.register()\n        } else {\n          this.submit()\n        }\n      } else {\n        this.enterRoom()\n      }\n    },\n    submit() {\n      this.$refs['login'].validate(valid => {\n        if (valid) {\n          this.login()\n        }\n      })\n    },\n    register() {\n      this.$refs['register_data'].validate(valid => {\n        if (valid) {\n          axios.post('http://47.103.30.166:8020/User/register', {\n            accountUser: this.register_data.userID,\n            passwordUser: this.register_data.password,\n          }).then(res => {\n            console.log(res)\n            if (res.data == 'success') {\n              this.$store.commit('showMessage', {\n                type: 'success',\n                message: '注册成功'\n              })\n              this.isRegister = true\n            }\n            if (res.data == 'account already exist') {\n              this.$store.commit('showMessage', {\n                type: 'error',\n                message: '用户id \"' + this.register_data.userID +'\" 已存在'\n              })\n            }\n          }).catch(err => {\n            console.log(err)\n          })\n        }\n      })\n    },\n    enterRoomSuccess(groupID) {\n      this.$store.dispatch('checkoutConversation', 'GROUP' + groupID)\n      this.$store.commit('toggleIsLogin', true)\n      this.$store.commit('showMessage', {\n        type: 'success',\n        message: '进入房间成功'\n      })\n    },\n    enterRoom() {\n      this.$refs['room'].validate(valid => {\n        if (valid) {\n          axios\n            .get('http://47.103.30.166:8020/Room/SignIn', {\n              params: {\n                room_id: this.form.room,\n                password: this.form.password\n              }\n            })\n            .then(res => {\n              var signInRes = res.data\n              if (signInRes === 'invalid room') {\n                this.$store.commit('showMessage', {\n                  type: 'error',\n                  message: '房间不存在'\n                })\n                this.loading = false\n                return\n              } else {\n                if (signInRes === 'invalid password') {\n                  this.$store.commit('showMessage', {\n                    type: 'error',\n                    message: '密码不正确'\n                  })\n                  this.loading = false\n                  return\n                } else {\n                  // get sdk room id from server\n                  axios\n                    .get('http://47.103.30.166:8020/Room/findById', {\n                      params: {\n                        room_id: this.form.room\n                      }\n                    })\n                    .then(res => {\n                      this.$store.commit('changeRoom', res.data)\n                    })\n\n                  this.tim.getGroupList().then(response => {\n                    for (var group of response.data.groupList) {\n                      if (group.groupID == this.form.room) {\n                        this.enterRoomSuccess(group.groupID)\n                        return\n                      }\n                    }\n\n                    this.tim\n                      .joinGroup({\n                        groupID: this.form.room\n                      })\n                      .then(response => {\n                        this.enterRoomSuccess(response.data.group.groupID)\n                      })\n                      .catch(() => {\n                        this.tim\n                          .createGroup({\n                            groupID: this.form.room,\n                            name: this.form.room,\n                            type: this.TIM.TYPES.GRP_PUBLIC,\n                            joinOption: this.TIM.TYPES.JOIN_OPTIONS_FREE_ACCESS\n                          })\n                          .then(response => {\n                            this.enterRoomSuccess(response.data.group.groupID)\n                          })\n                          .catch(error => {\n                            this.$store.commit('showMessage', {\n                              type: 'error',\n                              message: error\n                            })\n                          })\n                      })\n                  })\n                }\n              }\n            })\n        }\n      })\n    },\n    login() {\n      this.loading = true\n      axios\n        .get('http://47.103.30.166:8020/User/SignIn', {\n          params: {\n            account: this.form.userID,\n            password: this.form.password\n          }\n        })\n        .then(res => {\n          var signInRes = res.data\n          if (signInRes === 'invalid account') {\n            this.$store.commit('showMessage', {\n              type: 'error',\n              message: '帐号不存在'\n            })\n            this.loading = false\n            return\n          } else {\n            if (signInRes === 'invalid password') {\n              this.$store.commit('showMessage', {\n                type: 'error',\n                message: '密码不正确'\n              })\n              this.loading = false\n              return\n            } else {\n              this.tim\n                .login({\n                  userID: this.form.userID,\n                  userSig: window.genTestUserSig(this.form.userID).userSig\n                })\n                .then(() => {\n                  this.loading = false\n                  this.isLogin = false\n                  this.$store.commit('startComputeCurrent')\n                  this.$store.commit({\n                    type: 'GET_USER_INFO',\n                    userID: this.form.userID,\n                    userSig: window.genTestUserSig(this.form.userID).userSig,\n                    sdkAppID: window.genTestUserSig('').SDKAppID\n                  })\n                  this.$store.commit('showMessage', {\n                    type: 'success',\n                    message: '登录成功'\n                  })\n                })\n                .catch(error => {\n                  this.loading = false\n                  this.$store.commit('showMessage', {\n                    message: '登录失败：' + error.message,\n                    type: 'error'\n                  })\n                })\n            }\n          }\n        })\n    }\n  }\n}\n</script>\n\n<style lang='stylus' scoped>\n.login-wrapper {\n  display: flex\n  align-items: center\n  flex-direction: column\n  width: 400px\n  padding: 20px 80px 50px\n  background: $white\n  color: $black\n  border-radius: 5px\n  box-shadow: 0 11px 20px 0 rgba(0, 0, 0, 0.3)\n\n  .logo {\n    width: 130px\n    height: 130px\n  }\n\n  .register-button {\n    width: 100%\n    margin: 6px 0 0 0\n  }\n\n  .user-selector {\n    width: 100%\n  }\n}\n</style>\n"],"sourceRoot":"src/components/user"}]}