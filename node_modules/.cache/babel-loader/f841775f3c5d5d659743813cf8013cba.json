{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/eslint-loader/index.js??ref--13-0!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/store/index.js","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/store/index.js","mtime":1592995562113},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1588990144242},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/eslint-loader/index.js","mtime":1588990146717}],"contextDependencies":[],"result":["import _Message2 from \"element-ui/lib/theme-chalk/message.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Message from \"element-ui/lib/message\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport conversation from \"./modules/conversation\";\nimport group from \"./modules/group\";\nimport user from \"./modules/user\";\nimport video from \"./modules/video\";\nimport friend from \"./modules/friend\";\nimport blacklist from \"./modules/blacklist\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    current: Date.now(),\n    // 当前时间\n    intervalID: 0,\n    message: undefined,\n    currentRoom: {},\n    currentRoomId: \"\"\n    /*UserId: \"\",\n    RoomId:\"\",\n    ImRoomId:\"\",\n    TrtcRoomId:\"\",\n    VideoRoomId:\"\"*/\n\n  },\n  getters: {\n    hidden: function hidden(state) {\n      // eslint-disable-next-line no-unused-vars\n      var temp = state.current;\n\n      if (typeof document.hasFocus !== 'function') {\n        return document.hidden;\n      }\n\n      return !document.hasFocus();\n    }\n  },\n  mutations: {\n    startComputeCurrent: function startComputeCurrent(state) {\n      state.intervalID = setInterval(function () {\n        state.current = Date.now();\n      }, 500);\n    },\n    stopComputeCurrent: function stopComputeCurrent(state) {\n      clearInterval(state.intervalID);\n      state.intervalID = 0;\n    },\n    showMessage: function showMessage(state, options) {\n      if (state.message) {\n        state.message.close();\n      }\n\n      state.message = _Message({\n        message: options.message,\n        type: options.type || 'success',\n        duration: options.duration || 2000,\n        offset: 40\n      });\n    },\n    changeRoom: function changeRoom(state, room) {\n      state.currentRoom = room;\n    },\n    changeRoomId: function changeRoomId(state, roomId) {\n      state.currentRoomId = roomId;\n    }\n  },\n  modules: {\n    conversation: conversation,\n    group: group,\n    friend: friend,\n    blacklist: blacklist,\n    user: user,\n    video: video\n  }\n});",{"version":3,"sources":["/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/store/index.js"],"names":["Vue","Vuex","conversation","group","user","video","friend","blacklist","use","Store","state","current","Date","now","intervalID","message","undefined","currentRoom","currentRoomId","getters","hidden","temp","document","hasFocus","mutations","startComputeCurrent","setInterval","stopComputeCurrent","clearInterval","showMessage","options","close","type","duration","offset","changeRoom","room","changeRoomId","roomId","modules"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AAGAP,GAAG,CAACQ,GAAJ,CAAQP,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACQ,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEC,IAAI,CAACC,GAAL,EADJ;AACgB;AACrBC,IAAAA,UAAU,EAAE,CAFP;AAGLC,IAAAA,OAAO,EAAEC,SAHJ;AAILC,IAAAA,WAAW,EAAC,EAJP;AAKLC,IAAAA,aAAa,EAAC;AACd;;;;;;AANK,GADqB;AAa5BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MADO,kBACAV,KADA,EACO;AACZ;AACA,UAAMW,IAAI,GAAGX,KAAK,CAACC,OAAnB;;AACA,UAAI,OAAOW,QAAQ,CAACC,QAAhB,KAA6B,UAAjC,EAA6C;AAC3C,eAAOD,QAAQ,CAACF,MAAhB;AACD;;AACD,aAAO,CAACE,QAAQ,CAACC,QAAT,EAAR;AACD;AARM,GAbmB;AAuB5BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,mBADS,+BACWf,KADX,EACkB;AACzBA,MAAAA,KAAK,CAACI,UAAN,GAAmBY,WAAW,CAAC,YAAM;AACnChB,QAAAA,KAAK,CAACC,OAAN,GAAgBC,IAAI,CAACC,GAAL,EAAhB;AACD,OAF6B,EAE3B,GAF2B,CAA9B;AAGD,KALQ;AAMTc,IAAAA,kBANS,8BAMUjB,KANV,EAMiB;AACxBkB,MAAAA,aAAa,CAAClB,KAAK,CAACI,UAAP,CAAb;AACAJ,MAAAA,KAAK,CAACI,UAAN,GAAmB,CAAnB;AACD,KATQ;AAUTe,IAAAA,WAVS,uBAUGnB,KAVH,EAUUoB,OAVV,EAUmB;AAC1B,UAAIpB,KAAK,CAACK,OAAV,EAAmB;AACjBL,QAAAA,KAAK,CAACK,OAAN,CAAcgB,KAAd;AACD;;AACDrB,MAAAA,KAAK,CAACK,OAAN,GAAgB,SAAQ;AACtBA,QAAAA,OAAO,EAAEe,OAAO,CAACf,OADK;AAEtBiB,QAAAA,IAAI,EAAEF,OAAO,CAACE,IAAR,IAAgB,SAFA;AAGtBC,QAAAA,QAAQ,EAAEH,OAAO,CAACG,QAAR,IAAoB,IAHR;AAItBC,QAAAA,MAAM,EAAE;AAJc,OAAR,CAAhB;AAMD,KApBQ;AAqBTC,IAAAA,UArBS,sBAqBEzB,KArBF,EAqBQ0B,IArBR,EAsBT;AACE1B,MAAAA,KAAK,CAACO,WAAN,GAAkBmB,IAAlB;AACD,KAxBQ;AA0BTC,IAAAA,YA1BS,wBA0BI3B,KA1BJ,EA0BU4B,MA1BV,EA2BT;AACE5B,MAAAA,KAAK,CAACQ,aAAN,GAAoBoB,MAApB;AACD;AA7BQ,GAvBiB;AAsD5BC,EAAAA,OAAO,EAAE;AACPrC,IAAAA,YAAY,EAAZA,YADO;AAEPC,IAAAA,KAAK,EAALA,KAFO;AAGPG,IAAAA,MAAM,EAANA,MAHO;AAIPC,IAAAA,SAAS,EAATA,SAJO;AAKPH,IAAAA,IAAI,EAAJA,IALO;AAMPC,IAAAA,KAAK,EAALA;AANO;AAtDmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport conversation from './modules/conversation'\nimport group from './modules/group'\nimport user from './modules/user'\nimport video from './modules/video'\nimport friend from './modules/friend'\nimport blacklist from './modules/blacklist'\nimport {Message} from 'element-ui'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    current: Date.now(), // 当前时间\n    intervalID: 0,\n    message: undefined,\n    currentRoom:{},\n    currentRoomId:\"\",\n    /*UserId: \"\",\n    RoomId:\"\",\n    ImRoomId:\"\",\n    TrtcRoomId:\"\",\n    VideoRoomId:\"\"*/\n  },\n  getters: {\n    hidden(state) {\n      // eslint-disable-next-line no-unused-vars\n      const temp = state.current \n      if (typeof document.hasFocus !== 'function') {\n        return document.hidden\n      }\n      return !document.hasFocus()\n    }\n  },\n  mutations: {\n    startComputeCurrent(state) {\n      state.intervalID = setInterval(() => {\n        state.current = Date.now()\n      }, 500)\n    },\n    stopComputeCurrent(state) {\n      clearInterval(state.intervalID)\n      state.intervalID = 0\n    },\n    showMessage(state, options) {\n      if (state.message) {\n        state.message.close()\n      }\n      state.message = Message({\n        message: options.message,\n        type: options.type || 'success',\n        duration: options.duration || 2000,\n        offset: 40\n      })\n    },\n    changeRoom(state,room)\n    {\n      state.currentRoom=room\n    },\n\n    changeRoomId(state,roomId)\n    {\n      state.currentRoomId=roomId\n    }\n  },\n  modules: {\n    conversation,\n    group,\n    friend,\n    blacklist,\n    user,\n    video\n  }\n})\n"]}]}