{"remainingRequest":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js!D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\components\\message\\message-footer.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\github\\src\\components\\message\\message-footer.vue","mtime":1589122703615},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js","mtime":1589122690916},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"D:\\\\HCI\\\\github\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\nimport { mapState } from 'vuex';\nimport { getFullDate } from \"../../utils/date\";\nexport default {\n  name: 'MessageFooter',\n  props: {\n    message: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: _objectSpread({}, mapState({\n    currentConversation: function currentConversation(state) {\n      return state.conversation.currentConversation;\n    },\n    currentUserProfile: function currentUserProfile(state) {\n      return state.user.currentUserProfile;\n    },\n    currentMemberList: function currentMemberList(state) {\n      return state.group.currentMemberList;\n    }\n  }), {\n    date: function date() {\n      return getFullDate(new Date(this.message.time * 1000));\n    },\n    from: function from() {\n      var isC2C = this.currentConversation.type === this.TIM.TYPES.CONV_C2C; // 自己发送的用昵称渲染\n\n      if (this.isMine) {\n        return this.currentUserProfile.nick || this.currentUserProfile.userID;\n      } // 1. C2C 的消息体中还无 nick / avatar 字段，需从 conversation.userProfile 中获取\n\n\n      if (isC2C) {\n        return this.currentConversation.userProfile.nick || this.currentConversation.userProfile.userID;\n      } // 2. 群组消息，用消息体中的 nick 渲染。nameCard暂时支持不完善\n\n\n      return this.message.nick || this.message.from;\n    },\n    isMine: function isMine() {\n      return this.message.flow === 'out';\n    }\n  })\n};",{"version":3,"sources":["message-footer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAQA,SAAA,QAAA,QAAA,MAAA;AACA,SAAA,WAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,QAAA,oBACA,QAAA,CAAA;AACA,IAAA,mBAAA,EAAA,6BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,YAAA,CAAA,mBAAA;AAAA,KADA;AAEA,IAAA,kBAAA,EAAA,4BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,IAAA,CAAA,kBAAA;AAAA,KAFA;AAGA,IAAA,iBAAA,EAAA,2BAAA,KAAA;AAAA,aAAA,KAAA,CAAA,KAAA,CAAA,iBAAA;AAAA;AAHA,GAAA,CADA;AAMA,IAAA,IANA,kBAMA;AACA,aAAA,WAAA,CAAA,IAAA,IAAA,CAAA,KAAA,OAAA,CAAA,IAAA,GAAA,IAAA,CAAA,CAAA;AACA,KARA;AASA,IAAA,IATA,kBASA;AACA,UAAA,KAAA,GAAA,KAAA,mBAAA,CAAA,IAAA,KAAA,KAAA,GAAA,CAAA,KAAA,CAAA,QAAA,CADA,CAEA;;AACA,UAAA,KAAA,MAAA,EAAA;AACA,eAAA,KAAA,kBAAA,CAAA,IAAA,IAAA,KAAA,kBAAA,CAAA,MAAA;AACA,OALA,CAMA;;;AACA,UAAA,KAAA,EAAA;AACA,eACA,KAAA,mBAAA,CAAA,WAAA,CAAA,IAAA,IACA,KAAA,mBAAA,CAAA,WAAA,CAAA,MAFA;AAIA,OAZA,CAaA;;;AACA,aAAA,KAAA,OAAA,CAAA,IAAA,IAAA,KAAA,OAAA,CAAA,IAAA;AACA,KAxBA;AAyBA,IAAA,MAzBA,oBAyBA;AACA,aAAA,KAAA,OAAA,CAAA,IAAA,KAAA,KAAA;AACA;AA3BA;AARA,CAAA","sourcesContent":["<template>\r\n  <div class=\"base\" :class=\"[ isMine ? 'right' : 'left']\">\r\n    <!-- <div class=\"name text-ellipsis\">{{ from }}</div> -->\r\n    <div class=\"date\">{{ date }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { getFullDate } from '../../utils/date'\r\nexport default {\r\n  name: 'MessageFooter',\r\n  props: {\r\n    message: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentConversation: state => state.conversation.currentConversation,\r\n      currentUserProfile: state => state.user.currentUserProfile,\r\n      currentMemberList: state => state.group.currentMemberList\r\n    }),\r\n    date() {\r\n      return getFullDate(new Date(this.message.time * 1000))\r\n    },\r\n    from() {\r\n      const isC2C = this.currentConversation.type === this.TIM.TYPES.CONV_C2C\r\n      // 自己发送的用昵称渲染\r\n      if (this.isMine) {\r\n        return this.currentUserProfile.nick || this.currentUserProfile.userID\r\n      }\r\n      // 1. C2C 的消息体中还无 nick / avatar 字段，需从 conversation.userProfile 中获取\r\n      if (isC2C) {\r\n        return (\r\n          this.currentConversation.userProfile.nick ||\r\n          this.currentConversation.userProfile.userID\r\n        )\r\n      }\r\n      // 2. 群组消息，用消息体中的 nick 渲染。nameCard暂时支持不完善\r\n      return this.message.nick || this.message.from\r\n    },\r\n    isMine() {\r\n      return this.message.flow === 'out'\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.right {\r\n  display: flex;\r\n  flex-direction: row-reverse;\r\n  margin-right: 15px;\r\n}\r\n.left {\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-left: 15px;\r\n}\r\n.base {\r\n  color: $secondary;\r\n  font-size: 12px;\r\n}\r\n.name {\r\n  padding: 0 4px;\r\n  max-width: 100px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/message"}]}