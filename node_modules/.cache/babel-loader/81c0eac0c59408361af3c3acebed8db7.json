{"remainingRequest":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/babel-loader/lib/index.js!/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/eslint-loader/index.js??ref--13-0!/Users/liuzhengwei/SJTU/HCI/CloudWatch/src/store/index.js","dependencies":[{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/src/store/index.js","mtime":1593511561334},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/cache-loader/dist/cjs.js","mtime":1589115288536},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/babel-loader/lib/index.js","mtime":1589115288422},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/eslint-loader/index.js","mtime":1589115289431}],"contextDependencies":[],"result":["import _Message2 from \"element-ui/lib/theme-chalk/message.css\";\nimport \"element-ui/lib/theme-chalk/base.css\";\nimport _Message from \"element-ui/lib/message\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.map\";\nimport \"core-js/modules/es6.number.constructor\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport conversation from \"./modules/conversation\";\nimport group from \"./modules/group\";\nimport user from \"./modules/user\";\nimport video from \"./modules/video\";\nimport friend from \"./modules/friend\";\nimport blacklist from \"./modules/blacklist\";\nVue.use(Vuex);\nexport default new Vuex.Store({\n  state: {\n    current: Date.now(),\n    // 当前时间\n    intervalID: 0,\n    message: undefined,\n    currentRoom: {},\n    currentRoomId: '',\n    currentVideoRoomId: Number,\n    isRecording: false,\n    isPresenting: false,\n    beginRecordingTime: Number,\n    barrages: new Map(),\n    priorBarrages: new Map()\n  },\n  getters: {\n    hidden: function hidden(state) {\n      // eslint-disable-next-line no-unused-vars\n      var temp = state.current;\n\n      if (typeof document.hasFocus !== 'function') {\n        return document.hidden;\n      }\n\n      return !document.hasFocus();\n    },\n    getRecordingState: function getRecordingState(state) {\n      return state.isRecording;\n    },\n    getRecordingBeginTime: function getRecordingBeginTime(state) {\n      return state.beginRecordingTime;\n    },\n    getCurrentVideoId: function getCurrentVideoId(state) {\n      return state.currentVideoRoomId;\n    },\n    getBarrages: function getBarrages(state) {\n      return state.barrages;\n    },\n    getPriorBarrages: function getPriorBarrages(state) {\n      return state.priorBarrages;\n    },\n    getPresentingState: function getPresentingState(state) {\n      return state.isPresenting;\n    }\n  },\n  mutations: {\n    startComputeCurrent: function startComputeCurrent(state) {\n      state.intervalID = setInterval(function () {\n        state.current = Date.now();\n      }, 500);\n    },\n    stopComputeCurrent: function stopComputeCurrent(state) {\n      clearInterval(state.intervalID);\n      state.intervalID = 0;\n    },\n    showMessage: function showMessage(state, options) {\n      if (state.message) {\n        state.message.close();\n      }\n\n      state.message = _Message({\n        message: options.message,\n        type: options.type || 'success',\n        duration: options.duration || 2000,\n        offset: 40\n      });\n    },\n    changeRoom: function changeRoom(state, room) {\n      state.currentRoom = room;\n    },\n    changeRoomId: function changeRoomId(state, roomId) {\n      state.currentRoomId = roomId;\n    },\n    setRecordState: function setRecordState(state, isrecording) {\n      state.isRecording = isrecording;\n    },\n    setPresentState: function setPresentState(state, ispresenting) {\n      state.isPresenting = ispresenting;\n    },\n    setBeginRecordTime: function setBeginRecordTime(state) {\n      state.beginRecordingTime = Date.now();\n    },\n    setVideoRoomId: function setVideoRoomId(state, videoFileId) {\n      var fileid = new Number(parseInt(videoFileId, 10));\n      state.currentVideoRoomId = fileid & 0xffffff;\n    },\n    addBarrage: function addBarrage(state, barrageContent) {\n      var time = Date.now() - state.beginRecordingTime;\n      state.barrages[time] = barrageContent;\n      console.log(state.barrages);\n    },\n    clearBarrage: function clearBarrage(state) {\n      state.barrages = new Map();\n    },\n    setPriorBarrage: function setPriorBarrage(state, barrageList) {\n      state.priorBarrages = barrageList;\n    }\n  },\n  modules: {\n    conversation: conversation,\n    group: group,\n    friend: friend,\n    blacklist: blacklist,\n    user: user,\n    video: video\n  }\n});",{"version":3,"sources":["/Users/liuzhengwei/SJTU/HCI/CloudWatch/src/store/index.js"],"names":["Vue","Vuex","conversation","group","user","video","friend","blacklist","use","Store","state","current","Date","now","intervalID","message","undefined","currentRoom","currentRoomId","currentVideoRoomId","Number","isRecording","isPresenting","beginRecordingTime","barrages","Map","priorBarrages","getters","hidden","temp","document","hasFocus","getRecordingState","getRecordingBeginTime","getCurrentVideoId","getBarrages","getPriorBarrages","getPresentingState","mutations","startComputeCurrent","setInterval","stopComputeCurrent","clearInterval","showMessage","options","close","type","duration","offset","changeRoom","room","changeRoomId","roomId","setRecordState","isrecording","setPresentState","ispresenting","setBeginRecordTime","setVideoRoomId","videoFileId","fileid","parseInt","addBarrage","barrageContent","time","console","log","clearBarrage","setPriorBarrage","barrageList","modules"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,YAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AAGAP,GAAG,CAACQ,GAAJ,CAAQP,IAAR;AAEA,eAAe,IAAIA,IAAI,CAACQ,KAAT,CAAe;AAC5BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEC,IAAI,CAACC,GAAL,EADJ;AACgB;AACrBC,IAAAA,UAAU,EAAE,CAFP;AAGLC,IAAAA,OAAO,EAAEC,SAHJ;AAILC,IAAAA,WAAW,EAAC,EAJP;AAKLC,IAAAA,aAAa,EAAE,EALV;AAMLC,IAAAA,kBAAkB,EAACC,MANd;AAOLC,IAAAA,WAAW,EAAE,KAPR;AAQLC,IAAAA,YAAY,EAAE,KART;AASLC,IAAAA,kBAAkB,EAAEH,MATf;AAULI,IAAAA,QAAQ,EAAE,IAAIC,GAAJ,EAVL;AAWLC,IAAAA,aAAa,EAAE,IAAID,GAAJ;AAXV,GADqB;AAc5BE,EAAAA,OAAO,EAAE;AACPC,IAAAA,MADO,kBACAlB,KADA,EACO;AACZ;AACA,UAAMmB,IAAI,GAAGnB,KAAK,CAACC,OAAnB;;AACA,UAAI,OAAOmB,QAAQ,CAACC,QAAhB,KAA6B,UAAjC,EAA6C;AAC3C,eAAOD,QAAQ,CAACF,MAAhB;AACD;;AACD,aAAO,CAACE,QAAQ,CAACC,QAAT,EAAR;AACD,KARM;AASPC,IAAAA,iBATO,6BASWtB,KATX,EASkB;AACvB,aAAOA,KAAK,CAACW,WAAb;AACD,KAXM;AAYPY,IAAAA,qBAZO,iCAYevB,KAZf,EAYsB;AAC3B,aAAOA,KAAK,CAACa,kBAAb;AACD,KAdM;AAePW,IAAAA,iBAfO,6BAeWxB,KAfX,EAekB;AACvB,aAAOA,KAAK,CAACS,kBAAb;AACD,KAjBM;AAkBPgB,IAAAA,WAlBO,uBAkBKzB,KAlBL,EAkBY;AACjB,aAAOA,KAAK,CAACc,QAAb;AACD,KApBM;AAqBPY,IAAAA,gBArBO,4BAqBU1B,KArBV,EAqBiB;AACtB,aAAOA,KAAK,CAACgB,aAAb;AACD,KAvBM;AAwBPW,IAAAA,kBAxBO,8BAwBY3B,KAxBZ,EAwBmB;AACxB,aAAOA,KAAK,CAACY,YAAb;AACD;AA1BM,GAdmB;AA2C5BgB,EAAAA,SAAS,EAAE;AACTC,IAAAA,mBADS,+BACW7B,KADX,EACkB;AACzBA,MAAAA,KAAK,CAACI,UAAN,GAAmB0B,WAAW,CAAC,YAAM;AACnC9B,QAAAA,KAAK,CAACC,OAAN,GAAgBC,IAAI,CAACC,GAAL,EAAhB;AACD,OAF6B,EAE3B,GAF2B,CAA9B;AAGD,KALQ;AAMT4B,IAAAA,kBANS,8BAMU/B,KANV,EAMiB;AACxBgC,MAAAA,aAAa,CAAChC,KAAK,CAACI,UAAP,CAAb;AACAJ,MAAAA,KAAK,CAACI,UAAN,GAAmB,CAAnB;AACD,KATQ;AAUT6B,IAAAA,WAVS,uBAUGjC,KAVH,EAUUkC,OAVV,EAUmB;AAC1B,UAAIlC,KAAK,CAACK,OAAV,EAAmB;AACjBL,QAAAA,KAAK,CAACK,OAAN,CAAc8B,KAAd;AACD;;AACDnC,MAAAA,KAAK,CAACK,OAAN,GAAgB,SAAQ;AACtBA,QAAAA,OAAO,EAAE6B,OAAO,CAAC7B,OADK;AAEtB+B,QAAAA,IAAI,EAAEF,OAAO,CAACE,IAAR,IAAgB,SAFA;AAGtBC,QAAAA,QAAQ,EAAEH,OAAO,CAACG,QAAR,IAAoB,IAHR;AAItBC,QAAAA,MAAM,EAAE;AAJc,OAAR,CAAhB;AAMD,KApBQ;AAqBTC,IAAAA,UArBS,sBAqBEvC,KArBF,EAqBQwC,IArBR,EAsBT;AACExC,MAAAA,KAAK,CAACO,WAAN,GAAkBiC,IAAlB;AACD,KAxBQ;AA0BTC,IAAAA,YA1BS,wBA0BIzC,KA1BJ,EA0BU0C,MA1BV,EA2BT;AACE1C,MAAAA,KAAK,CAACQ,aAAN,GAAoBkC,MAApB;AACD,KA7BQ;AA+BTC,IAAAA,cA/BS,0BA+BM3C,KA/BN,EA+Ba4C,WA/Bb,EAgCT;AACE5C,MAAAA,KAAK,CAACW,WAAN,GAAkBiC,WAAlB;AACD,KAlCQ;AAoCTC,IAAAA,eApCS,2BAoCO7C,KApCP,EAoCc8C,YApCd,EAqCT;AACE9C,MAAAA,KAAK,CAACY,YAAN,GAAmBkC,YAAnB;AACD,KAvCQ;AAyCTC,IAAAA,kBAzCS,8BAyCU/C,KAzCV,EA0CT;AACEA,MAAAA,KAAK,CAACa,kBAAN,GAAyBX,IAAI,CAACC,GAAL,EAAzB;AACD,KA5CQ;AA8CT6C,IAAAA,cA9CS,0BA8CMhD,KA9CN,EA8CaiD,WA9Cb,EA+CT;AACE,UAAIC,MAAM,GAAC,IAAIxC,MAAJ,CAAWyC,QAAQ,CAACF,WAAD,EAAa,EAAb,CAAnB,CAAX;AACAjD,MAAAA,KAAK,CAACS,kBAAN,GAAyByC,MAAM,GAAC,QAAhC;AACD,KAlDQ;AAoDTE,IAAAA,UApDS,sBAoDEpD,KApDF,EAoDQqD,cApDR,EAqDT;AACE,UAAIC,IAAI,GAAEpD,IAAI,CAACC,GAAL,KAAWH,KAAK,CAACa,kBAA3B;AACAb,MAAAA,KAAK,CAACc,QAAN,CAAewC,IAAf,IAAqBD,cAArB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYxD,KAAK,CAACc,QAAlB;AACD,KAzDQ;AA2DT2C,IAAAA,YA3DS,wBA2DIzD,KA3DJ,EA2DW;AAClBA,MAAAA,KAAK,CAACc,QAAN,GAAe,IAAIC,GAAJ,EAAf;AACD,KA7DQ;AA+DT2C,IAAAA,eA/DS,2BA+DO1D,KA/DP,EA+Dc2D,WA/Dd,EAgET;AACE3D,MAAAA,KAAK,CAACgB,aAAN,GAAoB2C,WAApB;AACD;AAlEQ,GA3CiB;AAgH5BC,EAAAA,OAAO,EAAE;AACPpE,IAAAA,YAAY,EAAZA,YADO;AAEPC,IAAAA,KAAK,EAALA,KAFO;AAGPG,IAAAA,MAAM,EAANA,MAHO;AAIPC,IAAAA,SAAS,EAATA,SAJO;AAKPH,IAAAA,IAAI,EAAJA,IALO;AAMPC,IAAAA,KAAK,EAALA;AANO;AAhHmB,CAAf,CAAf","sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\nimport conversation from './modules/conversation'\nimport group from './modules/group'\nimport user from './modules/user'\nimport video from './modules/video'\nimport friend from './modules/friend'\nimport blacklist from './modules/blacklist'\nimport {Message} from 'element-ui'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n    current: Date.now(), // 当前时间\n    intervalID: 0,\n    message: undefined,\n    currentRoom:{},\n    currentRoomId: '',\n    currentVideoRoomId:Number,\n    isRecording: false,\n    isPresenting: false,\n    beginRecordingTime: Number,\n    barrages: new Map(),\n    priorBarrages: new Map()\n  },\n  getters: {\n    hidden(state) {\n      // eslint-disable-next-line no-unused-vars\n      const temp = state.current \n      if (typeof document.hasFocus !== 'function') {\n        return document.hidden\n      }\n      return !document.hasFocus()\n    },\n    getRecordingState(state) {\n      return state.isRecording\n    },\n    getRecordingBeginTime(state) {\n      return state.beginRecordingTime\n    },\n    getCurrentVideoId(state) {\n      return state.currentVideoRoomId\n    },\n    getBarrages(state) {\n      return state.barrages\n    },\n    getPriorBarrages(state) {\n      return state.priorBarrages\n    },\n    getPresentingState(state) {\n      return state.isPresenting\n    }\n\n  },\n  mutations: {\n    startComputeCurrent(state) {\n      state.intervalID = setInterval(() => {\n        state.current = Date.now()\n      }, 500)\n    },\n    stopComputeCurrent(state) {\n      clearInterval(state.intervalID)\n      state.intervalID = 0\n    },\n    showMessage(state, options) {\n      if (state.message) {\n        state.message.close()\n      }\n      state.message = Message({\n        message: options.message,\n        type: options.type || 'success',\n        duration: options.duration || 2000,\n        offset: 40\n      })\n    },\n    changeRoom(state,room)\n    {\n      state.currentRoom=room\n    },\n\n    changeRoomId(state,roomId)\n    {\n      state.currentRoomId=roomId\n    },\n\n    setRecordState(state, isrecording)\n    {\n      state.isRecording=isrecording\n    },\n\n    setPresentState(state, ispresenting)\n    {\n      state.isPresenting=ispresenting\n    },\n\n    setBeginRecordTime(state)\n    {\n      state.beginRecordingTime=Date.now()\n    },\n\n    setVideoRoomId(state, videoFileId)\n    {\n      var fileid=new Number(parseInt(videoFileId,10))\n      state.currentVideoRoomId=fileid&0xffffff\n    },\n\n    addBarrage(state,barrageContent)\n    {\n      var time= Date.now()-state.beginRecordingTime\n      state.barrages[time]=barrageContent\n      console.log(state.barrages)\n    },\n\n    clearBarrage(state) {\n      state.barrages=new Map()\n    },\n\n    setPriorBarrage(state, barrageList)\n    {\n      state.priorBarrages=barrageList\n    }\n\n  },\n  modules: {\n    conversation,\n    group,\n    friend,\n    blacklist,\n    user,\n    video\n  }\n})\n"]}]}