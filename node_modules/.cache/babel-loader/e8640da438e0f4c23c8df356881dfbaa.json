{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/eslint-loader/index.js??ref--13-0!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/store/modules/video.js","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/store/modules/video.js","mtime":1588990159002},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1588990144242},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/eslint-loader/index.js","mtime":1588990146717}],"contextDependencies":[],"result":["var video = {\n  state: {\n    videoRoom: 0,\n    isBusy: false\n  },\n  mutations: {\n    GENERATE_VIDEO_ROOM: function GENERATE_VIDEO_ROOM(state, videoRoom) {\n      if (videoRoom) {\n        state.videoRoom = videoRoom;\n      } else {\n        state.videoRoom = Math.ceil(Math.random() * (Math.pow(2, 32) - 1));\n      }\n    },\n    UPDATE_ISBUSY: function UPDATE_ISBUSY(state, isBusy) {\n      state.isBusy = isBusy;\n    }\n  }\n};\nexport default video;",{"version":3,"sources":["/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/store/modules/video.js"],"names":["video","state","videoRoom","isBusy","mutations","GENERATE_VIDEO_ROOM","Math","ceil","random","UPDATE_ISBUSY"],"mappings":"AAAA,IAAMA,KAAK,GAAG;AACVC,EAAAA,KAAK,EAAE;AACHC,IAAAA,SAAS,EAAE,CADR;AAEHC,IAAAA,MAAM,EAAE;AAFL,GADG;AAKVC,EAAAA,SAAS,EAAE;AACPC,IAAAA,mBADO,+BACaJ,KADb,EACoBC,SADpB,EAC+B;AAClC,UAAIA,SAAJ,EAAe;AACXD,QAAAA,KAAK,CAACC,SAAN,GAAkBA,SAAlB;AACH,OAFD,MAEO;AACHD,QAAAA,KAAK,CAACC,SAAN,GAAkBI,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,MAAiB,YAAK,EAAL,IAAU,CAA3B,CAAV,CAAlB;AACH;AACJ,KAPM;AAQPC,IAAAA,aARO,yBAQOR,KARP,EAQcE,MARd,EAQsB;AACzBF,MAAAA,KAAK,CAACE,MAAN,GAAeA,MAAf;AACH;AAVM;AALD,CAAd;AAmBA,eAAeH,KAAf","sourcesContent":["const video = {\n    state: {\n        videoRoom: 0,\n        isBusy: false\n    },\n    mutations: {\n        GENERATE_VIDEO_ROOM(state, videoRoom) {\n            if (videoRoom) {\n                state.videoRoom = videoRoom\n            } else {\n                state.videoRoom = Math.ceil(Math.random() * (2 ** 32 - 1))\n            }\n        },\n        UPDATE_ISBUSY(state, isBusy) {\n            state.isBusy = isBusy\n        }\n    },\n}\n\nexport default video"]}]}