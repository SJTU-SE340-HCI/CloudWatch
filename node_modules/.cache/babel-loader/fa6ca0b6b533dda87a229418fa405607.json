{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/thread-loader/dist/cjs.js!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/eslint-loader/index.js??ref--13-0!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/utils/decodeText.js","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/utils/decodeText.js","mtime":1588990159003},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/thread-loader/dist/cjs.js","mtime":1588990157969},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1588990144242},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/eslint-loader/index.js","mtime":1588990146717}],"contextDependencies":[],"result":["import { emojiMap, emojiUrl } from \"./emojiMap\";\n/** 传入messageBody（群系统消息SystemMessage，群提示消息GroupTip除外）\n * payload = {\n *  msgType: 'TIMTextElem',\n *  msgContent: {\n *    text: 'AAA[龇牙]AAA[龇牙]AAA[龇牙AAA]'\n *  }\n *}\n **/\n\nexport function decodeText(payload) {\n  var renderDom = []; // 文本消息\n\n  var temp = payload.text;\n  var left = -1;\n  var right = -1;\n\n  while (temp !== '') {\n    left = temp.indexOf('[');\n    right = temp.indexOf(']');\n\n    switch (left) {\n      case 0:\n        if (right === -1) {\n          renderDom.push({\n            name: 'text',\n            text: temp\n          });\n          temp = '';\n        } else {\n          var _emoji = temp.slice(0, right + 1);\n\n          if (emojiMap[_emoji]) {\n            renderDom.push({\n              name: 'img',\n              src: emojiUrl + emojiMap[_emoji]\n            });\n            temp = temp.substring(right + 1);\n          } else {\n            renderDom.push({\n              name: 'text',\n              text: '['\n            });\n            temp = temp.slice(1);\n          }\n        }\n\n        break;\n\n      case -1:\n        renderDom.push({\n          name: 'text',\n          text: temp\n        });\n        temp = '';\n        break;\n\n      default:\n        renderDom.push({\n          name: 'text',\n          text: temp.slice(0, left)\n        });\n        temp = temp.substring(left);\n        break;\n    }\n  }\n\n  return renderDom;\n}",null]}