{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/blacklist/blacklist-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/blacklist/blacklist-item.vue","mtime":1588990158988},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1588990144242},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1588990158440}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'BlacklistItem',\n  props: {\n    profile: {\n      type: Object,\n      required: true\n    }\n  },\n  methods: {\n    removeFromBlacklist() {\n      this.tim\n        .removeFromBlacklist({ userIDList: [this.profile.userID] })\n        .then(() => {\n          this.$store.commit('removeFromBlacklist', this.profile.userID)\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    }\n  }\n}\n",null]}