{"remainingRequest":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\components\\conversation\\current-conversation.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\github\\src\\components\\conversation\\current-conversation.vue","mtime":1589208459826},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1589122702323},{"path":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js","mtime":1589122690916},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters, mapState } from 'vuex'\r\nimport MessageSendBox from '../message/message-send-box'\r\nimport MessageItem from '../message/message-item'\r\nimport ConversationProfile from './conversation-profile.vue'\r\nimport MemberProfileCard from '../group/member-profile-card'\r\n\r\nexport default {\r\n  name: 'CurrentConversation',\r\n  components: {\r\n    MessageSendBox,\r\n    MessageItem,\r\n    ConversationProfile,\r\n    MemberProfileCard,\r\n  },\r\n  data() {\r\n    return {\r\n      isShowScrollButtomTips: false,\r\n      preScrollHeight: 0,\r\n      showConversationProfile: false,\r\n      timeout: ''\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentConversation: state => state.conversation.currentConversation,\r\n      currentUnreadCount: state => state.conversation.currentConversation.unreadCount,\r\n      currentMessageList: state => state.conversation.currentMessageList,\r\n      isCompleted: state => state.conversation.isCompleted\r\n    }),\r\n    ...mapGetters(['toAccount', 'hidden']),\r\n    // 是否显示当前会话组件\r\n    showCurrentConversation() {\r\n      return !!this.currentConversation.conversationID\r\n    },\r\n    name() {\r\n      if (this.currentConversation.type === 'C2C') {\r\n        return this.currentConversation.userProfile.nick || this.toAccount\r\n      } else if (this.currentConversation.type === 'GROUP') {\r\n        return this.currentConversation.groupProfile.name || this.toAccount\r\n      } else if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\r\n        return '系统通知'\r\n      }\r\n      return this.toAccount\r\n    },\r\n    showMessageSendBox() {\r\n      return this.currentConversation.type !== this.TIM.TYPES.CONV_SYSTEM\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$bus.$on('image-loaded', this.onImageLoaded)\r\n    this.$bus.$on('scroll-bottom', this.scrollMessageListToButtom)\r\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM') {\r\n      return false\r\n    }\r\n  },\r\n  updated() {\r\n    this.keepMessageListOnButtom()\r\n    // 1. 系统会话隐藏右侧资料组件\r\n    // 2. 没有当前会话时，隐藏右侧资料组件。\r\n    //    背景：退出群组/删除会话时，会出现一处空白区域\r\n    if (this.currentConversation.conversationID === '@TIM#SYSTEM' || \r\n        typeof this.currentConversation.conversationID === 'undefined') {\r\n      this.showConversationProfile = false\r\n    }\r\n  },\r\n  watch: {\r\n    currentUnreadCount(next) {\r\n      if (!this.hidden && next > 0) {\r\n        this.tim.setMessageRead({ conversationID: this.currentConversation.conversationID })\r\n      }\r\n    },\r\n    hidden(next) {\r\n      if (!next && this.currentUnreadCount > 0) {\r\n        this.tim.setMessageRead({ conversationID: this.currentConversation.conversationID })\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    onScroll({ target: { scrollTop } }) {\r\n      let messageListNode = this.$refs['message-list']\r\n      if (!messageListNode) {\r\n        return\r\n      }\r\n      if (this.preScrollHeight - messageListNode.clientHeight - scrollTop < 20) {\r\n        this.isShowScrollButtomTips = false\r\n      }\r\n    },\r\n    // 如果滚到底部就保持在底部，否则提示是否要滚到底部\r\n    keepMessageListOnButtom() {\r\n      let messageListNode = this.$refs['message-list']\r\n      if (!messageListNode) {\r\n        return\r\n      }\r\n      // 距离底部20px内强制滚到底部,否则提示有新消息\r\n      if (this.preScrollHeight - messageListNode.clientHeight - messageListNode.scrollTop < 20) {\r\n        this.$nextTick(() => {\r\n          messageListNode.scrollTop = messageListNode.scrollHeight\r\n        })\r\n        this.isShowScrollButtomTips = false\r\n      } else {\r\n        this.isShowScrollButtomTips = true\r\n      }\r\n      this.preScrollHeight = messageListNode.scrollHeight\r\n    },\r\n    // 直接滚到底部\r\n    scrollMessageListToButtom() {\r\n      this.$nextTick(() => {\r\n        let messageListNode = this.$refs['message-list']\r\n        if (!messageListNode) {\r\n          return\r\n        }\r\n        messageListNode.scrollTop = messageListNode.scrollHeight\r\n        this.preScrollHeight = messageListNode.scrollHeight\r\n        this.isShowScrollButtomTips = false\r\n      })\r\n    },\r\n    showMore() {\r\n      this.showConversationProfile = !this.showConversationProfile\r\n    },\r\n    onImageLoaded() {\r\n      this.keepMessageListOnButtom()\r\n    }\r\n  }\r\n}\r\n",null]}