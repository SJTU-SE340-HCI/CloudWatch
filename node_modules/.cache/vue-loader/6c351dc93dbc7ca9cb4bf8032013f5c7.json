{"remainingRequest":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhengwei/SJTU/HCI/CloudWatch/src/components/user/home.vue?vue&type=template&id=8460817a&scoped=true&","dependencies":[{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/src/components/user/home.vue","mtime":1591949887602},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/cache-loader/dist/cjs.js","mtime":1589115288536},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1589115292369},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/cache-loader/dist/cjs.js","mtime":1589115288536},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/vue-loader/lib/index.js","mtime":1589115292369}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"login-wrapper\" },\n    [\n      _c(\"img\", { staticClass: \"logo\", attrs: { src: _vm.logo } }),\n      _c(\n        \"el-form\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.isLogin && !_vm.isRegister,\n              expression: \"isLogin && !isRegister\"\n            }\n          ],\n          ref: \"login\",\n          staticStyle: { width: \"100%\" },\n          attrs: { rules: _vm.rules, model: _vm.form, \"label-width\": \"0\" },\n          nativeOn: {\n            keydown: function($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n              ) {\n                return null\n              }\n              return _vm.handleEnter($event)\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"userID\" } },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  placeholder: \"请输入用户名\",\n                  type: \"text\",\n                  clearable: \"\"\n                },\n                model: {\n                  value: _vm.form.userID,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"userID\", $$v)\n                  },\n                  expression: \"form.userID\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"password\" } },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  placeholder: \"请输入密码\",\n                  type: \"password\",\n                  \"show-password\": \"\",\n                  clearable: \"\"\n                },\n                model: {\n                  value: _vm.form.password,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"password\", $$v)\n                  },\n                  expression: \"form.password\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-form\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.isLogin && _vm.isRegister,\n              expression: \"isLogin && isRegister\"\n            }\n          ],\n          ref: \"register_data\",\n          staticStyle: { width: \"100%\" },\n          attrs: {\n            rules: _vm.rules,\n            model: _vm.register_data,\n            \"label-width\": \"0\"\n          },\n          nativeOn: {\n            keydown: function($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n              ) {\n                return null\n              }\n              return _vm.handleEnter($event)\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"userID\" } },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  placeholder: \"请输入注册用户id\",\n                  type: \"text\",\n                  clearable: \"\"\n                },\n                model: {\n                  value: _vm.register_data.userID,\n                  callback: function($$v) {\n                    _vm.$set(_vm.register_data, \"userID\", $$v)\n                  },\n                  expression: \"register_data.userID\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"password\" } },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  placeholder: \"请输入注册密码\",\n                  type: \"password\",\n                  \"show-password\": \"\",\n                  clearable: \"\"\n                },\n                model: {\n                  value: _vm.register_data.password,\n                  callback: function($$v) {\n                    _vm.$set(_vm.register_data, \"password\", $$v)\n                  },\n                  expression: \"register_data.password\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"password_check\" } },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  placeholder: \"请再次输入注册密码\",\n                  type: \"password\",\n                  \"show-password\": \"\",\n                  clearable: \"\"\n                },\n                model: {\n                  value: _vm.register_data.password_check,\n                  callback: function($$v) {\n                    _vm.$set(_vm.register_data, \"password_check\", $$v)\n                  },\n                  expression: \"register_data.password_check\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-form\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: !_vm.isLogin,\n              expression: \"!isLogin\"\n            }\n          ],\n          ref: \"room\",\n          staticStyle: { width: \"100%\" },\n          attrs: { rules: _vm.rules, model: _vm.form, \"label-width\": \"0\" },\n          nativeOn: {\n            keydown: function($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n              ) {\n                return null\n              }\n              return _vm.handleEnter($event)\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"room\" } },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  placeholder: \"请输入房间号\",\n                  type: \"text\",\n                  clearable: \"\"\n                },\n                model: {\n                  value: _vm.form.room,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"room\", $$v)\n                  },\n                  expression: \"form.room\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\n            \"el-form-item\",\n            { attrs: { prop: \"password\" } },\n            [\n              _c(\"el-input\", {\n                attrs: {\n                  placeholder: \"请输入密码\",\n                  type: \"password\",\n                  \"show-password\": \"\",\n                  clearable: \"\"\n                },\n                model: {\n                  value: _vm.form.password,\n                  callback: function($$v) {\n                    _vm.$set(_vm.form, \"password\", $$v)\n                  },\n                  expression: \"form.password\"\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.isLogin && !_vm.isRegister,\n              expression: \"isLogin && !isRegister\"\n            }\n          ],\n          staticStyle: { width: \"100%\", margin: \"3px\" },\n          attrs: { type: \"primary\", loading: _vm.loading },\n          on: { click: _vm.submit }\n        },\n        [_vm._v(\"登录\")]\n      ),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.isLogin && !_vm.isRegister,\n              expression: \"isLogin && !isRegister\"\n            }\n          ],\n          staticStyle: { width: \"100%\", margin: \"3px\" },\n          attrs: { loading: _vm.loading },\n          on: {\n            click: function($event) {\n              _vm.isRegister = true\n            }\n          }\n        },\n        [_vm._v(\"去注册\")]\n      ),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.isLogin && _vm.isRegister,\n              expression: \"isLogin && isRegister\"\n            }\n          ],\n          staticStyle: { width: \"100%\", margin: \"3px\" },\n          attrs: { loading: _vm.loading },\n          on: {\n            click: function($event) {\n              _vm.isRegister = false\n            }\n          }\n        },\n        [_vm._v(\"去登录\")]\n      ),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.isLogin && _vm.isRegister,\n              expression: \"isLogin && isRegister\"\n            }\n          ],\n          staticStyle: { width: \"100%\", margin: \"3px\" },\n          attrs: { type: \"primary\", loading: _vm.loading },\n          on: { click: _vm.register }\n        },\n        [_vm._v(\"注册\")]\n      ),\n      _c(\n        \"el-button\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: !_vm.isLogin,\n              expression: \"!isLogin\"\n            }\n          ],\n          staticStyle: { width: \"100%\", \"margin-top\": \"6px\" },\n          attrs: { type: \"primary\", loading: _vm.loading },\n          on: { click: _vm.enterRoom }\n        },\n        [_vm._v(\"进入房间\")]\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}