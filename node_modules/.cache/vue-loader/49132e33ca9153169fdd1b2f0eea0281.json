{"remainingRequest":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\components\\user\\login.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\github\\src\\components\\user\\login.vue","mtime":1590893764960},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js","mtime":1589122690916},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { Form, FormItem, Select, Option } from 'element-ui'\r\nimport logo from '../../assets/image/logo.png'\r\nimport axios from 'axios'\r\n import {mapState} from 'vuex'\r\nexport default {\r\n  name: 'Login',\r\n  components: {\r\n    ElForm: Form,\r\n    ElFormItem: FormItem,\r\n    ElSelect: Select,\r\n    ElOption: Option,\r\n  },\r\n  data() {\r\n    const checkUserID = (rule, value, callback) => {\r\n      if (!/^[a-zA-Z][a-zA-Z0-9_]{3,23}$/.test(value)) {\r\n        callback(new Error('不合法（字母开头+字母/数字，长度4-24)'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const checkRoomNumber = (rule, value, callback) => {\r\n      if (!/^[1-9][0-9]{0,9}$/.test(value)) {\r\n        callback(new Error('不合法自然数，长度1-10'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      form: {\r\n        userID: '',\r\n        password: '',\r\n        room: '',\r\n      },\r\n      rules: {\r\n        userID: [\r\n          { required: true, message: '请输入 userID', trigger: 'blur' },\r\n          { validator: checkUserID, trigger: 'blur' }\r\n        ],\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\r\n        room: [\r\n          { required: true,  message: '请输入房间号', trigger: 'blur' },\r\n          { validator: checkRoomNumber, trigger: 'blur' }\r\n        ]\r\n      },\r\n      logo: logo,\r\n      registerVisible: false,\r\n      loading: false,\r\n      isLogin: true\r\n    }\r\n  },\r\n  methods: {\r\n    handleEnter() {\r\n      if (this.isLogin) {\r\n        this.submit()\r\n      } else {\r\n        this.enterRoom()\r\n      }\r\n    },\r\n    submit() {\r\n      this.$refs['login'].validate(valid => {\r\n        if (valid) {\r\n          this.login()\r\n        }\r\n      })\r\n    },\r\n    enterRoomSuccess(groupID) {\r\n      this.$store.dispatch(\r\n              'checkoutConversation',\r\n              'GROUP' + groupID\r\n      )\r\n      this.$store.commit('toggleIsLogin', true)\r\n      this.$store.commit('showMessage', {\r\n        type: 'success',\r\n        message: '进入房间成功'\r\n      })\r\n    },\r\n    enterRoom() {\r\n      this.$refs['login'].validate(valid => {\r\n        if (valid) {\r\n           axios.get('http://localhost:8020/Room/SignIn',{\r\n            params:{\r\n              room_id: this.form.room,\r\n              password: this.form.password\r\n            }\r\n          }).then(res=>{\r\n            var signInRes=res.data\r\n            if(signInRes==='invalid room')\r\n            {\r\n              this.$store.commit('showMessage', {\r\n                type: 'error',\r\n                message: '房间不存在'\r\n              })\r\n              this.loading = false\r\n              return\r\n            }else{\r\n              if(signInRes==='invalid password')\r\n              {\r\n                this.$store.commit('showMessage', {\r\n                  type: 'error',\r\n                  message: '密码不正确'\r\n                })\r\n                this.loading = false\r\n                return\r\n              }\r\n              else{\r\n                // get sdk room id from server\r\n                axios.get('http://localhost:8020/Room/findById',{\r\n                  params:{\r\n                    room_id: this.form.room\r\n                  }}).then(res=>{\r\n                    this.$store.commit('changeRoom',res.data)\r\n                  })\r\n\r\n                this.tim.getGroupList().then((response) => {\r\n                  for (var group of response.data.groupList) {\r\n                    if (group.groupID == this.form.room) {\r\n                      this.enterRoomSuccess(group.groupID)\r\n                      return\r\n                    }\r\n                  }\r\n\r\n                  this.tim.joinGroup({\r\n                    groupID: this.form.room\r\n                  }).then((response) => {\r\n                    this.enterRoomSuccess(response.data.group.groupID)\r\n                  }).catch(() => {\r\n                    this.tim.createGroup({\r\n                      groupID: this.form.room,\r\n                      name: this.form.room,\r\n                      type: this.TIM.TYPES.GRP_PUBLIC,\r\n                      joinOption: this.TIM.TYPES.JOIN_OPTIONS_FREE_ACCESS\r\n                    }).then((response) => {\r\n                      this.enterRoomSuccess(response.data.group.groupID)\r\n                    }).catch((error) => {\r\n                      this.$store.commit('showMessage', {\r\n                        type: 'error',\r\n                        message: error\r\n                      })\r\n                    })\r\n                  })\r\n                })\r\n              }\r\n        }\r\n      })\r\n        }\r\n      })\r\n    },\r\n    login() {\r\n      this.loading = true\r\n      axios.get('http://localhost:8020/User/SignIn',{\r\n            params:{\r\n              account: this.form.userID,\r\n              password: this.form.password\r\n            }\r\n          }).then(res=>{\r\n            var signInRes=res.data\r\n            if(signInRes==='invalid account')\r\n            {\r\n              this.$store.commit('showMessage', {\r\n                type: 'error',\r\n                message: '帐号不存在'\r\n              })\r\n              this.loading = false\r\n              return\r\n            }else{\r\n              if(signInRes==='invalid password')\r\n              {\r\n                this.$store.commit('showMessage', {\r\n                  type: 'error',\r\n                  message: '密码不正确'\r\n                })\r\n                this.loading = false\r\n                return\r\n              }\r\n              else{\r\n                this.tim\r\n              .login({\r\n                userID: this.form.userID,\r\n                userSig: window.genTestUserSig(this.form.userID).userSig\r\n              })\r\n              .then(() => {\r\n                this.loading = false\r\n                this.isLogin = false\r\n                this.$store.commit('startComputeCurrent')\r\n                this.$store.commit({\r\n                  type: 'GET_USER_INFO',\r\n                  userID: this.form.userID,\r\n                  userSig: window.genTestUserSig(this.form.userID).userSig,\r\n                  sdkAppID: window.genTestUserSig('').SDKAppID\r\n                })\r\n                this.$store.commit('showMessage', {\r\n                  type: 'success',\r\n                  message: '登录成功'\r\n                })\r\n              })\r\n              .catch(error => {\r\n                this.loading = false\r\n                this.$store.commit('showMessage', {\r\n                  message: '登录失败：' + error.message,\r\n                  type: 'error'\r\n                })\r\n              })\r\n              }\r\n            }\r\n          })\r\n    },\r\n  },\r\n}\r\n",{"version":3,"sources":["login.vue"],"names":[],"mappingsfile":"login.vue","sourceRoot":"src/components/user","sourcesContent":["<template>\r\n  <div class=\"login-wrapper\">\r\n    <img class=\"logo\" :src=\"logo\" />\r\n    <el-form\r\n      v-if=\"isLogin\"\r\n      ref=\"login\"\r\n      :rules=\"rules\"\r\n      :model=\"form\"\r\n      label-width=\"0\"\r\n      style=\"width:100%;\"\r\n      @keydown.enter.native=\"handleEnter\">\r\n      <!-- Github登录方式 -->\r\n      <!--el-form-item prop=\"userID\" v-if=\"isLogin\">\r\n        <el-select v-model=\"form.userID\" class=\"user-selector\">\r\n          <el-option\r\n            v-for=\"index in 30\"\r\n            :key=\"index\"\r\n            :label=\"`user${index-1}`\"\r\n            :value=\"`user${index-1}`\"\r\n          ></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n      <el-form-item prop=\"room\" v-else>\r\n        <el-input v-model=\"form.room\" placeholder=\"请输入房间号\" type=\"text\" clearable></el-input>\r\n      </el-form-item-->\r\n      <!-- 线上版本登录方式 -->\r\n      <el-form-item prop=\"userID\">\r\n        <el-input v-model=\"form.userID\" placeholder=\"请输入用户名\" type=\"text\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          v-model=\"form.password\"\r\n          placeholder=\"请输入密码\"\r\n          type=\"password\"\r\n          show-password\r\n          clearable\r\n        ></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    \r\n    <el-form\r\n      v-else\r\n      ref=\"login\"\r\n      :rules=\"rules\"\r\n      :model=\"form\"\r\n      label-width=\"0\"\r\n      style=\"width:100%;\"\r\n      @keydown.enter.native=\"handleEnter\">\r\n      <el-form-item prop=\"room\">\r\n        <el-input v-model=\"form.room\" placeholder=\"请输入房间号\" type=\"text\" clearable></el-input>\r\n      </el-form-item>\r\n      <el-form-item prop=\"password\">\r\n        <el-input\r\n          v-model=\"form.password\"\r\n          placeholder=\"请输入密码\"\r\n          type=\"password\"\r\n          show-password\r\n          clearable\r\n        ></el-input>\r\n      </el-form-item>\r\n    </el-form>\r\n    <el-button\r\n      type=\"primary\"\r\n      @click=\"submit\"\r\n      style=\"width:100%; margin-top: 6px;\"\r\n      :loading=\"loading\"\r\n      v-if=\"isLogin\"\r\n    >登录</el-button>\r\n    <el-button\r\n            type=\"primary\"\r\n            @click=\"enterRoom\"\r\n            style=\"width:100%; margin-top: 6px;\"\r\n            :loading=\"loading\"\r\n            v-else\r\n    >进入房间</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Form, FormItem, Select, Option } from 'element-ui'\r\nimport logo from '../../assets/image/logo.png'\r\nimport axios from 'axios'\r\n import {mapState} from 'vuex'\r\nexport default {\r\n  name: 'Login',\r\n  components: {\r\n    ElForm: Form,\r\n    ElFormItem: FormItem,\r\n    ElSelect: Select,\r\n    ElOption: Option,\r\n  },\r\n  data() {\r\n    const checkUserID = (rule, value, callback) => {\r\n      if (!/^[a-zA-Z][a-zA-Z0-9_]{3,23}$/.test(value)) {\r\n        callback(new Error('不合法（字母开头+字母/数字，长度4-24)'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    const checkRoomNumber = (rule, value, callback) => {\r\n      if (!/^[1-9][0-9]{0,9}$/.test(value)) {\r\n        callback(new Error('不合法自然数，长度1-10'))\r\n      } else {\r\n        callback()\r\n      }\r\n    }\r\n    return {\r\n      form: {\r\n        userID: '',\r\n        password: '',\r\n        room: '',\r\n      },\r\n      rules: {\r\n        userID: [\r\n          { required: true, message: '请输入 userID', trigger: 'blur' },\r\n          { validator: checkUserID, trigger: 'blur' }\r\n        ],\r\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\r\n        room: [\r\n          { required: true,  message: '请输入房间号', trigger: 'blur' },\r\n          { validator: checkRoomNumber, trigger: 'blur' }\r\n        ]\r\n      },\r\n      logo: logo,\r\n      registerVisible: false,\r\n      loading: false,\r\n      isLogin: true\r\n    }\r\n  },\r\n  methods: {\r\n    handleEnter() {\r\n      if (this.isLogin) {\r\n        this.submit()\r\n      } else {\r\n        this.enterRoom()\r\n      }\r\n    },\r\n    submit() {\r\n      this.$refs['login'].validate(valid => {\r\n        if (valid) {\r\n          this.login()\r\n        }\r\n      })\r\n    },\r\n    enterRoomSuccess(groupID) {\r\n      this.$store.dispatch(\r\n              'checkoutConversation',\r\n              'GROUP' + groupID\r\n      )\r\n      this.$store.commit('toggleIsLogin', true)\r\n      this.$store.commit('showMessage', {\r\n        type: 'success',\r\n        message: '进入房间成功'\r\n      })\r\n    },\r\n    enterRoom() {\r\n      this.$refs['login'].validate(valid => {\r\n        if (valid) {\r\n           axios.get('http://localhost:8020/Room/SignIn',{\r\n            params:{\r\n              room_id: this.form.room,\r\n              password: this.form.password\r\n            }\r\n          }).then(res=>{\r\n            var signInRes=res.data\r\n            if(signInRes==='invalid room')\r\n            {\r\n              this.$store.commit('showMessage', {\r\n                type: 'error',\r\n                message: '房间不存在'\r\n              })\r\n              this.loading = false\r\n              return\r\n            }else{\r\n              if(signInRes==='invalid password')\r\n              {\r\n                this.$store.commit('showMessage', {\r\n                  type: 'error',\r\n                  message: '密码不正确'\r\n                })\r\n                this.loading = false\r\n                return\r\n              }\r\n              else{\r\n                // get sdk room id from server\r\n                axios.get('http://localhost:8020/Room/findById',{\r\n                  params:{\r\n                    room_id: this.form.room\r\n                  }}).then(res=>{\r\n                    this.$store.commit('changeRoom',res.data)\r\n                  })\r\n\r\n                this.tim.getGroupList().then((response) => {\r\n                  for (var group of response.data.groupList) {\r\n                    if (group.groupID == this.form.room) {\r\n                      this.enterRoomSuccess(group.groupID)\r\n                      return\r\n                    }\r\n                  }\r\n\r\n                  this.tim.joinGroup({\r\n                    groupID: this.form.room\r\n                  }).then((response) => {\r\n                    this.enterRoomSuccess(response.data.group.groupID)\r\n                  }).catch(() => {\r\n                    this.tim.createGroup({\r\n                      groupID: this.form.room,\r\n                      name: this.form.room,\r\n                      type: this.TIM.TYPES.GRP_PUBLIC,\r\n                      joinOption: this.TIM.TYPES.JOIN_OPTIONS_FREE_ACCESS\r\n                    }).then((response) => {\r\n                      this.enterRoomSuccess(response.data.group.groupID)\r\n                    }).catch((error) => {\r\n                      this.$store.commit('showMessage', {\r\n                        type: 'error',\r\n                        message: error\r\n                      })\r\n                    })\r\n                  })\r\n                })\r\n              }\r\n        }\r\n      })\r\n        }\r\n      })\r\n    },\r\n    login() {\r\n      this.loading = true\r\n      axios.get('http://localhost:8020/User/SignIn',{\r\n            params:{\r\n              account: this.form.userID,\r\n              password: this.form.password\r\n            }\r\n          }).then(res=>{\r\n            var signInRes=res.data\r\n            if(signInRes==='invalid account')\r\n            {\r\n              this.$store.commit('showMessage', {\r\n                type: 'error',\r\n                message: '帐号不存在'\r\n              })\r\n              this.loading = false\r\n              return\r\n            }else{\r\n              if(signInRes==='invalid password')\r\n              {\r\n                this.$store.commit('showMessage', {\r\n                  type: 'error',\r\n                  message: '密码不正确'\r\n                })\r\n                this.loading = false\r\n                return\r\n              }\r\n              else{\r\n                this.tim\r\n              .login({\r\n                userID: this.form.userID,\r\n                userSig: window.genTestUserSig(this.form.userID).userSig\r\n              })\r\n              .then(() => {\r\n                this.loading = false\r\n                this.isLogin = false\r\n                this.$store.commit('startComputeCurrent')\r\n                this.$store.commit({\r\n                  type: 'GET_USER_INFO',\r\n                  userID: this.form.userID,\r\n                  userSig: window.genTestUserSig(this.form.userID).userSig,\r\n                  sdkAppID: window.genTestUserSig('').SDKAppID\r\n                })\r\n                this.$store.commit('showMessage', {\r\n                  type: 'success',\r\n                  message: '登录成功'\r\n                })\r\n              })\r\n              .catch(error => {\r\n                this.loading = false\r\n                this.$store.commit('showMessage', {\r\n                  message: '登录失败：' + error.message,\r\n                  type: 'error'\r\n                })\r\n              })\r\n              }\r\n            }\r\n          })\r\n    },\r\n  },\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.login-wrapper {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  width: 400px;\r\n  padding: 20px 80px 50px;\r\n  background: $white;\r\n  color: $black;\r\n  border-radius: 5px;\r\n  box-shadow: 0 11px 20px 0 rgba(0, 0, 0, 0.3);\r\n\r\n  .logo {\r\n    width: 130px;\r\n    height: 130px;\r\n  }\r\n\r\n  .register-button {\r\n    width: 100%;\r\n    margin: 6px 0 0 0;\r\n  }\r\n\r\n  .user-selector {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n"]}]}