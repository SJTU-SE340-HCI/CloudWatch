{"remainingRequest":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\components\\room.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\github\\src\\components\\room.vue","mtime":1593418846939},{"path":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js","mtime":1589122690916},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MessageSendBox from './message/message-bottom-send-box'\nimport CurrentConversation from './conversation/current-conversation'\nimport ImagePreviewer from './message/image-previewer'\nimport CallLayer from './message/call-layer'\nimport Player from './video/video'\nimport Record from './record'\nimport screenfull from 'screenfull'\nimport { MESSAGE_TYPE } from 'vue-baberrage'\n\nexport default {\n  name: 'Room',\n  components: {\n    MessageSendBox,\n    //SideBar,\n    CurrentConversation,\n    ImagePreviewer,\n    CallLayer,\n    Player,\n    Record\n  },\n\n  data () {\n    return {\n      showChatRoom: false,\n      isFullscreen: false,\n      showFullButton: true,\n      showChatRoomButton: true,\n      showBottom: false,\n      showRecordButton: false,\n      msg: 'Hello vue-baberrage',\n      barrageIsShow: true,\n      currentId : 0,\n      barrageLoop: false,\n      barrageList: [],\n      showVideo: false,\n    }\n  },\n\n  mounted() {\n    this.$nextTick(()=>{\n      document.addEventListener('fullscreenchange',(e)=>{\n        this.toggleFullScreen()\n      })\n    })\n  },\n\n  methods: {\n    addToList(messageList) {\n      const groupMessageList = messageList.filter(\n        message => message.type === this.TIM.TYPES.MSG_TEXT\n      )\n      let avatar = groupMessageList[0].avatar == '' ? 'https://imgcache.qq.com/open/qcloud/video/act/webim-avatar/avatar-2.png' : groupMessageList[0].avatar\n      let nick = groupMessageList[0].nick == '' ? groupMessageList[0].from : groupMessageList[0].nick\n      window.console.log(groupMessageList)\n      this.barrageList.push({\n        id: ++this.currentId,\n        avatar: avatar,\n        msg: nick + ':' + groupMessageList[0].payload.text,\n        time: 10,\n        type: MESSAGE_TYPE.NORMAL,\n        extraWidth: 2,\n      })\n      if (this.$store.getters.getRecordingState == true) {\n        var barrageMsg= nick + ':' + groupMessageList[0].payload.text\n        this.$store.commit('addBarrage',barrageMsg)\n      }\n    },\n\n    sendBarrage(message) {\n      console.log('parent receive')\n      this.barrageList.push({\n        id: ++this.currentId,\n        msg: message,\n        time: 10,\n        type: MESSAGE_TYPE.NORMAL,\n        extraWidth: 2,\n      })\n    },\n\n    beginRecord() {\n      this.$refs.Record.beginRecord()\n      this.$refs.Record.presentRecord()\n    },\n\n    finishRecord() {\n      this.$refs.Record.finishRecord()\n      this.$refs.Record.finishPresent()\n    },\n\n    recordVoice(linkOrder) {\n       console.log('parent receive')\n       console.log(this.$refs.MessageSendBox)\n       this.$refs.MessageSendBox.recordvoice(linkOrder)\n    },\n\n    screenfull() {\n      if (!screenfull.isEnabled) {\n        this.$message({\n          message: 'Your browser does not work',\n          type: 'warning'\n        })\n        return false\n      }\n      screenfull.toggle()\n    },\n    exitRoom() {\n      this.$parent.isRoom = false\n    },\n    toggleFullScreen() {\n      this.isFullscreen = !this.isFullscreen\n      this.showFullButton = this.isFullscreen? false : true\n      this.showChatRoomButton = this.isFullscreen? false : true\n    },\n    checkmouse(event) {\n      if (event.clientX < 10) {\n        this.showFullButton = true\n      }\n\n      if (event.clientX > 80 && this.isFullscreen) {\n        this.showFullButton = false\n      }\n\n      if (event.clientX > document.body.clientWidth - 10) {\n        this.showChatRoomButton = true\n      }\n\n      if (event.clientX < document.body.clientWidth - 100 && this.isFullscreen) {\n        this.showChatRoomButton = false\n      }\n\n      if (event.clientY > document.body.clientHeight - 70) {\n        this.showBottom = true\n      }\n\n      if (event.clientY < document.body.clientHeight - 100) {\n        this.showBottom = false\n      }\n    }\n  }\n}\n",null]}