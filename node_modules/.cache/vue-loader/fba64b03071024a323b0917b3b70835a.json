{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js??ref--0-0!/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/message/message-bottom-send-box.vue?vue&type=template&id=67ab368c&scoped=true&","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/message/message-bottom-send-box.vue","mtime":1592044083331},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1588990158440},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1588990158440}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      style: _vm.focus ? { backgroundColor: \"white\" } : {},\n      attrs: { id: \"message-send-box-wrapper\" },\n      on: { drop: _vm.dropHandler }\n    },\n    [\n      _c(\n        \"el-popover\",\n        {\n          staticStyle: { \"max-height\": \"500px\", \"overflow-y\": \"scroll\" },\n          attrs: { trigger: \"manual\", placement: \"top\" },\n          model: {\n            value: _vm.showAtGroupMember,\n            callback: function($$v) {\n              _vm.showAtGroupMember = $$v\n            },\n            expression: \"showAtGroupMember\"\n          }\n        },\n        _vm._l(_vm.memberList, function(member) {\n          return _c(\n            \"el-radio-group\",\n            {\n              key: member.userID,\n              staticStyle: { display: \"flex\", \"flex-decoration\": \"column\" },\n              on: { change: _vm.handleSelectAtUser },\n              model: {\n                value: _vm.atUserID,\n                callback: function($$v) {\n                  _vm.atUserID = $$v\n                },\n                expression: \"atUserID\"\n              }\n            },\n            [\n              _c(\"el-radio\", { attrs: { label: member.userID } }, [\n                _vm._v(_vm._s(member.nameCard || member.nick || member.userID))\n              ])\n            ],\n            1\n          )\n        }),\n        1\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"bottom\" },\n        [\n          _c(\"div\", { staticClass: \"voice\" }, [_c(\"VoiceCommunicate\")], 1),\n          _c(\n            \"el-popover\",\n            { attrs: { placement: \"top\", width: \"600\", trigger: \"click\" } },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"emojis\" },\n                _vm._l(_vm.emojiName, function(item) {\n                  return _c(\n                    \"div\",\n                    {\n                      key: item,\n                      staticClass: \"emoji\",\n                      on: {\n                        click: function($event) {\n                          return _vm.chooseEmoji(item)\n                        }\n                      }\n                    },\n                    [\n                      _c(\"img\", {\n                        staticStyle: { width: \"30px\", height: \"30px\" },\n                        attrs: { src: _vm.emojiUrl + _vm.emojiMap[item] }\n                      })\n                    ]\n                  )\n                }),\n                0\n              ),\n              _c(\"i\", {\n                staticClass: \"iconfont icon-smile emoji\",\n                attrs: { slot: \"reference\", title: \"发表情\" },\n                slot: \"reference\"\n              })\n            ]\n          ),\n          _c(\"textarea\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.messageContent,\n                expression: \"messageContent\"\n              }\n            ],\n            ref: \"text-input\",\n            staticClass: \"text-input\",\n            attrs: { rows: \"1\", resize: \"false\" },\n            domProps: { value: _vm.messageContent },\n            on: {\n              focus: function($event) {\n                _vm.focus = true\n              },\n              blur: function($event) {\n                _vm.focus = false\n              },\n              keydown: [\n                function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                  ) {\n                    return null\n                  }\n                  if (\n                    $event.ctrlKey ||\n                    $event.shiftKey ||\n                    $event.altKey ||\n                    $event.metaKey\n                  ) {\n                    return null\n                  }\n                  $event.preventDefault()\n                  return _vm.handleEnter($event)\n                },\n                function($event) {\n                  if (!$event.type.indexOf(\"key\") && $event.keyCode !== 50) {\n                    return null\n                  }\n                  if (!$event.shiftKey) {\n                    return null\n                  }\n                  $event.preventDefault()\n                  if ($event.ctrlKey || $event.altKey || $event.metaKey) {\n                    return null\n                  }\n                  return _vm.handleAt($event)\n                },\n                function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"up\", 38, $event.key, [\n                      \"Up\",\n                      \"ArrowUp\"\n                    ])\n                  ) {\n                    return null\n                  }\n                  $event.stopPropagation()\n                  return _vm.handleUp($event)\n                },\n                function($event) {\n                  if (\n                    !$event.type.indexOf(\"key\") &&\n                    _vm._k($event.keyCode, \"down\", 40, $event.key, [\n                      \"Down\",\n                      \"ArrowDown\"\n                    ])\n                  ) {\n                    return null\n                  }\n                  $event.stopPropagation()\n                  return _vm.handleDown($event)\n                }\n              ],\n              keyup: function($event) {\n                if (\n                  !$event.type.indexOf(\"key\") &&\n                  _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n                ) {\n                  return null\n                }\n                if (!$event.ctrlKey) {\n                  return null\n                }\n                $event.preventDefault()\n                if ($event.shiftKey || $event.altKey || $event.metaKey) {\n                  return null\n                }\n                return _vm.handleLine($event)\n              },\n              input: function($event) {\n                if ($event.target.composing) {\n                  return\n                }\n                _vm.messageContent = $event.target.value\n              }\n            }\n          }),\n          _c(\n            \"el-tooltip\",\n            {\n              staticClass: \"item\",\n              attrs: {\n                effect: \"dark\",\n                content: \"按Enter发送消息，Ctrl+Enter换行\",\n                placement: \"left-start\"\n              }\n            },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"btn-send\", on: { click: _vm.sendTextMessage } },\n                [_c(\"div\", { staticClass: \"tim-icon-send\" })]\n              )\n            ]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}