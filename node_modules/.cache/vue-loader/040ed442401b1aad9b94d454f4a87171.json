{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/group/group-item.vue?vue&type=script&lang=js&","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/group/group-item.vue","mtime":1588990158994},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1588990144242},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1588990158440}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  props: ['group'],\n  data() {\n    return {\n      visible: false,\n      options: [\n        {\n          text: '退出群组',\n          handler: this.quitGroup\n        }\n      ]\n    }\n  },\n  methods: {\n    handleGroupClick() {\n      const conversationID = `GROUP${this.group.groupID}`\n      this.$store.dispatch('checkoutConversation', conversationID)\n    },\n    quitGroup() {\n      this.tim.quitGroup(this.group.groupID)\n      .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    }\n  }\n}\n",null]}