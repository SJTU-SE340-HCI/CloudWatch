{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/user/login.vue?vue&type=script&lang=js&","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/user/login.vue","mtime":1589027619159},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1588990144242},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1588990158440}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { Form, FormItem, Select, Option } from 'element-ui'\nimport logo from '../../assets/image/logo.png'\nexport default {\n  name: 'Login',\n  components: {\n    ElForm: Form,\n    ElFormItem: FormItem,\n    ElSelect: Select,\n    ElOption: Option,\n  },\n  data() {\n    const checkUserID = (rule, value, callback) => {\n      if (!/^[a-zA-Z][a-zA-Z0-9_]{3,23}$/.test(value)) {\n        callback(new Error('不合法（字母开头+字母/数字，长度4-24)'))\n      } else {\n        callback()\n      }\n    }\n    const checkRoomNumber = (rule, value, callback) => {\n      if (!/^[0-9]{4,10}$/.test(value)) {\n        callback(new Error('不合法数字，长度4-10'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      form: {\n        userID: '',\n        password: '',\n        room: '',\n      },\n      rules: {\n        userID: [\n          { required: true, message: '请输入 userID', trigger: 'blur' },\n          { validator: checkUserID, trigger: 'blur' }\n        ],\n        password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\n        room: [\n          { required: true,  message: '请输入房间号', trigger: 'blur' },\n          { validator: checkRoomNumber, trigger: 'blur' }\n        ]\n      },\n      logo: logo,\n      registerVisible: false,\n      loading: false,\n      isLogin: true\n    }\n  },\n  methods: {\n    handleEnter() {\n      if (this.isLogin) {\n        this.submit()\n      } else {\n        this.enterRoom()\n      }\n    },\n    submit() {\n      this.$refs['login'].validate(valid => {\n        if (valid) {\n          this.login()\n        }\n      })\n    },\n    enterRoomSuccess(groupID) {\n      this.$store.dispatch(\n              'checkoutConversation',\n              'GROUP' + groupID\n      )\n      this.$store.commit('toggleIsLogin', true)\n      this.$store.commit('showMessage', {\n        type: 'success',\n        message: '进入房间成功'\n      })\n    },\n    enterRoom() {\n      this.$refs['login'].validate(valid => {\n        if (valid) {\n          this.tim.getGroupList().then((response) => {\n            console.log(response)\n            for (var group of response.data.groupList) {\n              if (group.groupID == this.form.room) {\n                this.enterRoomSuccess(group.groupID)\n                return\n              }\n            }\n\n            this.tim.joinGroup({\n              groupID: this.form.room\n            }).then((response) => {\n              console.log(response)\n              this.enterRoomSuccess(response.data.group.groupID)\n            }).catch((error) => {\n              console.log(error)\n              this.tim.createGroup({\n                groupID: this.form.room,\n                name: this.form.room,\n                type: this.TIM.TYPES.GRP_PUBLIC,\n                joinOption: this.TIM.TYPES.JOIN_OPTIONS_FREE_ACCESS\n              }).then((response) => {\n                this.enterRoomSuccess(response.data.group.groupID)\n              }).catch((error) => {\n                console.log(error)\n              })\n            })\n          })\n        }\n      })\n\n    },\n    login() {\n      this.loading = true\n      this.tim\n        .login({\n          userID: this.form.userID,\n          userSig: window.genTestUserSig(this.form.userID).userSig\n        })\n        .then(() => {\n          this.loading = false\n          this.isLogin = false\n          this.$store.commit('startComputeCurrent')\n          this.$store.commit({\n            type: 'GET_USER_INFO',\n            userID: this.form.userID,\n            userSig: window.genTestUserSig(this.form.userID).userSig,\n            sdkAppID: window.genTestUserSig('').SDKAppID\n          })\n          this.$store.commit('showMessage', {\n            type: 'success',\n            message: '登录成功'\n          })\n        })\n        .catch(error => {\n          this.loading = false\n          this.$store.commit('showMessage', {\n            message: '登录失败：' + error.message,\n            type: 'error'\n          })\n        })\n    },\n  }\n}\n",null]}