{"remainingRequest":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js??vue-loader-options!/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/message/message-elements/image-element.vue?vue&type=script&lang=js&","dependencies":[{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/src/components/message/message-elements/image-element.vue","mtime":1588990158997},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/babel-loader/lib/index.js","mtime":1588990144242},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/cache-loader/dist/cjs.js","mtime":1588990144497},{"path":"/run/media/gz/G/c2020spring/hci/project/FrontEnd/node_modules/vue-loader/lib/index.js","mtime":1588990158440}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport MessageBubble from '../message-bubble'\nimport { Progress } from 'element-ui'\nimport { mapGetters } from 'vuex'\nexport default {\n  name: 'ImageElemnt',\n  props: {\n    payload: {\n      type: Object,\n      required: true\n    },\n    message: {\n      type: Object,\n      required: true\n    },\n    isMine: {\n      type: Boolean\n    }\n  },\n  components: {\n    MessageBubble,\n    ElProgress: Progress\n  },\n  computed: {\n    ...mapGetters(['imgUrlList']),\n    imageUrl() {\n      const url = this.payload.imageInfoArray[0].url\n      if (typeof url !== 'string') {\n        return ''\n      }\n      return url.slice(0, 2) === '//' ? `https:${url}` : url\n    },\n    showProgressBar() {\n      return this.$parent.message.status === 'unSend'\n    },\n    percentage() {\n      return Math.floor((this.$parent.message.progress || 0) * 100)\n    }\n  },\n  methods: {\n    onImageLoaded(event) {\n      this.$bus.$emit('image-loaded', event)\n    },\n    handlePreview() {\n      this.$bus.$emit('image-preview', {\n        url: this.payload.imageInfoArray[0].url\n      })\n    }\n  }\n}\n",null]}