{"remainingRequest":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\components\\homepage.vue?vue&type=style&index=0&id=fa4e1604&lang=stylus&scoped=true&","dependencies":[{"path":"D:\\HCI\\github\\src\\components\\homepage.vue","mtime":1592449068326},{"path":"D:\\HCI\\github\\node_modules\\css-loader\\index.js","mtime":1589122692960},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1589122702781},{"path":"D:\\HCI\\github\\node_modules\\postcss-loader\\src\\index.js","mtime":1589122698492},{"path":"D:\\HCI\\github\\node_modules\\stylus-loader\\index.js","mtime":1589122702034},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.login-wrapper {\n  display: flex\n  align-items: center\n  flex-direction: column\n  width: 400px\n  padding: 50px 50px 50px\n  background: $white\n  color: $black\n  border-radius: 5px\n  box-shadow: 0 11px 20px 0 rgba(0, 0, 0, 0.3)\n  margin-top: 10%\n\n  .logo {\n    width: 130px\n    height: 130px\n  }\n\n  .user-selector {\n    width: 100%\n  }\n}\n\n.title {\n  padding-bottom: 30px;\n}\n\n.profile {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n",{"version":3,"sources":["homepage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"homepage.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <div class='login-wrapper'>\r\n      <div class=\"title\">\r\n        进入/创建房间\r\n      </div>\r\n      <el-form\r\n              ref=\"room\"\r\n              :rules='rules'\r\n              :model='form'\r\n              label-width='0'\r\n              style='width:100%'\r\n      >\r\n        <el-form-item prop='room'>\r\n          <el-input v-model='form.room' placeholder='请输入房间号' type='text' clearable></el-input>\r\n        </el-form-item>\r\n        <el-form-item prop='password'>\r\n          <el-input\r\n                  v-model='form.password'\r\n                  placeholder='请输入密码'\r\n                  type='password'\r\n                  show-password\r\n                  clearable\r\n          ></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <el-button\r\n              type='primary'\r\n              @click='enterRoom'\r\n              style='width:100%; margin-top: 6px'\r\n              :loading='isLoading'\r\n      >进入/创建房间</el-button>\r\n    </div>\r\n    <div class='login-wrapper'>\r\n      观影记录\r\n    </div>\r\n    <div class=\"login-wrapper\">\r\n      热门房间\r\n    </div>\r\n    <div class=\"profile\">\r\n      <my-profile/>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import axios from 'axios'\r\n  import { Form, FormItem } from 'element-ui'\r\n  import MyProfile from './my-profile'\r\n\r\n  export default {\r\n    name: 'Homepage',\r\n\r\n    components: {\r\n      ElForm: Form,\r\n      ElFormItem: FormItem,\r\n      MyProfile,\r\n    },\r\n\r\n    data() {\r\n      const checkRoomNumber = (rule, value, callback) => {\r\n        if (!/^[1-9][0-9]{0,9}$/.test(value)) {\r\n          callback(new Error('不合法自然数，长度1-10'))\r\n        } else {\r\n          callback()\r\n        }\r\n      }\r\n\r\n      return {\r\n        form: {\r\n          room: '',\r\n          password: '',\r\n        },\r\n        rules: {\r\n          password: [{ required: true, message: '请输入密码', trigger: 'blur' }],\r\n          room: [\r\n            { required: true, message: '请输入房间号', trigger: 'blur' },\r\n            { validator: checkRoomNumber, trigger: 'blur' }\r\n          ]\r\n        },\r\n        isLoading: false,\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      enterRoomSuccess(groupID) {\r\n        this.$store.dispatch('checkoutConversation', 'GROUP' + groupID)\r\n        this.$store.commit('showMessage', {\r\n          type: 'success',\r\n          message: '进入房间成功'\r\n        })\r\n        this.$emit('enterRoom')\r\n      },\r\n      enterRoom() {\r\n        this.isLoading = true\r\n        this.$refs['room'].validate(valid => {\r\n          if (valid) {\r\n            axios\r\n              .get('http://47.103.30.166:8020/Room/SignIn', {\r\n                params: {\r\n                  room_id: this.form.room,\r\n                  password: this.form.password\r\n                }\r\n              })\r\n              .then(res => {\r\n                var signInRes = res.data\r\n                if (signInRes === 'invalid room') {\r\n                  this.$store.commit('showMessage', {\r\n                    type: 'error',\r\n                    message: '房间不存在'\r\n                  })\r\n                  this.isLoading = false\r\n                  return\r\n                } else {\r\n                  if (signInRes === 'invalid password') {\r\n                    this.$store.commit('showMessage', {\r\n                      type: 'error',\r\n                      message: '密码不正确'\r\n                    })\r\n                    this.isLoading = false\r\n                    return\r\n                  } else {\r\n                    // get sdk room id from server\r\n                    axios\r\n                      .get('http://47.103.30.166:8020/Room/findById', {\r\n                        params: {\r\n                          room_id: this.form.room\r\n                        }\r\n                      })\r\n                      .then(res => {\r\n                        this.$store.commit('changeRoom', res.data)\r\n                      })\r\n\r\n                    this.tim.getGroupList().then(response => {\r\n                      for (var group of response.data.groupList) {\r\n                        if (group.groupID == this.form.room) {\r\n                          this.enterRoomSuccess(group.groupID)\r\n                          return\r\n                        }\r\n                      }\r\n\r\n                      this.tim\r\n                        .joinGroup({\r\n                          groupID: this.form.room\r\n                        })\r\n                        .then(response => {\r\n                          this.enterRoomSuccess(response.data.group.groupID)\r\n                        })\r\n                        .catch(() => {\r\n                          this.tim\r\n                            .createGroup({\r\n                              groupID: this.form.room,\r\n                              name: this.form.room,\r\n                              type: this.TIM.TYPES.GRP_PUBLIC,\r\n                              joinOption: this.TIM.TYPES.JOIN_OPTIONS_FREE_ACCESS\r\n                            })\r\n                            .then(response => {\r\n                              this.enterRoomSuccess(response.data.group.groupID)\r\n                            })\r\n                            .catch(error => {\r\n                              this.$store.commit('showMessage', {\r\n                                type: 'error',\r\n                                message: error\r\n                              })\r\n                            })\r\n                        })\r\n                    })\r\n                  }\r\n                }\r\n              })\r\n          } else {\r\n            this.isLoading = false\r\n          }\r\n        })\r\n      },\r\n    }\r\n  }\r\n</script>\r\n\r\n<style lang='stylus' scoped>\r\n  .login-wrapper {\r\n    display: flex\r\n    align-items: center\r\n    flex-direction: column\r\n    width: 400px\r\n    padding: 50px 50px 50px\r\n    background: $white\r\n    color: $black\r\n    border-radius: 5px\r\n    box-shadow: 0 11px 20px 0 rgba(0, 0, 0, 0.3)\r\n    margin-top: 10%\r\n\r\n    .logo {\r\n      width: 130px\r\n      height: 130px\r\n    }\r\n\r\n    .user-selector {\r\n      width: 100%\r\n    }\r\n  }\r\n\r\n  .title {\r\n    padding-bottom: 30px;\r\n  }\r\n\r\n  .profile {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n</style>\r\n"]}]}