{"remainingRequest":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\components\\message\\message-elements\\sound-element.vue?vue&type=style&index=0&id=6dcb60c4&lang=stylus&scoped=true&","dependencies":[{"path":"D:\\HCI\\github\\src\\components\\message\\message-elements\\sound-element.vue","mtime":1589122703613},{"path":"D:\\HCI\\github\\node_modules\\css-loader\\index.js","mtime":1589122692960},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1589122702781},{"path":"D:\\HCI\\github\\node_modules\\postcss-loader\\src\\index.js","mtime":1589122698492},{"path":"D:\\HCI\\github\\node_modules\\stylus-loader\\index.js","mtime":1589122702034},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.sound-element-wrapper {\r\n  padding: 0px 10px;\r\n  cursor: pointer;\r\n}\r\n",{"version":3,"sources":["sound-element.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA;AACA;AACA;AACA","file":"sound-element.vue","sourceRoot":"src/components/message/message-elements","sourcesContent":["<template>\r\n<message-bubble :isMine=isMine :message=message>\r\n  <div class=\"sound-element-wrapper\" title=\"单击播放\" @click=\"play\">\r\n    <i class=\"iconfont icon-voice\"></i>\r\n    {{ second + '\"' }}\r\n  </div>\r\n</message-bubble>\r\n</template>\r\n\r\n<script>\r\nimport MessageBubble from '../message-bubble'\r\nexport default {\r\n  name: 'SoundElement',\r\n  props: {\r\n    payload: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    message: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    isMine: {\r\n      type: Boolean\r\n    }\r\n  },\r\n  components: {\r\n    MessageBubble\r\n  },\r\n  data() {\r\n    return {\r\n      amr: null\r\n    }\r\n  },\r\n  computed: {\r\n    url() {\r\n      return this.payload.url\r\n    },\r\n    size() {\r\n      return this.payload.size\r\n    },\r\n    second() {\r\n      return this.payload.second\r\n    }\r\n  },\r\n  methods: {\r\n    play() {\r\n      // 目前移动端的语音消息采用 aac 格式，以前用 amr 格式。默认先用 audio 标签播放，若无法播放则尝试 amr 格式播放。\r\n      const audio = document.createElement('audio')\r\n      audio.addEventListener('error', this.tryPlayAMR) // 播放出错，则尝试使用 AMR 播放\r\n      audio.src = this.url\r\n      const promise = audio.play()\r\n      if (promise) {\r\n        promise.catch(() => {})\r\n      }\r\n    },\r\n    tryPlayAMR() {\r\n      try {\r\n        const isIE = /MSIE|Trident|Edge/.test(window.navigator.userAgent)\r\n        // amr 播放组件库在 IE 不支持\r\n        if (isIE) {\r\n          this.$store.commit('showMessage', {\r\n            message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\r\n            type: 'warning'\r\n          })\r\n          return\r\n        }\r\n        // 动态插入 amr 播放组件库\r\n        if (!window.BenzAMRRecorder) {\r\n          const script = document.createElement('script')\r\n          script.addEventListener('load', this.playAMR)\r\n          script.src = './BenzAMRRecorder.js'\r\n          const firstScript = document.getElementsByTagName('script')[0]\r\n          firstScript.parentNode.insertBefore(script, firstScript)\r\n          return\r\n        }\r\n        this.playAMR()\r\n      } catch (error) {\r\n        this.$store.commit('showMessage', {\r\n          message: '您的浏览器不支持该格式的语音消息播放，请尝试更换浏览器，建议使用：谷歌浏览器',\r\n          type: 'warning'\r\n        })\r\n      }\r\n    },\r\n    playAMR() {\r\n      if (!this.amr && window.BenzAMRRecorder) {\r\n        this.amr = new window.BenzAMRRecorder()\r\n      }\r\n      if (this.amr.isInit()) {\r\n        this.amr.play()\r\n        return\r\n      }\r\n      this.amr.initWithUrl(this.url).then(() => {\r\n        this.amr.play()\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.sound-element-wrapper {\r\n  padding: 0px 10px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}