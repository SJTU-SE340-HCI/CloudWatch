{"remainingRequest":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhengwei/SJTU/HCI/CloudWatch/src/components/video/video.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/src/components/video/video.vue","mtime":1592291300467},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/cache-loader/dist/cjs.js","mtime":1589115288536},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/babel-loader/lib/index.js","mtime":1589115288422},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/cache-loader/dist/cjs.js","mtime":1589115288536},{"path":"/Users/liuzhengwei/SJTU/HCI/CloudWatch/node_modules/vue-loader/lib/index.js","mtime":1589115292369}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport TcVod from 'vod-js-sdk-v6'\n\nexport default {\n    name: 'TcPlayer',\n    props: {\n        isFullscreen: Boolean,\n    },\n    computed: {\n        isFull: function () {\n            return this.isFullscreen\n        }\n    },\n    data() {\n        return {\n            tcPlayerId: 'tcPlayer' + Date.now(),\n            player: null,\n            RoomId: 'x2RYna'\n        }\n    },\n    mounted() {\n        let self = this\n        this.$nextTick(() => {\n            setTimeout(() => {\n                let videoFileid = '5285890804129534917'\n                let videoAppid = '1301931404'\n                self.getVideoLang(videoFileid, videoAppid)\n            }, 400)\n        })\n    },\n    methods: {\n        // 初始化腾讯云播放器\n        getVideoLang(fileID, appID) {\n            const playerParam = {\n                fileID: fileID,\n                appID: appID\n            }\n            this.player = window.TCPlayer(this.tcPlayerId, playerParam)\n        },\n        playvideo() {\n            let self = this\n            let time = this.player.currentTime()\n            //alert(time)\n            axios.get('http://localhost:8020/videoroom/play', {\n                params: {\n                    RoomId: this.RoomId,\n                    curTime: time\n                }\n            }).then(function (response) {\n                //alert(response.data)\n                //if(player.paused){\n                //  setInterval(pause,5000);\n                //}\n                //checkplayer();\n                if (Math.abs(response.data - time) > 0.5) {\n                    self.player.currentTime(response.data + 1)\n                }\n            })\n        },\n        tongbu() {\n            //alert('test')\n            this.player.on('playing', setInterval(this.playvideo, 2000))\n        },\n\n        getSignature() {\n            return axios.post('http://localhost:8020/videoroom/signature')\n                .then(function (response) {\n                    //alert(response.data)\n                    return response.data\n                })\n        },\n        shangchuan() {\n            let file = document.querySelector('input[type=file]')\n            let mediaFile = file.files[0]\n            const tcVod = new TcVod({\n                getSignature: this.getSignature // 前文中所述的获取上传签名的函数\n            })\n            const uploader = tcVod.upload({\n                mediaFile: mediaFile, // 媒体文件（视频或音频或图片），类型为 File\n            })\n            uploader.on('media_progress', function (info) {\n                window.console.log(info.percent) // 进度\n            })\n        }\n    }\n}\n",{"version":3,"sources":["video.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"video.vue","sourceRoot":"src/components/video","sourcesContent":["<template>\n    <div id=\"detail\" :class=\"isFull? 'full':'detail'\">\n        <div class=\"video\">\n            <video width=\"640\"\n                   :id=\"tcPlayerId\"\n                   height=\"480\"\n                   class=\"tc-video-container\"\n                   playsinline\n                   webkit-playinline\n                   x5-playinline>\n            </video>\n        </div>\n        <div class=\"center bottoms\">\n            <input type=\"button\" id=\"play\" v-on:click=\"tongbu\" value=\"同步播放\"/>\n            <input id=\"uploadVideoNow-file\" type=\"file\"  accept=\"video/*\"/>\n            <input type=\"button\" value=\"上传本地视频\" v-on:click=\"shangchuan\"/>\n        </div>\n    </div>\n</template>\n\n<script>\n    import axios from 'axios'\n    import TcVod from 'vod-js-sdk-v6'\n\n    export default {\n        name: 'TcPlayer',\n        props: {\n            isFullscreen: Boolean,\n        },\n        computed: {\n            isFull: function () {\n                return this.isFullscreen\n            }\n        },\n        data() {\n            return {\n                tcPlayerId: 'tcPlayer' + Date.now(),\n                player: null,\n                RoomId: 'x2RYna'\n            }\n        },\n        mounted() {\n            let self = this\n            this.$nextTick(() => {\n                setTimeout(() => {\n                    let videoFileid = '5285890804129534917'\n                    let videoAppid = '1301931404'\n                    self.getVideoLang(videoFileid, videoAppid)\n                }, 400)\n            })\n        },\n        methods: {\n            // 初始化腾讯云播放器\n            getVideoLang(fileID, appID) {\n                const playerParam = {\n                    fileID: fileID,\n                    appID: appID\n                }\n                this.player = window.TCPlayer(this.tcPlayerId, playerParam)\n            },\n            playvideo() {\n                let self = this\n                let time = this.player.currentTime()\n                //alert(time)\n                axios.get('http://localhost:8020/videoroom/play', {\n                    params: {\n                        RoomId: this.RoomId,\n                        curTime: time\n                    }\n                }).then(function (response) {\n                    //alert(response.data)\n                    //if(player.paused){\n                    //  setInterval(pause,5000);\n                    //}\n                    //checkplayer();\n                    if (Math.abs(response.data - time) > 0.5) {\n                        self.player.currentTime(response.data + 1)\n                    }\n                })\n            },\n            tongbu() {\n                //alert('test')\n                this.player.on('playing', setInterval(this.playvideo, 2000))\n            },\n\n            getSignature() {\n                return axios.post('http://localhost:8020/videoroom/signature')\n                    .then(function (response) {\n                        //alert(response.data)\n                        return response.data\n                    })\n            },\n            shangchuan() {\n                let file = document.querySelector('input[type=file]')\n                let mediaFile = file.files[0]\n                const tcVod = new TcVod({\n                    getSignature: this.getSignature // 前文中所述的获取上传签名的函数\n                })\n                const uploader = tcVod.upload({\n                    mediaFile: mediaFile, // 媒体文件（视频或音频或图片），类型为 File\n                })\n                uploader.on('media_progress', function (info) {\n                    window.console.log(info.percent) // 进度\n                })\n            }\n        }\n    }\n</script>\n\n\n<style lang='stylus' scoped>\n  .detail{\n    padding-left: 15%;\n    padding-right: 15%;\n    height: 85%;\n  }\n  .full{\n    padding: 0;\n    width: 100.5%;\n    left: -0.25%;\n    height: 95.25%;\n    top: -0.25%;\n\n  }\n  .video{\n    width: 100%;\n    height: 97%;\n    margin: 0;\n  }\n  .buttons{\n    height: 3%;\n  }\n  .tc-video-container{\n    width: 100%;\n    height: 100%;\n  }\n  .center{\n    justify-content: center;\n    align-items: center;\n  }\n</style>\n"]}]}