{"remainingRequest":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\github\\src\\components\\homepage.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\github\\src\\components\\homepage.vue","mtime":1593418846936},{"path":"D:\\HCI\\github\\node_modules\\babel-loader\\lib\\index.js","mtime":1589122690916},{"path":"D:\\HCI\\github\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589122691350},{"path":"D:\\HCI\\github\\node_modules\\vue-loader\\lib\\index.js","mtime":1589122702780}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport axios from 'axios'\nimport { Form, FormItem, Switch, Radio} from 'element-ui'\nimport MyProfile from './my-profile'\nimport { mapState } from 'vuex'\n\n\nexport default {\n  name: 'Homepage',\n\n  components: {\n    ElForm: Form,\n    ElFormItem: FormItem,\n    ElSwitch: Switch,\n    ElRadio: Radio,\n    MyProfile,\n  },\n\n  data() {\n    const checkRoomNumber = (rule, value, callback) => {\n      if (!/^[1-9][0-9]{0,9}$/.test(value)) {\n        callback(new Error('不合法自然数，长度1-10'))\n      } else {\n        callback()\n      }\n    }\n\n    return {\n      form: {\n        room: '',\n        password: '',\n      },\n      createRoomForm: {\n        roomName: '',\n        password: '',\n        isPublic: true,\n        roomKind:'0',\n      },\n      rules: {\n        password: [{required: true, message: '请输入密码', trigger: 'blur' }],\n        room: [\n          { required: true, message: '请输入房间号', trigger: 'blur' },\n          { validator: checkRoomNumber, trigger: 'blur' }\n        ],\n        roomName: [\n          {required: true, message: '请输入房间名', trigger: 'blur' }\n        ]\n      },\n      isLoading: false,\n      isEnterRoom: true,\n    }\n  },\n\n  computed: {\n    ...mapState({\n      userID_cw: state => state.user.userID_cw\n    }),\n  },\n\n  methods: {\n    enterRoomSuccess(groupID) {\n      this.$store.dispatch('checkoutConversation', 'GROUP' + groupID)\n      if(this.$store.state.currentRoom.kindRoom==1) {\n        this.$store.commit('showMessage',{\n          type: 'success',\n          message: '这是一个电影房间'\n        })\n      }else {\n        this.$store.commit('showMessage',{\n          type: 'success',\n          message: '这是一个普通房间'\n        })\n      }\n      this.$emit('enterRoom')\n    },\n    enterRoom() {\n      this.isLoading = true\n      this.$refs['room'].validate(valid => {\n        if (valid) {\n          axios\n            .get('http://47.103.30.166:8020/Room/SignIn', {\n              params: {\n                room_id: this.form.room,\n                password: this.form.password\n              }\n            })\n            .then(res => {\n              var signInRes = res.data\n              if (signInRes === 'invalid room') {\n                this.$store.commit('showMessage', {\n                  type: 'error',\n                  message: '房间不存在'\n                })\n                this.isLoading = false\n                return\n              } else {\n                if (signInRes === 'invalid password') {\n                  this.$store.commit('showMessage', {\n                    type: 'error',\n                    message: '密码不正确'\n                  })\n                  this.isLoading = false\n                  return\n                } else {\n                  // get room infor from backend\n                  axios\n                    .get('http://47.103.30.166:8020/Room/findById', {\n                      params: {\n                        room_id: this.form.room\n                      }\n                    })\n                    .then(res => {\n                      this.$store.commit('changeRoom', res.data)\n                    })\n                    this.$store.commit('changeRoomId', this.form.room)\n\n                  this.joinChatGroup(this.form.room)\n                }\n              }\n            })\n        } else {\n          this.isLoading = false\n        }\n      })\n    },\n    joinChatGroup(roomID, roomName='') {\n      this.tim.getGroupList().then(response => {\n        for (var group of response.data.groupList) {\n          if (group.groupID == roomID) {\n            this.enterRoomSuccess(group.groupID)\n            return\n          }\n        }\n\n        this.tim\n          .joinGroup({\n            groupID: roomID\n          })\n          .then(response => {\n            this.enterRoomSuccess(response.data.group.groupID)\n          })\n          .catch(() => {\n            this.tim\n              .createGroup({\n                groupID: roomID,\n                name: roomName,\n                type: this.TIM.TYPES.GRP_PUBLIC,\n                joinOption: this.TIM.TYPES.JOIN_OPTIONS_FREE_ACCESS\n              })\n              .then(response => {\n                this.enterRoomSuccess(response.data.group.groupID)\n              })\n              .catch(error => {\n                this.$store.commit('showMessage', {\n                  type: 'error',\n                  message: error\n                })\n              })\n          })\n      })\n    },\n\n    createRoom() {\n      this.isLoading = true\n      this.$refs['room'].validate(valid => {\n        if (valid) {\n          if (this.createRoomForm.roomKind=='0') {\n          axios.get('http://47.103.30.166:8020/Room/new', {\n            params: {\n              user_id: this.userID_cw,\n              passwordRoom: this.createRoomForm.password,\n              statusRoom: this.createRoomForm.isPublic ? 'public' : 'private'\n            }\n          }).then(res => {\n            window.console.log(res.data)\n            if (res.data == 'invalid param') {\n              this.$store.commit('showMessage', {\n                type: 'error',\n                message: '无效的创建参数'\n              })\n            }\n\n            this.joinChatGroup(res.data.toString(), this.createRoomForm.roomName)\n          }).catch(error => {\n            window.console.log(error)\n            this.$store.commit('showMessage', {\n              type: 'error',\n              message: error\n            })\n          })\n          }else{\n            axios.get('http://47.103.30.166:8020/Room/newMovieRoom', {\n            params: {\n              user_id: this.userID_cw,\n              passwordRoom: this.createRoomForm.password,\n              statusRoom: this.createRoomForm.isPublic ? 'public' : 'private'\n            }\n          }).then(res => {\n            window.console.log(res.data)\n            if (res.data == 'invalid param') {\n              this.$store.commit('showMessage', {\n                type: 'error',\n                message: '无效的创建参数'\n              })\n            }\n\n            this.joinChatGroup(res.data.toString(), this.createRoomForm.roomName)\n          }).catch(error => {\n            window.console.log(error)\n            this.$store.commit('showMessage', {\n              type: 'error',\n              message: error\n            })\n          })\n          }\n        }\n      })\n    }\n  }\n}\n",null]}