{"remainingRequest":"D:\\HCI\\CloudWatch\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\CloudWatch\\src\\components\\conversation\\conversationProfile\\add-group-member.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\CloudWatch\\src\\components\\conversation\\conversationProfile\\add-group-member.vue","mtime":1589001011123},{"path":"D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589000993815},{"path":"D:\\HCI\\CloudWatch\\node_modules\\babel-loader\\lib\\index.js","mtime":1589000993275},{"path":"D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589000993815},{"path":"D:\\HCI\\CloudWatch\\node_modules\\vue-loader\\lib\\index.js","mtime":1589001009411}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\r\nimport { Input } from 'element-ui'\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n  components: {\r\n    ElInput: Input\r\n  },\r\n  data() {\r\n    return {\r\n      userID: ''\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentConversation: state => state.conversation.currentConversation\r\n    })\r\n  },\r\n  methods: {\r\n    addGroupMember() {\r\n      const groupID = this.currentConversation.conversationID.replace('GROUP', '')\r\n      this.tim\r\n        .addGroupMember({\r\n          groupID,\r\n          userIDList: [this.userID]\r\n        })\r\n        .then((imResponse) => {\r\n          const {\r\n            successUserIDList,\r\n            failureUserIDList,\r\n            existedUserIDList\r\n          } = imResponse.data\r\n          if (successUserIDList.length > 0) {\r\n            this.$store.commit('showMessage', {\r\n              message: `群成员：${successUserIDList.join(',')}，加群成功`,\r\n              type: 'success'\r\n            })\r\n            this.tim.getGroupMemberProfile({groupID, userIDList: successUserIDList})\r\n            .then(({ data: { memberList }}) => {\r\n              this.$store.commit('updateCurrentMemberList', memberList)\r\n            })\r\n          }\r\n          if (failureUserIDList.length > 0) {\r\n            this.$store.commit('showMessage', {\r\n              message: `群成员：${failureUserIDList.join(',')}，添加失败！`,\r\n              type: 'error'\r\n            })\r\n          }\r\n          if (existedUserIDList.length > 0) {\r\n            this.$store.commit('showMessage', {\r\n              message: `群成员：${existedUserIDList.join(',')}，已在群中`\r\n            })\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["add-group-member.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"add-group-member.vue","sourceRoot":"src/components/conversation/conversationProfile","sourcesContent":["<template>\r\n  <div>\r\n    <el-input v-model=\"userID\" placeholder=\"输入userID后 按回车键\" @keydown.enter.native=\"addGroupMember\"></el-input>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { Input } from 'element-ui'\r\nimport { mapState } from 'vuex'\r\nexport default {\r\n  components: {\r\n    ElInput: Input\r\n  },\r\n  data() {\r\n    return {\r\n      userID: ''\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentConversation: state => state.conversation.currentConversation\r\n    })\r\n  },\r\n  methods: {\r\n    addGroupMember() {\r\n      const groupID = this.currentConversation.conversationID.replace('GROUP', '')\r\n      this.tim\r\n        .addGroupMember({\r\n          groupID,\r\n          userIDList: [this.userID]\r\n        })\r\n        .then((imResponse) => {\r\n          const {\r\n            successUserIDList,\r\n            failureUserIDList,\r\n            existedUserIDList\r\n          } = imResponse.data\r\n          if (successUserIDList.length > 0) {\r\n            this.$store.commit('showMessage', {\r\n              message: `群成员：${successUserIDList.join(',')}，加群成功`,\r\n              type: 'success'\r\n            })\r\n            this.tim.getGroupMemberProfile({groupID, userIDList: successUserIDList})\r\n            .then(({ data: { memberList }}) => {\r\n              this.$store.commit('updateCurrentMemberList', memberList)\r\n            })\r\n          }\r\n          if (failureUserIDList.length > 0) {\r\n            this.$store.commit('showMessage', {\r\n              message: `群成员：${failureUserIDList.join(',')}，添加失败！`,\r\n              type: 'error'\r\n            })\r\n          }\r\n          if (existedUserIDList.length > 0) {\r\n            this.$store.commit('showMessage', {\r\n              message: `群成员：${existedUserIDList.join(',')}，已在群中`\r\n            })\r\n          }\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped></style>\r\n"]}]}