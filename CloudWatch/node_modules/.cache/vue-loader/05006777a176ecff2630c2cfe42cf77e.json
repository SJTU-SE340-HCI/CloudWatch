{"remainingRequest":"D:\\HCI\\CloudWatch\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\CloudWatch\\src\\components\\conversation\\conversationProfile\\group-member-info.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\CloudWatch\\src\\components\\conversation\\conversationProfile\\group-member-info.vue","mtime":1589001011124},{"path":"D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589000993815},{"path":"D:\\HCI\\CloudWatch\\node_modules\\babel-loader\\lib\\index.js","mtime":1589000993275},{"path":"D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589000993815},{"path":"D:\\HCI\\CloudWatch\\node_modules\\vue-loader\\lib\\index.js","mtime":1589001009411}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState } from 'vuex'\r\nimport { Popover } from 'element-ui'\r\nimport { getFullDate } from '../../../utils/date'\r\nexport default {\r\n  components: {\r\n    ElPopover: Popover\r\n  },\r\n  props: ['member'],\r\n  data() {\r\n    return {\r\n      muteTime: '',\r\n      popoverVisible: false,\r\n      nameCardPopoverVisible: false,\r\n      nameCard: this.member.nameCard\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentConversation: state => state.conversation.currentConversation,\r\n      currentUserProfile: state => state.user.currentUserProfile,\r\n      current: state => state.current\r\n    }),\r\n    // 是否显示踢出群成员按钮\r\n    showKickout() {\r\n      return (this.isOwner || this.isAdmin) && !this.isMine\r\n    },\r\n    isOwner() {\r\n      return this.currentConversation.groupProfile.selfInfo.role === 'Owner'\r\n    },\r\n    isAdmin() {\r\n      return this.currentConversation.groupProfile.selfInfo.role === 'Admin'\r\n    },\r\n    isMine() {\r\n      return this.currentUserProfile.userID === this.member.userID\r\n    },\r\n    canChangeRole() {\r\n      return (\r\n        this.isOwner &&\r\n        ['ChatRoom', 'Public'].includes(this.currentConversation.subType)\r\n      )\r\n    },\r\n    changeRoleTitle() {\r\n      if (!this.canChangeRole) {\r\n        return ''\r\n      }\r\n      return this.isOwner && this.member.role === 'Admin'\r\n        ? '设为：Member'\r\n        : '设为：Admin'\r\n    },\r\n    // 是否显示禁言时间\r\n    showMuteUntil() {\r\n      // 禁言时间小于当前时间\r\n      return this.member.muteUntil * 1000 > this.current\r\n    },\r\n    // 是否显示取消禁言按钮\r\n    showCancelBan() {\r\n      if (\r\n        this.showMuteUntil &&\r\n        this.currentConversation.type === this.TIM.TYPES.CONV_GROUP &&\r\n        !this.isMine\r\n      ) {\r\n        return this.isOwner || this.isAdmin\r\n      }\r\n      return false\r\n    },\r\n    // 是否显示禁言按钮\r\n    showBan() {\r\n      if (this.currentConversation.type === this.TIM.TYPES.CONV_GROUP) {\r\n        return this.isOwner || this.isAdmin\r\n      }\r\n      return false\r\n    },\r\n    // 是否显示编辑群名片按钮\r\n    showEditNameCard() {\r\n      return this.isOwner || this.isAdmin\r\n    },\r\n    // 日期格式化后的禁言时间\r\n    muteUntil() {\r\n      return getFullDate(new Date(this.member.muteUntil * 1000))\r\n    }\r\n  },\r\n  methods: {\r\n    kickoutGroupMember() {\r\n      this.tim\r\n        .deleteGroupMember({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          reason: '我要踢你出群',\r\n          userIDList: [this.member.userID]\r\n        })\r\n        .then(() => {\r\n          this.$store.commit('deleteGroupMemeber', this.member.userID)\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    changeMemberRole() {\r\n      if (!this.canChangeRole) {\r\n        return\r\n      }\r\n      let currentRole = this.member.role\r\n      this.tim\r\n        .setGroupMemberRole({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          role: currentRole === 'Admin' ? 'Member' : 'Admin'\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    setGroupMemberMuteTime() {\r\n      this.tim\r\n        .setGroupMemberMuteTime({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          muteTime: Number(this.muteTime)\r\n        })\r\n        .then(() => {\r\n          this.muteTime = ''\r\n          this.popoverVisible = false\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    // 取消禁言\r\n    cancelMute() {\r\n      this.tim\r\n        .setGroupMemberMuteTime({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          muteTime: 0\r\n        })\r\n        .then(() => {\r\n          this.muteTime = ''\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    setGroupMemberNameCard() {\r\n      if (this.nameCard.trim().length === 0) {\r\n        this.$store.commit('showMessage', {\r\n          message: '不能设置空的群名片',\r\n          type: 'warning'\r\n        })\r\n        return\r\n      }\r\n      this.tim\r\n        .setGroupMemberNameCard({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          nameCard: this.nameCard\r\n        })\r\n        .then(() => {\r\n          this.nameCardPopoverVisible = false\r\n          this.$store.commit('showMessage', {\r\n            message: '修改成功'\r\n          })\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["group-member-info.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"group-member-info.vue","sourceRoot":"src/components/conversation/conversationProfile","sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <span class=\"label\">userID:</span>\r\n      {{ member.userID }}\r\n      <el-button v-if=\"showCancelBan\" type=\"text\" @click=\"cancelMute\">取消禁言</el-button>\r\n      <el-popover title=\"禁言\" v-model=\"popoverVisible\" v-show=\"showBan\">\r\n        <el-input\r\n          v-model=\"muteTime\"\r\n          placeholder=\"请输入禁言时间\"\r\n          @keydown.enter.native=\"setGroupMemberMuteTime\"\r\n        />\r\n        <el-button slot=\"reference\" type=\"text\" style=\"color:red;\">禁言</el-button>\r\n      </el-popover>\r\n    </div>\r\n    <div>\r\n      <span class=\"label\">nick:</span>\r\n      {{ member.nick || '暂无' }}\r\n    </div>\r\n    <div>\r\n      <span class=\"label\">nameCard:</span>\r\n      {{ member.nameCard || '暂无' }}\r\n      <el-popover title=\"修改群名片\" v-model=\"nameCardPopoverVisible\" v-show=\"showEditNameCard\">\r\n        <el-input\r\n          v-model=\"nameCard\"\r\n          placeholder=\"请输入群名片\"\r\n          @keydown.enter.native=\"setGroupMemberNameCard\"\r\n        />\r\n        <i\r\n          class=\"el-icon-edit\"\r\n          title=\"修改群名片\"\r\n          slot=\"reference\"\r\n          style=\"cursor:pointer; font-size:1.6rem;\"\r\n        ></i>\r\n      </el-popover>\r\n    </div>\r\n    <div>\r\n      <span class=\"label\">role:</span>\r\n      <span class=\"content role\" :title=\"changeRoleTitle\">{{ member.role }}</span>\r\n    </div>\r\n    <div v-if=\"showMuteUntil\">\r\n      <span class=\"label\">禁言至:</span>\r\n      <span class=\"content\">{{ muteUntil }}</span>\r\n    </div>\r\n    <el-button type=\"text\" v-if=\"canChangeRole\" @click=\"changeMemberRole\">\r\n      {{\r\n      member.role === 'Admin' ? '取消管理员' : '设为管理员'\r\n      }}\r\n    </el-button>\r\n    <el-button type=\"text\" v-if=\"showKickout\" style=\"color:red;\" @click=\"kickoutGroupMember\">踢出群组</el-button>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex'\r\nimport { Popover } from 'element-ui'\r\nimport { getFullDate } from '../../../utils/date'\r\nexport default {\r\n  components: {\r\n    ElPopover: Popover\r\n  },\r\n  props: ['member'],\r\n  data() {\r\n    return {\r\n      muteTime: '',\r\n      popoverVisible: false,\r\n      nameCardPopoverVisible: false,\r\n      nameCard: this.member.nameCard\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      currentConversation: state => state.conversation.currentConversation,\r\n      currentUserProfile: state => state.user.currentUserProfile,\r\n      current: state => state.current\r\n    }),\r\n    // 是否显示踢出群成员按钮\r\n    showKickout() {\r\n      return (this.isOwner || this.isAdmin) && !this.isMine\r\n    },\r\n    isOwner() {\r\n      return this.currentConversation.groupProfile.selfInfo.role === 'Owner'\r\n    },\r\n    isAdmin() {\r\n      return this.currentConversation.groupProfile.selfInfo.role === 'Admin'\r\n    },\r\n    isMine() {\r\n      return this.currentUserProfile.userID === this.member.userID\r\n    },\r\n    canChangeRole() {\r\n      return (\r\n        this.isOwner &&\r\n        ['ChatRoom', 'Public'].includes(this.currentConversation.subType)\r\n      )\r\n    },\r\n    changeRoleTitle() {\r\n      if (!this.canChangeRole) {\r\n        return ''\r\n      }\r\n      return this.isOwner && this.member.role === 'Admin'\r\n        ? '设为：Member'\r\n        : '设为：Admin'\r\n    },\r\n    // 是否显示禁言时间\r\n    showMuteUntil() {\r\n      // 禁言时间小于当前时间\r\n      return this.member.muteUntil * 1000 > this.current\r\n    },\r\n    // 是否显示取消禁言按钮\r\n    showCancelBan() {\r\n      if (\r\n        this.showMuteUntil &&\r\n        this.currentConversation.type === this.TIM.TYPES.CONV_GROUP &&\r\n        !this.isMine\r\n      ) {\r\n        return this.isOwner || this.isAdmin\r\n      }\r\n      return false\r\n    },\r\n    // 是否显示禁言按钮\r\n    showBan() {\r\n      if (this.currentConversation.type === this.TIM.TYPES.CONV_GROUP) {\r\n        return this.isOwner || this.isAdmin\r\n      }\r\n      return false\r\n    },\r\n    // 是否显示编辑群名片按钮\r\n    showEditNameCard() {\r\n      return this.isOwner || this.isAdmin\r\n    },\r\n    // 日期格式化后的禁言时间\r\n    muteUntil() {\r\n      return getFullDate(new Date(this.member.muteUntil * 1000))\r\n    }\r\n  },\r\n  methods: {\r\n    kickoutGroupMember() {\r\n      this.tim\r\n        .deleteGroupMember({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          reason: '我要踢你出群',\r\n          userIDList: [this.member.userID]\r\n        })\r\n        .then(() => {\r\n          this.$store.commit('deleteGroupMemeber', this.member.userID)\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    changeMemberRole() {\r\n      if (!this.canChangeRole) {\r\n        return\r\n      }\r\n      let currentRole = this.member.role\r\n      this.tim\r\n        .setGroupMemberRole({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          role: currentRole === 'Admin' ? 'Member' : 'Admin'\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    setGroupMemberMuteTime() {\r\n      this.tim\r\n        .setGroupMemberMuteTime({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          muteTime: Number(this.muteTime)\r\n        })\r\n        .then(() => {\r\n          this.muteTime = ''\r\n          this.popoverVisible = false\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    // 取消禁言\r\n    cancelMute() {\r\n      this.tim\r\n        .setGroupMemberMuteTime({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          muteTime: 0\r\n        })\r\n        .then(() => {\r\n          this.muteTime = ''\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    },\r\n    setGroupMemberNameCard() {\r\n      if (this.nameCard.trim().length === 0) {\r\n        this.$store.commit('showMessage', {\r\n          message: '不能设置空的群名片',\r\n          type: 'warning'\r\n        })\r\n        return\r\n      }\r\n      this.tim\r\n        .setGroupMemberNameCard({\r\n          groupID: this.currentConversation.groupProfile.groupID,\r\n          userID: this.member.userID,\r\n          nameCard: this.nameCard\r\n        })\r\n        .then(() => {\r\n          this.nameCardPopoverVisible = false\r\n          this.$store.commit('showMessage', {\r\n            message: '修改成功'\r\n          })\r\n        })\r\n        .catch(error => {\r\n          this.$store.commit('showMessage', {\r\n            type: 'error',\r\n            message: error.message\r\n          })\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.label {\r\n  color: rgb(204, 200, 200);\r\n}\r\n\r\n.cursor-pointer {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}