{"remainingRequest":"/Users/liuzhengwei/Downloads/TIMSDK/H5/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/liuzhengwei/Downloads/TIMSDK/H5/src/components/conversation/conversationProfile/group-profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/liuzhengwei/Downloads/TIMSDK/H5/src/components/conversation/conversationProfile/group-profile.vue","mtime":1577087589000},{"path":"/Users/liuzhengwei/Downloads/TIMSDK/H5/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/liuzhengwei/Downloads/TIMSDK/H5/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/liuzhengwei/Downloads/TIMSDK/H5/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport GroupMemberList from './group-member-list.vue'\nimport { Select, Option } from 'element-ui'\nexport default {\n  props: ['groupProfile'],\n  components: {\n    GroupMemberList,\n    ElSelect: Select,\n    ElOption: Option\n  },\n  data() {\n    return {\n      showEditName: false,\n      showEditFaceUrl: false,\n      showEditIntroduction: false,\n      showEditNotification: false,\n      showEditJoinOption: false,\n      showChangeGroupOwner: false,\n      showEditMessageRemindType: false,\n      showEditNameCard: false,\n      name: this.groupProfile.name,\n      avatar: this.groupProfile.avatar,\n      introduction: this.groupProfile.introduction,\n      notification: this.groupProfile.notification,\n      joinOption: this.groupProfile.joinOption,\n      newOwnerUserID: '',\n      messageRemindType: this.groupProfile.selfInfo.messageRemindType,\n      nameCard: this.groupProfile.selfInfo.nameCard || '',\n      messageRemindTypeMap: {\n        AcceptAndNotify: '接收消息并提示',\n        AcceptNotNotify: '接收消息但不提示',\n        Discard: '屏蔽消息'\n      },\n      joinOptionMap: {\n        FreeAccess: '自由加入',\n        NeedPermission: '需要验证',\n        DisableApply: '禁止加群'\n      }\n    }\n  },\n  computed: {\n    editable() {\n      return (\n        this.groupProfile.type === this.TIM.TYPES.GRP_PRIVATE ||\n        ['Owner', 'Admin'].includes(this.groupProfile.selfInfo.role)\n      )\n    },\n    isOwner() {\n      return this.groupProfile.selfInfo.role === 'Owner'\n    },\n    showDissmissGroup() {\n      // 私有群不能解散\n      return this.isOwner && this.groupProfile.type !== 'Private'\n    }\n  },\n  watch: {\n    groupProfile(groupProfile) {\n      Object.assign(this, {\n        showEditName: false,\n        showEditFaceUrl: false,\n        showEditIntroduction: false,\n        showEditNotification: false,\n        showEditJoinOption: false,\n        showChangeGroupOwner: false,\n        showEditNameCard: false,\n        name: groupProfile.name,\n        avatar: groupProfile.avatar,\n        introduction: groupProfile.introduction,\n        notification: groupProfile.notification,\n        joinOption: groupProfile.joinOption,\n        messageRemindType: groupProfile.messageRemindType,\n        nameCard: groupProfile.selfInfo.nameCard || ''\n      })\n    }\n  },\n  methods: {\n    inputFocus(ref) {\n      this.$nextTick(() => {\n        this.$refs[ref].focus()\n      })\n    },\n    editName() {\n      this.tim\n        .updateGroupProfile({\n          groupID: this.groupProfile.groupID,\n          name: this.name.trim()\n        })\n        .then(() => {\n          this.showEditName = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    editFaceUrl() {\n      this.tim\n        .updateGroupProfile({\n          groupID: this.groupProfile.groupID,\n          avatar: this.avatar.trim()\n        })\n        .then(() => {\n          this.showEditFaceUrl = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    editIntroduction() {\n      this.tim\n        .updateGroupProfile({\n          groupID: this.groupProfile.groupID,\n          introduction: this.introduction.trim()\n        })\n        .then(() => {\n          this.showEditIntroduction = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    editNotification() {\n      this.tim\n        .updateGroupProfile({\n          groupID: this.groupProfile.groupID,\n          notification: this.notification.trim()\n        })\n        .then(() => {\n          this.showEditNotification = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    editJoinOption() {\n      this.tim\n        .updateGroupProfile({\n          groupID: this.groupProfile.groupID,\n          joinOption: this.joinOption\n        })\n        .then(() => {\n          this.showEditJoinOption = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    changeOwner() {\n      this.tim\n        .changeGroupOwner({\n          groupID: this.groupProfile.groupID,\n          newOwnerID: this.newOwnerUserID\n        })\n        .then(() => {\n          this.showChangeGroupOwner = false\n          this.$store.commit('showMessage', {\n            message: `转让群主成功，新群主ID：${this.newOwnerUserID}`\n          })\n          this.newOwnerUserID = ''\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    quitGroup() {\n      this.tim.quitGroup(this.groupProfile.groupID).then(({ data: { groupID } }) => {\n        this.$store.commit('showMessage', {\n          message: '退群成功'\n        })\n        if (groupID === this.groupProfile.groupID) {\n          this.$store.commit('resetCurrentConversation')\n        }\n      })\n      .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    dismissGroup() {\n      this.tim.dismissGroup(this.groupProfile.groupID).then(({ data: { groupID } }) => {\n        this.$store.commit('showMessage', {\n          message: `群：${this.groupProfile.name || this.groupProfile.groupID}解散成功！`,\n          type: 'success'\n        })\n        if (groupID === this.groupProfile.groupID) {\n          this.$store.commit('resetCurrentConversation')\n        }\n      })\n      .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    editMessageRemindType() {\n      this.tim\n        .setMessageRemindType({\n          groupID: this.groupProfile.groupID,\n          messageRemindType: this.messageRemindType\n        })\n        .then(() => {\n          this.showEditMessageRemindType = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    },\n    editNameCard() {\n      if (this.nameCard.trim().length === 0) {\n        this.$store.commit('showMessage', {\n          message: '不能设置空的群名片',\n          type: 'warning'\n        })\n        return\n      }\n      this.tim\n        .setGroupMemberNameCard({\n          groupID: this.groupProfile.groupID,\n          nameCard: this.nameCard.trim()\n        })\n        .then(() => {\n          this.showEditNameCard = false\n        })\n        .catch(error => {\n          this.$store.commit('showMessage', {\n            type: 'error',\n            message: error.message\n          })\n        })\n    }\n  }\n}\n",null]}