{"remainingRequest":"D:\\HCI\\CloudWatch\\node_modules\\babel-loader\\lib\\index.js!D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HCI\\CloudWatch\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\CloudWatch\\src\\components\\message\\message-status-icon.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\CloudWatch\\src\\components\\message\\message-status-icon.vue","mtime":1589001011150},{"path":"D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589000993815},{"path":"D:\\HCI\\CloudWatch\\node_modules\\babel-loader\\lib\\index.js","mtime":1589000993275},{"path":"D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589000993815},{"path":"D:\\HCI\\CloudWatch\\node_modules\\vue-loader\\lib\\index.js","mtime":1589001009411}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'MessageStatusIcon',\n  props: {\n    message: {\n      type: Object,\n      required: true\n    }\n  },\n  computed: {\n    messageIconClass: function messageIconClass() {\n      switch (this.message.status) {\n        case 'unSend':\n          return 'el-icon-loading';\n\n        case 'fail':\n          return 'message-send-fail';\n\n        default:\n          return '';\n      }\n    }\n  },\n  methods: {\n    handleIconClick: function handleIconClick() {\n      var _this = this;\n\n      if (this.messageIconClass === 'message-send-fail') {\n        this.tim.resendMessage(this.message).catch(function (imError) {\n          _this.$store.commit('showMessage', {\n            message: imError.message,\n            type: 'error'\n          });\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["message-status-icon.vue"],"names":[],"mappings":";;;;;;;;AASA,eAAA;AACA,EAAA,IAAA,EAAA,mBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GAFA;AAQA,EAAA,QAAA,EAAA;AACA,IAAA,gBADA,8BACA;AACA,cAAA,KAAA,OAAA,CAAA,MAAA;AACA,aAAA,QAAA;AACA,iBAAA,iBAAA;;AACA,aAAA,MAAA;AACA,iBAAA,mBAAA;;AACA;AACA,iBAAA,EAAA;AANA;AAQA;AAVA,GARA;AAoBA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,6BACA;AAAA;;AACA,UAAA,KAAA,gBAAA,KAAA,mBAAA,EAAA;AACA,aAAA,GAAA,CAAA,aAAA,CAAA,KAAA,OAAA,EAAA,KAAA,CAAA,UAAA,OAAA,EAAA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA;AACA,YAAA,OAAA,EAAA,OAAA,CAAA,OADA;AAEA,YAAA,IAAA,EAAA;AAFA,WAAA;AAIA,SALA;AAMA;AACA;AAVA;AApBA,CAAA","sourcesContent":["<template>\r\n  <div\r\n    style=\"width:16px;height:16px;\"\r\n    :class=\"messageIconClass\"\r\n    @click=\"handleIconClick\"\r\n  >{{messageIconClass==='message-send-fail'? '!':''}}</div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'MessageStatusIcon',\r\n  props: {\r\n    message: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    messageIconClass() {\r\n      switch (this.message.status) {\r\n        case 'unSend':\r\n          return 'el-icon-loading'\r\n        case 'fail':\r\n          return 'message-send-fail'\r\n        default:\r\n          return ''\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    handleIconClick() {\r\n      if (this.messageIconClass === 'message-send-fail') {\r\n        this.tim.resendMessage(this.message).catch(imError => {\r\n          this.$store.commit('showMessage', {\r\n            message: imError.message,\r\n            type: 'error'\r\n          })\r\n        })\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.message-send-fail {\r\n  margin-right: 8px;\r\n  background-color: #f35f5f;\r\n  color: $white;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n  line-height: 16px;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/message"}]}