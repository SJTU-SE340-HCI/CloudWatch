{"remainingRequest":"D:\\HCI\\CloudWatch\\node_modules\\babel-loader\\lib\\index.js!D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\HCI\\CloudWatch\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\HCI\\CloudWatch\\src\\components\\first.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\HCI\\CloudWatch\\src\\components\\first.vue","mtime":1589039194645},{"path":"D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589000993815},{"path":"D:\\HCI\\CloudWatch\\node_modules\\babel-loader\\lib\\index.js","mtime":1589000993275},{"path":"D:\\HCI\\CloudWatch\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1589000993815},{"path":"D:\\HCI\\CloudWatch\\node_modules\\vue-loader\\lib\\index.js","mtime":1589001009411}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\nfunction loadTcScript(cb) {\n  loadScript(cb, {\n    id: 'tcPlayerScriptId',\n    url: '//imgcache.qq.com/open/qcloud/video/tcplayer/tcplayer.min.js'\n  });\n}\n\nfunction loadScript(cb, obj) {\n  if (document.getElementById(obj.id)) {\n    cb();\n  } else {\n    var script = document.createElement('script');\n    script.async = true;\n    script.src = obj.url;\n    script.id = obj.id;\n\n    script.onload = function () {\n      cb();\n    };\n\n    document.body.appendChild(script);\n  }\n}\n\nexport default {\n  name: 'TencentPlayer',\n  props: {\n    options: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      tcPlayerId: 'tcPlayer' + Date.now(),\n      player: null\n    };\n  },\n  watch: {\n    options: {\n      handler: function handler(newV, oldV) {\n        var _this = this;\n\n        this.$nextTick(function () {\n          _this.loadJS();\n        });\n      },\n      immediate: true,\n      deep: true\n    }\n  },\n  methods: {\n    loadJS: function loadJS() {\n      var _this2 = this;\n\n      if (window.TCPlayer) {\n        this.initVideo();\n      } else {\n        loadTcScript(function () {\n          _this2.initVideo();\n        });\n      }\n    },\n    initVideo: function initVideo() {\n      var _this3 = this;\n\n      var playerParm = {\n        fileID: this.options.fileId,\n        appID: 'xxx',\n        autoplay: this.options.autoplay ? true : false\n      };\n      setTimeout(function () {\n        if (!_this3.player) {\n          _this3.player = TCPlayer(_this3.tcPlayerId, playerParm);\n        } else {\n          _this3.player.loadVideoByID(playerParm);\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["first.vue"],"names":[],"mappings":";;;;;;AAOA,SAAA,YAAA,CAAA,EAAA,EAAA;AACA,EAAA,UAAA,CAAA,EAAA,EAAA;AACA,IAAA,EAAA,EAAA,kBADA;AAEA,IAAA,GAAA,EAAA;AAFA,GAAA,CAAA;AAIA;;AACA,SAAA,UAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AACA,MAAA,QAAA,CAAA,cAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA;AACA,IAAA,EAAA;AACA,GAFA,MAEA;AACA,QAAA,MAAA,GAAA,QAAA,CAAA,aAAA,CAAA,QAAA,CAAA;AACA,IAAA,MAAA,CAAA,KAAA,GAAA,IAAA;AACA,IAAA,MAAA,CAAA,GAAA,GAAA,GAAA,CAAA,GAAA;AACA,IAAA,MAAA,CAAA,EAAA,GAAA,GAAA,CAAA,EAAA;;AACA,IAAA,MAAA,CAAA,MAAA,GAAA,YAAA;AACA,MAAA,EAAA;AACA,KAFA;;AAGA,IAAA,QAAA,CAAA,IAAA,CAAA,WAAA,CAAA,MAAA;AACA;AACA;;AACA,eAAA;AACA,EAAA,IAAA,EAAA,eADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,EAAA;AACA;AAJA;AADA,GAFA;AAUA,EAAA,IAVA,kBAUA;AACA,WAAA;AACA,MAAA,UAAA,EAAA,aAAA,IAAA,CAAA,GAAA,EADA;AAEA,MAAA,MAAA,EAAA;AAFA,KAAA;AAIA,GAfA;AAgBA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,OADA,mBACA,IADA,EACA,IADA,EACA;AAAA;;AACA,aAAA,SAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,MAAA;AACA,SAFA;AAGA,OALA;AAMA,MAAA,SAAA,EAAA,IANA;AAOA,MAAA,IAAA,EAAA;AAPA;AADA,GAhBA;AA2BA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,UAAA,MAAA,CAAA,QAAA,EAAA;AACA,aAAA,SAAA;AACA,OAFA,MAEA;AACA,QAAA,YAAA,CAAA,YAAA;AACA,UAAA,MAAA,CAAA,SAAA;AACA,SAFA,CAAA;AAGA;AACA,KATA;AAUA,IAAA,SAVA,uBAUA;AAAA;;AACA,UAAA,UAAA,GAAA;AACA,QAAA,MAAA,EAAA,KAAA,OAAA,CAAA,MADA;AAEA,QAAA,KAAA,EAAA,KAFA;AAGA,QAAA,QAAA,EAAA,KAAA,OAAA,CAAA,QAAA,GAAA,IAAA,GAAA;AAHA,OAAA;AAKA,MAAA,UAAA,CAAA,YAAA;AACA,YAAA,CAAA,MAAA,CAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,GAAA,QAAA,CAAA,MAAA,CAAA,UAAA,EAAA,UAAA,CAAA;AACA,SAFA,MAEA;AACA,UAAA,MAAA,CAAA,MAAA,CAAA,aAAA,CAAA,UAAA;AACA;AACA,OANA,CAAA;AAOA;AAvBA;AA3BA,CAAA","sourcesContent":["<template>\n  <div>\n    <video :id=\"tcPlayerId\" class=\"tencent-player\" preload=\"auto\" playsinline webkit-playsinline></video>\n  </div>\n</template>\n\n<script>\n    function loadTcScript(cb) {\n        loadScript(cb, {\n            id: 'tcPlayerScriptId',\n            url: '//imgcache.qq.com/open/qcloud/video/tcplayer/tcplayer.min.js',\n        });\n    }\n    function loadScript(cb, obj) {\n        if (document.getElementById(obj.id)) {\n            cb();\n        } else {\n            const script = document.createElement('script');\n            script.async = true;\n            script.src = obj.url;\n            script.id = obj.id;\n            script.onload = () => {\n                cb();\n            };\n            document.body.appendChild(script);\n        }\n    }\n    export default {\n        name: 'TencentPlayer',\n        props: {\n            options: {\n                type: Object,\n                default() {\n                    return {};\n                }\n            }\n        },\n        data() {\n            return {\n                tcPlayerId : 'tcPlayer' + Date.now(),\n                player: null,\n            };\n        },\n        watch: {\n            options: {\n                handler(newV, oldV) {\n                    this.$nextTick(() => {\n                        this.loadJS();\n                    });\n                },\n                immediate: true,\n                deep: true,\n            }\n        },\n        methods: {\n            loadJS() {\n                if (window.TCPlayer) {\n                    this.initVideo();\n                } else {\n                    loadTcScript(() => {\n                        this.initVideo();\n                    });\n                }\n            },\n            initVideo() {\n                const playerParm = {\n                    fileID: this.options.fileId,\n                    appID: 'xxx',\n                    autoplay: this.options.autoplay ? true : false,\n                };\n                setTimeout(() => {\n                    if (!this.player) {\n                        this.player = TCPlayer(this.tcPlayerId, playerParm);\n                    } else {\n                        this.player.loadVideoByID(playerParm);\n                    }\n                });\n            }\n        },\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n  @import url(\"//imgcache.qq.com/open/qcloud/video/tcplayer/tcplayer.css\");\n</style>\n"],"sourceRoot":"src/components"}]}